public abstract class Lscala/PartialFunction$class; {
  
  public static Lscala/PartialFunction; orElse(Lscala/PartialFunction; $this, Lscala/PartialFunction; that$1) {
    return (new (Lscala/PartialFunction$$anon$1;::this(Lscala/PartialFunction;Lscala/PartialFunction;)V;)($this, that$1));
  }
  
  public static Lscala/PartialFunction; andThen(Lscala/PartialFunction; $this, Lscala/Function1; k$1) {
    return (new (Lscala/PartialFunction$$anon$2;::this(Lscala/PartialFunction;Lscala/Function1;)V;)($this, k$1));
  }
  
  public static Lscala/Function1; lift(Lscala/PartialFunction; $this) {
    return (new (Lscala/PartialFunction$$anonfun$lift$1;::this(Lscala/PartialFunction;)V;)($this));
  }
  
  public static V; $init$(Lscala/PartialFunction; $this) {
    
  }
}
