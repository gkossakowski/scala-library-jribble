public class Lscala/reflect/TypeBounds; extends Lscala/reflect/Type; implements Lscala/ScalaObject;, Lscala/Product; {
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/reflect/Type; copy$default$2() {
    return this.(Lscala/reflect/TypeBounds;::hi()Lscala/reflect/Type;)();
  }
  
  public Lscala/reflect/Type; copy$default$1() {
    return this.(Lscala/reflect/TypeBounds;::lo()Lscala/reflect/Type;)();
  }
  
  private Lscala/reflect/Type; lo$u0020;
  
  public Lscala/reflect/Type; lo() {
    return this.(Lscala/reflect/TypeBounds;)lo$u0020;
  }
  
  private Lscala/reflect/Type; hi$u0020;
  
  public Lscala/reflect/Type; hi() {
    return this.(Lscala/reflect/TypeBounds;)hi$u0020;
  }
  
  public Lscala/reflect/TypeBounds; copy(Lscala/reflect/Type; lo, Lscala/reflect/Type; hi) {
    return (new (Lscala/reflect/TypeBounds;::this(Lscala/reflect/Type;Lscala/reflect/Type;)V;)(lo, hi));
  }
  
  public I; hashCode() {
    return this.(Lscala/runtime/ScalaRunTime$;::_hashCode(Lscala/Product;)I;)(this);
  }
  
  public Ljava/lang/String; toString() {
    return this.(Lscala/runtime/ScalaRunTime$;::_toString(Lscala/Product;)Ljava/lang/String;)(this);
  }
  
  public Z; equals(Ljava/lang/Object; x$1) {
    Ljava/lang/Object; temp26 = x$1;
    Z; $19$;
    if (temp26.<instanceof>(Lscala/reflect/TypeBounds;))
      {
        Lscala/reflect/TypeBounds; temp27 = temp26.<cast>(Lscala/reflect/TypeBounds;);
        Lscala/reflect/Type; temp28 = temp27.(Lscala/reflect/TypeBounds;::lo()Lscala/reflect/Type;)();
        Lscala/reflect/Type; temp29 = temp27.(Lscala/reflect/TypeBounds;::hi()Lscala/reflect/Type;)();
        Lscala/reflect/Type; hi$1 = temp29;
        Lscala/reflect/Type; lo$1 = temp28;
        Z; $20$;
        if (this.(Lscala/reflect/TypeBounds;::gd6$1(Lscala/reflect/Type;Lscala/reflect/Type;)Z;)(lo$1, hi$1))
          {
            $20$ = x$1.<cast>(Lscala/reflect/TypeBounds;).(Lscala/Equals;::canEqual(Ljava/lang/Object;)Z;)(this);
          }
        else
          {
            $20$ = false;
          }
        $19$ = $20$;
      }
    else
      {
        $19$ = false;
      }
    return ((this == x$1) || $19$);
  }
  
  public Ljava/lang/String; productPrefix() {
    return "TypeBounds";
  }
  
  public I; productArity() {
    return 2;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp30 = x$1;
    I; $21$ = temp30;
    Ljava/lang/Object; $22$;
    switch ($21$) {
      0: {
        $22$ = this.(Lscala/reflect/TypeBounds;::lo()Lscala/reflect/Type;)();
        break;
      }
      
      1: {
        $22$ = this.(Lscala/reflect/TypeBounds;::hi()Lscala/reflect/Type;)();
        break;
      }
      
      default: {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
        break;
      }
      
    }
    return $22$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/reflect/TypeBounds;);
  }
  
  private final Z; gd6$1(Lscala/reflect/Type; x$1, Lscala/reflect/Type; x$2) {
    return (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$1, this.(Lscala/reflect/TypeBounds;::lo()Lscala/reflect/Type;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$2, this.(Lscala/reflect/TypeBounds;::hi()Lscala/reflect/Type;)()));
  }
  
  public this(Lscala/reflect/Type; lo, Lscala/reflect/Type; hi) {
    this.(Lscala/reflect/TypeBounds;)lo$u0020 = lo;
    this.(Lscala/reflect/TypeBounds;)hi$u0020 = hi;
    (Lscala/reflect/Type;::super()V;)();
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
  }
}
