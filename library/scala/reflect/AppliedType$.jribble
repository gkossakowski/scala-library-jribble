public final class Lscala/reflect/AppliedType$; extends Lscala/runtime/AbstractFunction2; implements Lscala/ScalaObject; {
  public static Lscala/reflect/AppliedType$; MODULE$ = new (Lscala/reflect/AppliedType$;::this()V;)();
  
  public final Ljava/lang/String; toString() {
    return "AppliedType";
  }
  
  public Lscala/Option; unapply(Lscala/reflect/AppliedType; x$0) {
    Lscala/Option; $38$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$0, null))
      {
        $38$ = Lscala/None$;.MODULE$;
      }
    else
      {
        $38$ = (new (Lscala/Some;::this(Ljava/lang/Object;)V;)((new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(x$0.(Lscala/reflect/AppliedType;::tpe()Lscala/reflect/Type;)(), x$0.(Lscala/reflect/AppliedType;::args()Lscala/collection/immutable/List;)()))));
      }
    return $38$;
  }
  
  public Lscala/reflect/AppliedType; apply(Lscala/reflect/Type; tpe, Lscala/collection/immutable/List; args) {
    return (new (Lscala/reflect/AppliedType;::this(Lscala/reflect/Type;Lscala/collection/immutable/List;)V;)(tpe, args));
  }
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1, Ljava/lang/Object; v2) {
    return this.(Lscala/reflect/AppliedType$;::apply(Lscala/reflect/Type;Lscala/collection/immutable/List;)Lscala/reflect/AppliedType;)(v1.<cast>(Lscala/reflect/Type;), v2.<cast>(Lscala/collection/immutable/List;));
  }
  
  public this() {
    (Lscala/runtime/AbstractFunction2;::super()V;)();
  }
}
