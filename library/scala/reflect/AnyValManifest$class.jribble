public abstract class Lscala/reflect/AnyValManifest$class; {
  
  public static Z; $less$colon$less(Lscala/reflect/AnyValManifest; $this, Lscala/reflect/ClassManifest; that) {
    return (((that == $this) || (that == Lscala/reflect/Manifest$;.MODULE$.(Lscala/reflect/Manifest$;::Any()Lscala/reflect/Manifest;)())) || (that == Lscala/reflect/Manifest$;.MODULE$.(Lscala/reflect/Manifest$;::AnyVal()Lscala/reflect/Manifest;)()));
  }
  
  public static Z; canEqual(Lscala/reflect/AnyValManifest; $this, Ljava/lang/Object; other) {
    Ljava/lang/Object; temp5 = other;
    return temp5.<instanceof>(Lscala/reflect/AnyValManifest;);
  }
  
  public static Z; equals(Lscala/reflect/AnyValManifest; $this, Ljava/lang/Object; that) {
    return ($this == that);
  }
  
  public static I; hashCode(Lscala/reflect/AnyValManifest; $this) {
    return Ljava/lang/System;.(Ljava/lang/System;::identityHashCode(Ljava/lang/Object;)I;)($this);
  }
  
  public static V; $init$(Lscala/reflect/AnyValManifest; $this) {
    
  }
}
