public abstract class Lscala/reflect/generic/Trees$class; {
  
  public static Lscala/reflect/generic/Trees$Modifiers; Modifiers(Lscala/reflect/generic/Universe; $this, J; flags, Ljava/lang/Object; privateWithin) {
    return (new (Lscala/reflect/generic/Trees$Modifiers;::this(Lscala/reflect/generic/Universe;J;Ljava/lang/Object;Lscala/collection/immutable/List;Lscala/collection/immutable/Map;)V;)($this, flags, privateWithin, Lscala/collection/immutable/Nil$;.MODULE$, Lscala/Predef$;.MODULE$.(Lscala/Predef$;::Map()Lscala/collection/immutable/Map$;)().(Lscala/collection/immutable/Map$;::empty()Lscala/collection/immutable/Map;)()));
  }
  
  public static Lscala/reflect/generic/Trees$Modifiers; Modifiers(Lscala/reflect/generic/Universe; $this, J; flags) {
    return $this.(Lscala/reflect/generic/Trees;::Modifiers(J;Ljava/lang/Object;)Lscala/reflect/generic/Trees$Modifiers;)(flags, $this.(Lscala/reflect/generic/Names;::mkTypeName(Ljava/lang/Object;)Ljava/lang/Object;)($this.(Lscala/reflect/generic/StdNames;::nme()Lscala/reflect/generic/StdNames$StandardNames;)().(Lscala/reflect/generic/StdNames$StandardNames;::EMPTY()Ljava/lang/Object;)()));
  }
  
  public static Lscala/reflect/generic/Trees$Modifiers; NoMods(Lscala/reflect/generic/Universe; $this) {
    return $this.(Lscala/reflect/generic/Trees;::Modifiers(J;)Lscala/reflect/generic/Trees$Modifiers;)(0L);
  }
  
  public static Lscala/reflect/generic/Trees$Tree; duplicateTree(Lscala/reflect/generic/Universe; $this, Lscala/reflect/generic/Trees$Tree; tree) {
    return tree;
  }
  
  public static Lscala/reflect/generic/Trees$Literal; Literal(Lscala/reflect/generic/Universe; $this, Ljava/lang/Object; value) {
    return (new (Lscala/reflect/generic/Trees$Literal;::this(Lscala/reflect/generic/Universe;Lscala/reflect/generic/Constants$Constant;)V;)($this, (new (Lscala/reflect/generic/Constants$Constant;::this(Lscala/reflect/generic/Universe;Ljava/lang/Object;)V;)($this, value))));
  }
  
  public static V; $init$(Lscala/reflect/generic/Universe; $this) {
    $this.(Lscala/reflect/generic/Trees;::nodeCount_$eq(I;)V;)(0);
  }
}
