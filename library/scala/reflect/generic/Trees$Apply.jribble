public class Lscala/reflect/generic/Trees$Apply; extends Lscala/reflect/generic/Trees$GenericApply; implements Lscala/ScalaObject;, Lscala/Product; {
  
  public Lscala/collection/immutable/List; copy$default$2() {
    return this.(Lscala/reflect/generic/Trees$Apply;::args()Lscala/collection/immutable/List;)();
  }
  
  public Lscala/reflect/generic/Trees$Tree; copy$default$1() {
    return this.(Lscala/reflect/generic/Trees$Apply;::fun()Lscala/reflect/generic/Trees$Tree;)();
  }
  
  private Lscala/reflect/generic/Trees$Tree; fun$u0020;
  
  public Lscala/reflect/generic/Trees$Tree; fun() {
    return this.(Lscala/reflect/generic/Trees$Tree;)fun$u0020;
  }
  
  private Lscala/collection/immutable/List; args$u0020;
  
  public Lscala/collection/immutable/List; args() {
    return this.(Lscala/collection/immutable/List;)args$u0020;
  }
  
  public Lscala/reflect/generic/Symbols$AbsSymbol; symbol() {
    return this.(Lscala/reflect/generic/Trees$Apply;::fun()Lscala/reflect/generic/Trees$Tree;)().(Lscala/reflect/generic/Trees$Tree;::symbol()Lscala/reflect/generic/Symbols$AbsSymbol;)();
  }
  
  public V; symbol_$eq(Lscala/reflect/generic/Symbols$AbsSymbol; sym) {
    this.(Lscala/reflect/generic/Trees$Apply;::fun()Lscala/reflect/generic/Trees$Tree;)().(Lscala/reflect/generic/Trees$Tree;::symbol_$eq(Lscala/reflect/generic/Symbols$AbsSymbol;)V;)(sym);
  }
  
  public Lscala/reflect/generic/Trees$Apply; copy(Lscala/reflect/generic/Trees$Tree; fun, Lscala/collection/immutable/List; args) {
    return (new (Lscala/reflect/generic/Trees$Apply;::this(Lscala/reflect/generic/Universe;Lscala/reflect/generic/Trees$Tree;Lscala/collection/immutable/List;)V;)(this.(Lscala/reflect/generic/Trees$Apply;::scala$reflect$generic$Trees$Apply$$$outer()Lscala/reflect/generic/Universe;)(), fun, args));
  }
  
  public Ljava/lang/String; productPrefix() {
    return "Apply";
  }
  
  public I; productArity() {
    return 2;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp77 = x$1;
    I; $73$ = temp77;
    Ljava/lang/Object; $74$;
    switch ($73$) {
      0: {
        $74$ = this.(Lscala/reflect/generic/Trees$Apply;::fun()Lscala/reflect/generic/Trees$Tree;)();
        break;
      }
      
      1: {
        $74$ = this.(Lscala/reflect/generic/Trees$Apply;::args()Lscala/collection/immutable/List;)();
        break;
      }
      
      default: {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
        break;
      }
      
    }
    return $74$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/reflect/generic/Trees$Apply;);
  }
  
  public Lscala/reflect/generic/Universe; scala$reflect$generic$Trees$Apply$$$outer() {
    return this.(Lscala/reflect/generic/Universe;)$outer$u0020;
  }
  
  public this(Lscala/reflect/generic/Universe; $outer, Lscala/reflect/generic/Trees$Tree; fun, Lscala/collection/immutable/List; args) {
    this.(Lscala/reflect/generic/Trees$Tree;)fun$u0020 = fun;
    this.(Lscala/collection/immutable/List;)args$u0020 = args;
    (Lscala/reflect/generic/Trees$GenericApply;::super(Lscala/reflect/generic/Universe;)V;)($outer);
  }
}
