public abstract class Lscala/reflect/generic/StandardDefinitions$AbsDefinitions; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; RootPackage();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; RootClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; EmptyPackage();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; EmptyPackageClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; ScalaPackage();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; ScalaPackageClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; AnyClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; AnyValClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; AnyRefClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; ObjectClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; NullClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; NothingClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; UnitClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; ByteClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; ShortClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; CharClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; IntClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; LongClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; FloatClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; DoubleClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; BooleanClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; SymbolClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; StringClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; ClassClass();
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; PredefModule();
  
  public abstract Lscala/reflect/generic/Types$AbsType; ClassType(Lscala/reflect/generic/Types$AbsType; arg);
  
  public abstract Ljava/lang/String; signature(Lscala/reflect/generic/Types$AbsType; tp);
  
  public abstract Z; isValueClass(Lscala/reflect/generic/Symbols$AbsSymbol; sym);
  
  public abstract Z; isNumericValueClass(Lscala/reflect/generic/Symbols$AbsSymbol; sym);
  
  protected Lscala/reflect/generic/Universe; $outer$u0020;
  
  public Lscala/reflect/generic/Universe; scala$reflect$generic$StandardDefinitions$AbsDefinitions$$$outer() {
    return this.(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)$outer$u0020;
  }
  
  public this(Lscala/reflect/generic/Universe; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)$outer$u0020 = $outer;
      }
    (Ljava/lang/Object;::super()V;)();
  }
}
