public final class Lscala/reflect/generic/Constants$Constant$$anonfun$escape$1$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final Lscala/collection/mutable/StringBuilder; apply(C; c$1) {
    Lscala/collection/mutable/StringBuilder; $1$;
    if (Lscala/Predef$;.MODULE$.(Lscala/Predef$;::charWrapper(C;)Lscala/runtime/RichChar;)(c$1).(Lscala/runtime/RichChar;::isControl()Z;)())
      {
        $1$ = this.(Lscala/collection/mutable/StringBuilder;)buf$1.(Lscala/collection/mutable/StringBuilder;::append(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(("\\0" + Ljava/lang/Integer;.(Ljava/lang/Integer;::toOctalString(I;)Ljava/lang/String;)(c$1.<cast>(I;))));
      }
    else
      {
        $1$ = this.(Lscala/collection/mutable/StringBuilder;)buf$1.(Lscala/collection/mutable/StringBuilder;::append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;)(this.(Lscala/collection/immutable/Map;)escapes$1.(Lscala/collection/MapLike;::getOrElse(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)(c$1), (new (Lscala/reflect/generic/Constants$Constant$$anonfun$escape$1$1$$anonfun$apply$1;::this(Lscala/reflect/generic/Constants$Constant$$anonfun$escape$1$1;C;)V;)(this, c$1))));
      }
    return $1$;
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/reflect/generic/Constants$Constant$$anonfun$escape$1$1;::apply(C;)Lscala/collection/mutable/StringBuilder;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(v1));
  }
  
  private Lscala/collection/immutable/Map; escapes$1;
  
  private Lscala/collection/mutable/StringBuilder; buf$1;
  
  public this(Lscala/reflect/generic/Constants$Constant; $outer, Lscala/collection/immutable/Map; escapes$1, Lscala/collection/mutable/StringBuilder; buf$1) {
    this.(Lscala/collection/immutable/Map;)escapes$1 = escapes$1;
    this.(Lscala/collection/mutable/StringBuilder;)buf$1 = buf$1;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
