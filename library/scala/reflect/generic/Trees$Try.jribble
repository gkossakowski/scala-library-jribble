public class Lscala/reflect/generic/Trees$Try; extends Lscala/reflect/generic/Trees$Tree; implements Lscala/reflect/generic/Trees$TermTree;, Lscala/ScalaObject;, Lscala/Product; {
  
  public Lscala/reflect/generic/Trees$Tree; copy$default$3() {
    return this.(Lscala/reflect/generic/Trees$Try;::finalizer()Lscala/reflect/generic/Trees$Tree;)();
  }
  
  public Lscala/collection/immutable/List; copy$default$2() {
    return this.(Lscala/reflect/generic/Trees$Try;::catches()Lscala/collection/immutable/List;)();
  }
  
  public Lscala/reflect/generic/Trees$Tree; copy$default$1() {
    return this.(Lscala/reflect/generic/Trees$Try;::block()Lscala/reflect/generic/Trees$Tree;)();
  }
  
  private Lscala/reflect/generic/Trees$Tree; block$u0020;
  
  public Lscala/reflect/generic/Trees$Tree; block() {
    return this.(Lscala/reflect/generic/Trees$Tree;)block$u0020;
  }
  
  private Lscala/collection/immutable/List; catches$u0020;
  
  public Lscala/collection/immutable/List; catches() {
    return this.(Lscala/collection/immutable/List;)catches$u0020;
  }
  
  private Lscala/reflect/generic/Trees$Tree; finalizer$u0020;
  
  public Lscala/reflect/generic/Trees$Tree; finalizer() {
    return this.(Lscala/reflect/generic/Trees$Tree;)finalizer$u0020;
  }
  
  public Lscala/reflect/generic/Trees$Try; copy(Lscala/reflect/generic/Trees$Tree; block, Lscala/collection/immutable/List; catches, Lscala/reflect/generic/Trees$Tree; finalizer) {
    return (new (Lscala/reflect/generic/Trees$Try;::this(Lscala/reflect/generic/Universe;Lscala/reflect/generic/Trees$Tree;Lscala/collection/immutable/List;Lscala/reflect/generic/Trees$Tree;)V;)(this.(Lscala/reflect/generic/Trees$Try;::scala$reflect$generic$Trees$Try$$$outer()Lscala/reflect/generic/Universe;)(), block, catches, finalizer));
  }
  
  public Ljava/lang/String; productPrefix() {
    return "Try";
  }
  
  public I; productArity() {
    return 3;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp72 = x$1;
    I; $65$ = temp72;
    Ljava/lang/Object; $66$;
    switch ($65$) {
      0: {
        $66$ = this.(Lscala/reflect/generic/Trees$Try;::block()Lscala/reflect/generic/Trees$Tree;)();
        break;
      }
      
      1: {
        $66$ = this.(Lscala/reflect/generic/Trees$Try;::catches()Lscala/collection/immutable/List;)();
        break;
      }
      
      2: {
        $66$ = this.(Lscala/reflect/generic/Trees$Try;::finalizer()Lscala/reflect/generic/Trees$Tree;)();
        break;
      }
      
      default: {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
        break;
      }
      
    }
    return $66$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/reflect/generic/Trees$Try;);
  }
  
  public Lscala/reflect/generic/Universe; scala$reflect$generic$Trees$Try$$$outer() {
    return this.(Lscala/reflect/generic/Universe;)$outer$u0020;
  }
  
  public this(Lscala/reflect/generic/Universe; $outer, Lscala/reflect/generic/Trees$Tree; block, Lscala/collection/immutable/List; catches, Lscala/reflect/generic/Trees$Tree; finalizer) {
    this.(Lscala/reflect/generic/Trees$Tree;)block$u0020 = block;
    this.(Lscala/collection/immutable/List;)catches$u0020 = catches;
    this.(Lscala/reflect/generic/Trees$Tree;)finalizer$u0020 = finalizer;
    (Lscala/reflect/generic/Trees$Tree;::super(Lscala/reflect/generic/Universe;)V;)($outer);
  }
}
