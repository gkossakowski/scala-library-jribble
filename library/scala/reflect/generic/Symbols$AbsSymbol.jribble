public abstract class Lscala/reflect/generic/Symbols$AbsSymbol; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  
  public Ljava/lang/Object; newValue$default$2() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Universe;::NoPosition()Ljava/lang/Object;)();
  }
  
  public Ljava/lang/Object; newModuleClass$default$2() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Universe;::NoPosition()Ljava/lang/Object;)();
  }
  
  public Ljava/lang/Object; newModule$default$3() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Universe;::NoPosition()Ljava/lang/Object;)();
  }
  
  public Ljava/lang/Object; newMethod$default$2() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Universe;::NoPosition()Ljava/lang/Object;)();
  }
  
  public Ljava/lang/Object; newClass$default$2() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Universe;::NoPosition()Ljava/lang/Object;)();
  }
  
  public Ljava/lang/Object; newAliasType$default$2() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Universe;::NoPosition()Ljava/lang/Object;)();
  }
  
  public Ljava/lang/Object; newAbstractType$default$2() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Universe;::NoPosition()Ljava/lang/Object;)();
  }
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; owner();
  
  public abstract J; flags();
  
  public abstract Ljava/lang/Object; name();
  
  public abstract Ljava/lang/String; encodedName();
  
  public Ljava/lang/String; decodedName() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::stripLocalSuffix(Ljava/lang/String;)Ljava/lang/String;)(Lscala/reflect/NameTransformer$;.MODULE$.(Lscala/reflect/NameTransformer$;::decode(Ljava/lang/String;)Ljava/lang/String;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::encodedName()Ljava/lang/String;)()));
  }
  
  public final Ljava/lang/String; fullName(C; separator) {
    Ljava/lang/String; $1$;
    if (((this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isRoot()Z;)() || this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isRootPackage()Z;)()) || Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this, this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Symbols;::NoSymbol()Lscala/reflect/generic/Symbols$AbsSymbol;)())))
      {
        $1$ = this.(Ljava/lang/Object;::toString()Ljava/lang/String;)();
      }
    else
      {
        Ljava/lang/String; $2$;
        if (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::owner()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::isEffectiveRoot()Z;)())
          {
            $2$ = this.(Lscala/reflect/generic/Symbols$AbsSymbol;::encodedName()Ljava/lang/String;)();
          }
        else
          {
            $2$ = ((this.(Lscala/reflect/generic/Symbols$AbsSymbol;::owner()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::enclClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::fullName(C;)Ljava/lang/String;)(separator) + Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)(separator)) + this.(Lscala/reflect/generic/Symbols$AbsSymbol;::encodedName()Ljava/lang/String;)());
          }
        $1$ = $2$;
      }
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::stripLocalSuffix(Ljava/lang/String;)Ljava/lang/String;)($1$);
  }
  
  private Ljava/lang/String; stripLocalSuffix(Ljava/lang/String; s) {
    return Lscala/Predef$;.MODULE$.(Lscala/Predef$;::augmentString(Ljava/lang/String;)Lscala/collection/immutable/StringOps;)(s).(Lscala/collection/immutable/StringLike;::stripSuffix(Ljava/lang/String;)Ljava/lang/String;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StdNames;::nme()Lscala/reflect/generic/StdNames$StandardNames;)().(Lscala/reflect/generic/StdNames$StandardNames;::LOCAL_SUFFIX_STRING()Ljava/lang/String;)());
  }
  
  public final Ljava/lang/String; fullName() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::fullName(C;)Ljava/lang/String;)('.');
  }
  
  public final Z; hasFlag(J; mask) {
    return ((this.(Lscala/reflect/generic/Symbols$AbsSymbol;::flags()J;)() & mask) != 0L);
  }
  
  public final Z; hasAllFlags(J; mask) {
    return ((this.(Lscala/reflect/generic/Symbols$AbsSymbol;::flags()J;)() & mask) == mask);
  }
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; privateWithin();
  
  public abstract Lscala/reflect/generic/Types$AbsType; rawInfo();
  
  public Lscala/reflect/generic/Types$AbsType; tpe() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::info()Lscala/reflect/generic/Types$AbsType;)();
  }
  
  public Lscala/reflect/generic/Types$AbsType; info() {
    Lscala/reflect/generic/Types$AbsType; tp = this.(Lscala/reflect/generic/Symbols$AbsSymbol;::rawInfo()Lscala/reflect/generic/Types$AbsType;)();
    tp.(Lscala/reflect/generic/Types$AbsType;::complete(Lscala/reflect/generic/Symbols$AbsSymbol;)V;)(this);
    return tp;
  }
  
  public abstract Lscala/reflect/generic/Types$AbsType; typeOfThis();
  
  public V; owner_$eq(Lscala/reflect/generic/Symbols$AbsSymbol; sym) {
    throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)(("owner_= inapplicable for " + this)));
  }
  
  public V; flags_$eq(J; flags) {
    throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)(("flags_= inapplicable for " + this)));
  }
  
  public V; info_$eq(Lscala/reflect/generic/Types$AbsType; tp) {
    throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)(("info_= inapplicable for " + this)));
  }
  
  public V; typeOfThis_$eq(Lscala/reflect/generic/Types$AbsType; tp) {
    throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)(("typeOfThis_= inapplicable for " + this)));
  }
  
  public V; privateWithin_$eq(Lscala/reflect/generic/Symbols$AbsSymbol; sym) {
    throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)(("privateWithin_= inapplicable for " + this)));
  }
  
  public V; sourceModule_$eq(Lscala/reflect/generic/Symbols$AbsSymbol; sym) {
    throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)(("sourceModule_= inapplicable for " + this)));
  }
  
  public V; addChild(Lscala/reflect/generic/Symbols$AbsSymbol; sym) {
    throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)(("addChild inapplicable for " + this)));
  }
  
  public V; addAnnotation(Ljava/lang/Object; annot) {
    throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)(("addAnnotation inapplicable for " + this)));
  }
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; linkedClassOfClass();
  
  public Lscala/reflect/generic/Symbols$AbsSymbol; sourceModule() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Symbols;::NoSymbol()Lscala/reflect/generic/Symbols$AbsSymbol;)();
  }
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; moduleClass();
  
  public Z; isTerm() {
    return false;
  }
  
  public Z; isType() {
    return false;
  }
  
  public Z; isClass() {
    return false;
  }
  
  public Z; isAliasType() {
    return false;
  }
  
  public Z; isAbstractType() {
    return false;
  }
  
  public Z; isSkolem() {
    return false;
  }
  
  public Z; isTrait() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isClass()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(33554432L));
  }
  
  public final Z; hasDefault() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isParameter()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(33554432L));
  }
  
  public final Z; isAbstractClass() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isClass()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(8L));
  }
  
  public final Z; isAbstractOverride() {
    return ((this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isTerm()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(8L)) && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(2L));
  }
  
  public final Z; isBridge() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(67108864L);
  }
  
  public final Z; isCase() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(2048L);
  }
  
  public final Z; isCaseAccessor() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(16777216L);
  }
  
  public final Z; isContravariant() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isType()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(131072L));
  }
  
  public final Z; isCovariant() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isType()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(65536L));
  }
  
  public final Z; isDeferred() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(16L) && !(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isClass()Z;)()));
  }
  
  public final Z; isEarlyInitialized() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isTerm()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(137438953472L));
  }
  
  public final Z; isExistentiallyBound() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isType()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(34359738368L));
  }
  
  public final Z; isFinal() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(32L);
  }
  
  public final Z; isGetterOrSetter() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(134217728L);
  }
  
  public final Z; isImplClass() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isClass()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(137438953472L));
  }
  
  public final Z; isImplicit() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(512L);
  }
  
  public final Z; isInterface() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(128L);
  }
  
  public final Z; isJavaDefined() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(1048576L);
  }
  
  public final Z; isLazy() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(2147483648L);
  }
  
  public final Z; isMethod() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isTerm()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(64L));
  }
  
  public final Z; isModule() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isTerm()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(256L));
  }
  
  public final Z; isModuleClass() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isClass()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(256L));
  }
  
  public final Z; isMutable() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(4096L);
  }
  
  public final Z; isOverloaded() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(8589934592L);
  }
  
  public final Z; isOverride() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(2L);
  }
  
  public final Z; isParamAccessor() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(536870912L);
  }
  
  public final Z; isParameter() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(8192L);
  }
  
  public final Z; isRefinementClass() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isClass()Z;)() && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::name()Ljava/lang/Object;)(), this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Names;::mkTypeName(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StdNames;::nme()Lscala/reflect/generic/StdNames$StandardNames;)().(Lscala/reflect/generic/StdNames$StandardNames;::REFINE_CLASS_NAME()Ljava/lang/Object;)())));
  }
  
  public final Z; isSealed() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isClass()Z;)() && (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(1024L) || this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::isValueClass(Lscala/reflect/generic/Symbols$AbsSymbol;)Z;)(this)));
  }
  
  public final Z; isSourceMethod() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isTerm()Z;)() && ((this.(Lscala/reflect/generic/Symbols$AbsSymbol;::flags()J;)() & 4194368) == 64));
  }
  
  public final Z; isSuperAccessor() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(268435456L);
  }
  
  public final Z; isSynthetic() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(2097152L);
  }
  
  public final Z; isTypeParameter() {
    return ((this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isType()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isParameter()Z;)()) && !(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isSkolem()Z;)()));
  }
  
  public final Z; isPrivate() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(4L);
  }
  
  public final Z; isPrivateLocal() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(4L) && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(524288L));
  }
  
  public final Z; isProtected() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(1L);
  }
  
  public final Z; isProtectedLocal() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(1L) && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(524288L));
  }
  
  public final Z; isPublic() {
    return (!(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(5L)) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::privateWithin()Lscala/reflect/generic/Symbols$AbsSymbol;)(), this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Symbols;::NoSymbol()Lscala/reflect/generic/Symbols$AbsSymbol;)()));
  }
  
  public final Z; isEmptyPackage() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isPackage()Z;)() && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::name()Ljava/lang/Object;)(), this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StdNames;::nme()Lscala/reflect/generic/StdNames$StandardNames;)().(Lscala/reflect/generic/StdNames$StandardNames;::EMPTY_PACKAGE_NAME()Ljava/lang/Object;)()));
  }
  
  public final Z; isEmptyPackageClass() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isPackageClass()Z;)() && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::name()Ljava/lang/Object;)(), this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Names;::mkTypeName(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StdNames;::nme()Lscala/reflect/generic/StdNames$StandardNames;)().(Lscala/reflect/generic/StdNames$StandardNames;::EMPTY_PACKAGE_NAME()Ljava/lang/Object;)())));
  }
  
  public final Z; isPackage() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isModule()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(16384L));
  }
  
  public final Z; isPackageClass() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isClass()Z;)() && this.(Lscala/reflect/generic/Symbols$AbsSymbol;::hasFlag(J;)Z;)(16384L));
  }
  
  public final Z; isRoot() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isPackageClass()Z;)() && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::owner()Lscala/reflect/generic/Symbols$AbsSymbol;)(), this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Symbols;::NoSymbol()Lscala/reflect/generic/Symbols$AbsSymbol;)()));
  }
  
  public final Z; isRootPackage() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isPackage()Z;)() && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Symbols$AbsSymbol;::owner()Lscala/reflect/generic/Symbols$AbsSymbol;)(), this.(Lscala/reflect/generic/Symbols$AbsSymbol;::scala$reflect$generic$Symbols$AbsSymbol$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/Symbols;::NoSymbol()Lscala/reflect/generic/Symbols$AbsSymbol;)()));
  }
  
  public Z; isEffectiveRoot() {
    return (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isRoot()Z;)() || this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isEmptyPackageClass()Z;)());
  }
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; newAbstractType(Ljava/lang/Object; name, Ljava/lang/Object; pos);
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; newAliasType(Ljava/lang/Object; name, Ljava/lang/Object; pos);
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; newClass(Ljava/lang/Object; name, Ljava/lang/Object; pos);
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; newMethod(Ljava/lang/Object; name, Ljava/lang/Object; pos);
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; newModule(Ljava/lang/Object; name, Lscala/reflect/generic/Symbols$AbsSymbol; clazz, Ljava/lang/Object; pos);
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; newModuleClass(Ljava/lang/Object; name, Ljava/lang/Object; pos);
  
  public abstract Lscala/reflect/generic/Symbols$AbsSymbol; newValue(Ljava/lang/Object; name, Ljava/lang/Object; pos);
  
  public Lscala/reflect/generic/Symbols$AbsSymbol; enclClass() {
    Lscala/reflect/generic/Symbols$AbsSymbol; $3$;
    if (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isClass()Z;)())
      {
        $3$ = this;
      }
    else
      {
        $3$ = this.(Lscala/reflect/generic/Symbols$AbsSymbol;::owner()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::enclClass()Lscala/reflect/generic/Symbols$AbsSymbol;)();
      }
    return $3$;
  }
  
  public Lscala/reflect/generic/Symbols$AbsSymbol; enclMethod() {
    Lscala/reflect/generic/Symbols$AbsSymbol; $4$;
    if (this.(Lscala/reflect/generic/Symbols$AbsSymbol;::isSourceMethod()Z;)())
      {
        $4$ = this;
      }
    else
      {
        $4$ = this.(Lscala/reflect/generic/Symbols$AbsSymbol;::owner()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::enclMethod()Lscala/reflect/generic/Symbols$AbsSymbol;)();
      }
    return $4$;
  }
  
  protected Lscala/reflect/generic/Universe; $outer$u0020;
  
  public Lscala/reflect/generic/Universe; scala$reflect$generic$Symbols$AbsSymbol$$$outer() {
    return this.(Lscala/reflect/generic/Universe;)$outer$u0020;
  }
  
  public this(Lscala/reflect/generic/Universe; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/reflect/generic/Universe;)$outer$u0020 = $outer;
      }
    (Ljava/lang/Object;::super()V;)();
  }
}
