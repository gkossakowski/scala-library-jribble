public class Lscala/reflect/generic/Constants$Constant; extends Ljava/lang/Object; implements Lscala/ScalaObject;, Lscala/Product; {
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Ljava/lang/Object; copy$default$1() {
    return this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)();
  }
  
  private Ljava/lang/Object; value$u0020;
  
  public Ljava/lang/Object; value() {
    return this.(Ljava/lang/Object;)value$u0020;
  }
  
  private I; tag$u0020;
  
  public I; tag() {
    return this.(I;)tag$u0020;
  }
  
  public Z; isNumeric() {
    return ((3 <= this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)()) && (this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() <= 9));
  }
  
  public Lscala/reflect/generic/Types$AbsType; tpe() {
    I; temp1 = this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)();
    I; $2$ = temp1;
    Lscala/reflect/generic/Types$AbsType; $3$;
    switch ($2$) {
      1: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::UnitClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      2: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::BooleanClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      3: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::ByteClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      4: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::ShortClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      5: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::CharClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      6: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::IntClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      7: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::LongClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      8: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::FloatClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      9: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::DoubleClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      10: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::StringClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      11: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::NullClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      12: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::ClassType(Lscala/reflect/generic/Types$AbsType;)Lscala/reflect/generic/Types$AbsType;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)().<cast>(Lscala/reflect/generic/Types$AbsType;));
        break;
      }
      
      13: {
        $3$ = this.(Lscala/reflect/generic/Constants$Constant;::symbolValue()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::owner()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::linkedClassOfClass()Lscala/reflect/generic/Symbols$AbsSymbol;)().(Lscala/reflect/generic/Symbols$AbsSymbol;::tpe()Lscala/reflect/generic/Types$AbsType;)();
        break;
      }
      
      default: {
        throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(temp1)));
        break;
      }
      
    }
    return $3$;
  }
  
  public Z; equals(Ljava/lang/Object; other) {
    Ljava/lang/Object; temp2 = other;
    Z; $4$;
    if ((temp2.<instanceof>(Lscala/reflect/generic/Constants$Constant;) && (temp2.<cast>(Lscala/reflect/generic/Constants$Constant;).(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)() == this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)())))
      {
        Lscala/reflect/generic/Constants$Constant; temp3 = temp2.<cast>(Lscala/reflect/generic/Constants$Constant;);
        Lscala/reflect/generic/Constants$Constant; that = temp3;
        $4$ = ((this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() == that.(Lscala/reflect/generic/Constants$Constant;::tag()I;)()) && (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)(), that.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) || (this.(Lscala/reflect/generic/Constants$Constant;::isNaN()Z;)() && that.(Lscala/reflect/generic/Constants$Constant;::isNaN()Z;)())));
      }
    else
      {
        $4$ = false;
      }
    return $4$;
  }
  
  public Z; isNaN() {
    Ljava/lang/Object; temp5 = this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)();
    Z; $5$;
    if (temp5.<instanceof>(F;))
      {
        $5$ = Lscala/Predef$;.MODULE$.(Lscala/Predef$;::float2Float(F;)Ljava/lang/Float;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToFloat(Ljava/lang/Object;)F;)(temp5)).(Ljava/lang/Float;::isNaN()Z;)();
      }
    else
      {
        Z; $6$;
        if (temp5.<instanceof>(D;))
          {
            $6$ = Lscala/Predef$;.MODULE$.(Lscala/Predef$;::double2Double(D;)Ljava/lang/Double;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToDouble(Ljava/lang/Object;)D;)(temp5)).(Ljava/lang/Double;::isNaN()Z;)();
          }
        else
          {
            $6$ = false;
          }
        $5$ = $6$;
      }
    return $5$;
  }
  
  public Z; booleanValue() {
    Z; $7$;
    if ((this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() == 2))
      {
        $7$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToBoolean(Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)());
      }
    else
      {
        throw (new (Ljava/lang/Error;::this(Ljava/lang/String;)V;)((("value " + this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) + " is not a boolean")));
      }
    return $7$;
  }
  
  public B; byteValue() {
    I; temp8 = this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)();
    I; $8$ = temp8;
    B; $9$;
    switch ($8$) {
      3: {
        $9$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToByte(Ljava/lang/Object;)B;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)());
        break;
      }
      
      4: {
        $9$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToShort(Ljava/lang/Object;)S;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(B;);
        break;
      }
      
      5: {
        $9$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(B;);
        break;
      }
      
      6: {
        $9$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(B;);
        break;
      }
      
      7: {
        $9$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToLong(Ljava/lang/Object;)J;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(B;);
        break;
      }
      
      8: {
        $9$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToFloat(Ljava/lang/Object;)F;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(B;);
        break;
      }
      
      9: {
        $9$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToDouble(Ljava/lang/Object;)D;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(B;);
        break;
      }
      
      default: {
        throw (new (Ljava/lang/Error;::this(Ljava/lang/String;)V;)((("value " + this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) + " is not a Byte")));
        break;
      }
      
    }
    return $9$;
  }
  
  public S; shortValue() {
    I; temp9 = this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)();
    I; $10$ = temp9;
    S; $11$;
    switch ($10$) {
      3: {
        $11$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToByte(Ljava/lang/Object;)B;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(S;);
        break;
      }
      
      4: {
        $11$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToShort(Ljava/lang/Object;)S;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)());
        break;
      }
      
      5: {
        $11$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(S;);
        break;
      }
      
      6: {
        $11$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(S;);
        break;
      }
      
      7: {
        $11$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToLong(Ljava/lang/Object;)J;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(S;);
        break;
      }
      
      8: {
        $11$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToFloat(Ljava/lang/Object;)F;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(S;);
        break;
      }
      
      9: {
        $11$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToDouble(Ljava/lang/Object;)D;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(S;);
        break;
      }
      
      default: {
        throw (new (Ljava/lang/Error;::this(Ljava/lang/String;)V;)((("value " + this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) + " is not a Short")));
        break;
      }
      
    }
    return $11$;
  }
  
  public C; charValue() {
    I; temp10 = this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)();
    I; $12$ = temp10;
    C; $13$;
    switch ($12$) {
      3: {
        $13$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToByte(Ljava/lang/Object;)B;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(C;);
        break;
      }
      
      4: {
        $13$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToShort(Ljava/lang/Object;)S;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(C;);
        break;
      }
      
      5: {
        $13$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)());
        break;
      }
      
      6: {
        $13$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(C;);
        break;
      }
      
      7: {
        $13$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToLong(Ljava/lang/Object;)J;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(C;);
        break;
      }
      
      8: {
        $13$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToFloat(Ljava/lang/Object;)F;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(C;);
        break;
      }
      
      9: {
        $13$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToDouble(Ljava/lang/Object;)D;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(C;);
        break;
      }
      
      default: {
        throw (new (Ljava/lang/Error;::this(Ljava/lang/String;)V;)((("value " + this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) + " is not a Char")));
        break;
      }
      
    }
    return $13$;
  }
  
  public I; intValue() {
    I; temp11 = this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)();
    I; $14$ = temp11;
    I; $15$;
    switch ($14$) {
      3: {
        $15$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToByte(Ljava/lang/Object;)B;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(I;);
        break;
      }
      
      4: {
        $15$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToShort(Ljava/lang/Object;)S;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(I;);
        break;
      }
      
      5: {
        $15$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(I;);
        break;
      }
      
      6: {
        $15$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)());
        break;
      }
      
      7: {
        $15$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToLong(Ljava/lang/Object;)J;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(I;);
        break;
      }
      
      8: {
        $15$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToFloat(Ljava/lang/Object;)F;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(I;);
        break;
      }
      
      9: {
        $15$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToDouble(Ljava/lang/Object;)D;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(I;);
        break;
      }
      
      default: {
        throw (new (Ljava/lang/Error;::this(Ljava/lang/String;)V;)((("value " + this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) + " is not an Int")));
        break;
      }
      
    }
    return $15$;
  }
  
  public J; longValue() {
    I; temp12 = this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)();
    I; $16$ = temp12;
    J; $17$;
    switch ($16$) {
      3: {
        $17$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToByte(Ljava/lang/Object;)B;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(J;);
        break;
      }
      
      4: {
        $17$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToShort(Ljava/lang/Object;)S;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(J;);
        break;
      }
      
      5: {
        $17$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(J;);
        break;
      }
      
      6: {
        $17$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(J;);
        break;
      }
      
      7: {
        $17$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToLong(Ljava/lang/Object;)J;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)());
        break;
      }
      
      8: {
        $17$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToFloat(Ljava/lang/Object;)F;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(J;);
        break;
      }
      
      9: {
        $17$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToDouble(Ljava/lang/Object;)D;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(J;);
        break;
      }
      
      default: {
        throw (new (Ljava/lang/Error;::this(Ljava/lang/String;)V;)((("value " + this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) + " is not a Long")));
        break;
      }
      
    }
    return $17$;
  }
  
  public F; floatValue() {
    I; temp13 = this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)();
    I; $18$ = temp13;
    F; $19$;
    switch ($18$) {
      3: {
        $19$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToByte(Ljava/lang/Object;)B;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(F;);
        break;
      }
      
      4: {
        $19$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToShort(Ljava/lang/Object;)S;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(F;);
        break;
      }
      
      5: {
        $19$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(F;);
        break;
      }
      
      6: {
        $19$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(F;);
        break;
      }
      
      7: {
        $19$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToLong(Ljava/lang/Object;)J;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(F;);
        break;
      }
      
      8: {
        $19$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToFloat(Ljava/lang/Object;)F;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)());
        break;
      }
      
      9: {
        $19$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToDouble(Ljava/lang/Object;)D;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(F;);
        break;
      }
      
      default: {
        throw (new (Ljava/lang/Error;::this(Ljava/lang/String;)V;)((("value " + this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) + " is not a Float")));
        break;
      }
      
    }
    return $19$;
  }
  
  public D; doubleValue() {
    I; temp14 = this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)();
    I; $20$ = temp14;
    D; $21$;
    switch ($20$) {
      3: {
        $21$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToByte(Ljava/lang/Object;)B;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(D;);
        break;
      }
      
      4: {
        $21$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToShort(Ljava/lang/Object;)S;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(D;);
        break;
      }
      
      5: {
        $21$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(D;);
        break;
      }
      
      6: {
        $21$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(D;);
        break;
      }
      
      7: {
        $21$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToLong(Ljava/lang/Object;)J;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(D;);
        break;
      }
      
      8: {
        $21$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToFloat(Ljava/lang/Object;)F;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()).<cast>(D;);
        break;
      }
      
      9: {
        $21$ = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToDouble(Ljava/lang/Object;)D;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)());
        break;
      }
      
      default: {
        throw (new (Ljava/lang/Error;::this(Ljava/lang/String;)V;)((("value " + this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) + " is not a Double")));
        break;
      }
      
    }
    return $21$;
  }
  
  public Lscala/reflect/generic/Constants$Constant; convertTo(Lscala/reflect/generic/Types$AbsType; pt) {
    Lscala/reflect/generic/Symbols$AbsSymbol; target = pt.(Lscala/reflect/generic/Types$AbsType;::typeSymbol()Lscala/reflect/generic/Symbols$AbsSymbol;)();
    Lscala/reflect/generic/Constants$Constant; $22$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(target, this.(Lscala/reflect/generic/Constants$Constant;::tpe()Lscala/reflect/generic/Types$AbsType;)().(Lscala/reflect/generic/Types$AbsType;::typeSymbol()Lscala/reflect/generic/Symbols$AbsSymbol;)()))
      {
        $22$ = this;
      }
    else
      {
        Lscala/reflect/generic/Constants$Constant; $23$;
        if (((((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(target, this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::ByteClass()Lscala/reflect/generic/Symbols$AbsSymbol;)()) && (3 <= this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() <= 6)) && (-128 <= this.(Lscala/reflect/generic/Constants$Constant;::intValue()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::intValue()I;)() <= 127)))
          {
            $23$ = (new (Lscala/reflect/generic/Constants$Constant;::this(Lscala/reflect/generic/Universe;Ljava/lang/Object;)V;)(this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)(), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToByte(B;)Ljava/lang/Byte;)(this.(Lscala/reflect/generic/Constants$Constant;::byteValue()B;)())));
          }
        else
          {
            Lscala/reflect/generic/Constants$Constant; $24$;
            if (((((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(target, this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::ShortClass()Lscala/reflect/generic/Symbols$AbsSymbol;)()) && (3 <= this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() <= 6)) && (-32768 <= this.(Lscala/reflect/generic/Constants$Constant;::intValue()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::intValue()I;)() <= 32767)))
              {
                $24$ = (new (Lscala/reflect/generic/Constants$Constant;::this(Lscala/reflect/generic/Universe;Ljava/lang/Object;)V;)(this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)(), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToShort(S;)Ljava/lang/Short;)(this.(Lscala/reflect/generic/Constants$Constant;::shortValue()S;)())));
              }
            else
              {
                Lscala/reflect/generic/Constants$Constant; $25$;
                if (((((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(target, this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::CharClass()Lscala/reflect/generic/Symbols$AbsSymbol;)()) && (3 <= this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() <= 6)) && (0 <= this.(Lscala/reflect/generic/Constants$Constant;::intValue()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::intValue()I;)() <= 65635)))
                  {
                    $25$ = (new (Lscala/reflect/generic/Constants$Constant;::this(Lscala/reflect/generic/Universe;Ljava/lang/Object;)V;)(this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)(), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)(this.(Lscala/reflect/generic/Constants$Constant;::charValue()C;)())));
                  }
                else
                  {
                    Lscala/reflect/generic/Constants$Constant; $26$;
                    if (((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(target, this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::IntClass()Lscala/reflect/generic/Symbols$AbsSymbol;)()) && (3 <= this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() <= 6)))
                      {
                        $26$ = (new (Lscala/reflect/generic/Constants$Constant;::this(Lscala/reflect/generic/Universe;Ljava/lang/Object;)V;)(this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)(), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(this.(Lscala/reflect/generic/Constants$Constant;::intValue()I;)())));
                      }
                    else
                      {
                        Lscala/reflect/generic/Constants$Constant; $27$;
                        if (((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(target, this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::LongClass()Lscala/reflect/generic/Symbols$AbsSymbol;)()) && (3 <= this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() <= 7)))
                          {
                            $27$ = (new (Lscala/reflect/generic/Constants$Constant;::this(Lscala/reflect/generic/Universe;Ljava/lang/Object;)V;)(this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)(), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToLong(J;)Ljava/lang/Long;)(this.(Lscala/reflect/generic/Constants$Constant;::longValue()J;)())));
                          }
                        else
                          {
                            Lscala/reflect/generic/Constants$Constant; $28$;
                            if (((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(target, this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::FloatClass()Lscala/reflect/generic/Symbols$AbsSymbol;)()) && (3 <= this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() <= 8)))
                              {
                                $28$ = (new (Lscala/reflect/generic/Constants$Constant;::this(Lscala/reflect/generic/Universe;Ljava/lang/Object;)V;)(this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)(), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToFloat(F;)Ljava/lang/Float;)(this.(Lscala/reflect/generic/Constants$Constant;::floatValue()F;)())));
                              }
                            else
                              {
                                Lscala/reflect/generic/Constants$Constant; $29$;
                                if (((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(target, this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::DoubleClass()Lscala/reflect/generic/Symbols$AbsSymbol;)()) && (3 <= this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)())) && (this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() <= 9)))
                                  {
                                    $29$ = (new (Lscala/reflect/generic/Constants$Constant;::this(Lscala/reflect/generic/Universe;Ljava/lang/Object;)V;)(this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)(), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToDouble(D;)Ljava/lang/Double;)(this.(Lscala/reflect/generic/Constants$Constant;::doubleValue()D;)())));
                                  }
                                else
                                  {
                                    $29$ = null;
                                  }
                                $28$ = $29$;
                              }
                            $27$ = $28$;
                          }
                        $26$ = $27$;
                      }
                    $25$ = $26$;
                  }
                $24$ = $25$;
              }
            $23$ = $24$;
          }
        $22$ = $23$;
      }
    return $22$;
  }
  
  public Ljava/lang/String; stringValue() {
    Ljava/lang/String; $30$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)(), null))
      {
        $30$ = "null";
      }
    else
      {
        Ljava/lang/String; $31$;
        if ((this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)() == 12))
          {
            $31$ = this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::signature(Lscala/reflect/generic/Types$AbsType;)Ljava/lang/String;)(this.(Lscala/reflect/generic/Constants$Constant;::typeValue()Lscala/reflect/generic/Types$AbsType;)());
          }
        else
          {
            $31$ = this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)().(Ljava/lang/Object;::toString()Ljava/lang/String;)();
          }
        $30$ = $31$;
      }
    return $30$;
  }
  
  public Ljava/lang/String; escapedStringValue() {
    I; temp15 = this.(Lscala/reflect/generic/Constants$Constant;::tag()I;)();
    I; $32$ = temp15;
    Ljava/lang/String; $33$;
    switch ($32$) {
      5: {
        $33$ = (("\'" + this.(Lscala/reflect/generic/Constants$Constant;::escape$1(Ljava/lang/String;)Ljava/lang/String;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)(this.(Lscala/reflect/generic/Constants$Constant;::charValue()C;)()).(Ljava/lang/Object;::toString()Ljava/lang/String;)())) + "\'");
        break;
      }
      
      7: {
        $33$ = (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToLong(J;)Ljava/lang/Long;)(this.(Lscala/reflect/generic/Constants$Constant;::longValue()J;)()).(Ljava/lang/Object;::toString()Ljava/lang/String;)() + "L");
        break;
      }
      
      10: {
        $33$ = (("\"" + this.(Lscala/reflect/generic/Constants$Constant;::escape$1(Ljava/lang/String;)Ljava/lang/String;)(this.(Lscala/reflect/generic/Constants$Constant;::stringValue()Ljava/lang/String;)())) + "\"");
        break;
      }
      
      11: {
        $33$ = "null";
        break;
      }
      
      12: {
        $33$ = (("classOf[" + this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)().(Lscala/reflect/generic/StandardDefinitions;::definitions()Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;)().(Lscala/reflect/generic/StandardDefinitions$AbsDefinitions;::signature(Lscala/reflect/generic/Types$AbsType;)Ljava/lang/String;)(this.(Lscala/reflect/generic/Constants$Constant;::typeValue()Lscala/reflect/generic/Types$AbsType;)())) + "]");
        break;
      }
      
      default: {
        $33$ = this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)().(Ljava/lang/Object;::toString()Ljava/lang/String;)();
        break;
      }
      
    }
    return $33$;
  }
  
  public Lscala/reflect/generic/Types$AbsType; typeValue() {
    return this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)().<cast>(Lscala/reflect/generic/Types$AbsType;);
  }
  
  public Lscala/reflect/generic/Symbols$AbsSymbol; symbolValue() {
    return this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)().<cast>(Lscala/reflect/generic/Symbols$AbsSymbol;);
  }
  
  public I; hashCode() {
    I; $34$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)(), null))
      {
        $34$ = 0;
      }
    else
      {
        $34$ = ((this.(Lscala/runtime/ScalaRunTime$;::hash(Ljava/lang/Object;)I;)(this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)()) * 41) + 17);
      }
    return $34$;
  }
  
  public Lscala/reflect/generic/Constants$Constant; copy(Ljava/lang/Object; value) {
    return (new (Lscala/reflect/generic/Constants$Constant;::this(Lscala/reflect/generic/Universe;Ljava/lang/Object;)V;)(this.(Lscala/reflect/generic/Constants$Constant;::scala$reflect$generic$Constants$Constant$$$outer()Lscala/reflect/generic/Universe;)(), value));
  }
  
  public Ljava/lang/String; toString() {
    return this.(Lscala/runtime/ScalaRunTime$;::_toString(Lscala/Product;)Ljava/lang/String;)(this);
  }
  
  public Ljava/lang/String; productPrefix() {
    return "Constant";
  }
  
  public I; productArity() {
    return 1;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp16 = x$1;
    Ljava/lang/Object; $35$;
    if ((temp16 == 0))
      {
        $35$ = this.(Lscala/reflect/generic/Constants$Constant;::value()Ljava/lang/Object;)();
      }
    else
      {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
      }
    return $35$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/reflect/generic/Constants$Constant;);
  }
  
  protected Lscala/reflect/generic/Universe; $outer$u0020;
  
  public Lscala/reflect/generic/Universe; scala$reflect$generic$Constants$Constant$$$outer() {
    return this.(Lscala/reflect/generic/Universe;)$outer$u0020;
  }
  
  private final Ljava/lang/String; escape$1(Ljava/lang/String; text) {
    Lscala/collection/immutable/Map; escapes$1 = Lscala/Predef$;.MODULE$.(Lscala/Predef$;::Map()Lscala/collection/immutable/Map$;)().(Lscala/collection/generic/MapFactory;::apply(Lscala/collection/Seq;)Lscala/collection/Map;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::wrapRefArray(Ljava/lang/Object;[)Lscala/collection/mutable/WrappedArray;)(<Lscala/Tuple2;>{Lscala/Predef$;.MODULE$.(Lscala/Predef$;::any2ArrowAssoc(Ljava/lang/Object;)Lscala/Predef$ArrowAssoc;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)('\010')).(Lscala/Predef$ArrowAssoc;::$minus$greater(Ljava/lang/Object;)Lscala/Tuple2;)("\\b"), Lscala/Predef$;.MODULE$.(Lscala/Predef$;::any2ArrowAssoc(Ljava/lang/Object;)Lscala/Predef$ArrowAssoc;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)('\011')).(Lscala/Predef$ArrowAssoc;::$minus$greater(Ljava/lang/Object;)Lscala/Tuple2;)("\\t"), Lscala/Predef$;.MODULE$.(Lscala/Predef$;::any2ArrowAssoc(Ljava/lang/Object;)Lscala/Predef$ArrowAssoc;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)('\012')).(Lscala/Predef$ArrowAssoc;::$minus$greater(Ljava/lang/Object;)Lscala/Tuple2;)("\\n"), Lscala/Predef$;.MODULE$.(Lscala/Predef$;::any2ArrowAssoc(Ljava/lang/Object;)Lscala/Predef$ArrowAssoc;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)('\014')).(Lscala/Predef$ArrowAssoc;::$minus$greater(Ljava/lang/Object;)Lscala/Tuple2;)("\\f"), Lscala/Predef$;.MODULE$.(Lscala/Predef$;::any2ArrowAssoc(Ljava/lang/Object;)Lscala/Predef$ArrowAssoc;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)('\015')).(Lscala/Predef$ArrowAssoc;::$minus$greater(Ljava/lang/Object;)Lscala/Tuple2;)("\\r"), Lscala/Predef$;.MODULE$.(Lscala/Predef$;::any2ArrowAssoc(Ljava/lang/Object;)Lscala/Predef$ArrowAssoc;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)('\"')).(Lscala/Predef$ArrowAssoc;::$minus$greater(Ljava/lang/Object;)Lscala/Tuple2;)("\\\""), Lscala/Predef$;.MODULE$.(Lscala/Predef$;::any2ArrowAssoc(Ljava/lang/Object;)Lscala/Predef$ArrowAssoc;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)('\'')).(Lscala/Predef$ArrowAssoc;::$minus$greater(Ljava/lang/Object;)Lscala/Tuple2;)("\\\'"), Lscala/Predef$;.MODULE$.(Lscala/Predef$;::any2ArrowAssoc(Ljava/lang/Object;)Lscala/Predef$ArrowAssoc;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToCharacter(C;)Ljava/lang/Character;)('\\')).(Lscala/Predef$ArrowAssoc;::$minus$greater(Ljava/lang/Object;)Lscala/Tuple2;)("\\\\")}.<cast>(Ljava/lang/Object;[))).<cast>(Lscala/collection/immutable/Map;);
    Lscala/collection/mutable/StringBuilder; buf$1 = (new (Lscala/collection/mutable/StringBuilder;::this()V;)());
    Lscala/Predef$;.MODULE$.(Lscala/Predef$;::augmentString(Ljava/lang/String;)Lscala/collection/immutable/StringOps;)(text).(Lscala/collection/IndexedSeqLike;::iterator()Lscala/collection/Iterator;)().(Lscala/collection/Iterator;::foreach(Lscala/Function1;)V;)((new (Lscala/reflect/generic/Constants$Constant$$anonfun$escape$1$1;::this(Lscala/reflect/generic/Constants$Constant;Lscala/collection/immutable/Map;Lscala/collection/mutable/StringBuilder;)V;)(this, escapes$1, buf$1)));
    return buf$1.(Lscala/collection/mutable/StringBuilder;::toString()Ljava/lang/String;)();
  }
  
  public this(Lscala/reflect/generic/Universe; $outer, Ljava/lang/Object; value) {
    this.(Ljava/lang/Object;)value$u0020 = value;
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/reflect/generic/Universe;)$outer$u0020 = $outer;
      }
    (Ljava/lang/Object;::super()V;)();
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
    I; $36$;
    if (value.<instanceof>(Lscala/runtime/BoxedUnit;))
      {
        $36$ = 1;
      }
    else
      {
        I; $37$;
        if (value.<instanceof>(Z;))
          {
            $37$ = 2;
          }
        else
          {
            I; $38$;
            if (value.<instanceof>(B;))
              {
                $38$ = 3;
              }
            else
              {
                I; $39$;
                if (value.<instanceof>(S;))
                  {
                    $39$ = 4;
                  }
                else
                  {
                    I; $40$;
                    if (value.<instanceof>(C;))
                      {
                        $40$ = 5;
                      }
                    else
                      {
                        I; $41$;
                        if (value.<instanceof>(I;))
                          {
                            $41$ = 6;
                          }
                        else
                          {
                            I; $42$;
                            if (value.<instanceof>(J;))
                              {
                                $42$ = 7;
                              }
                            else
                              {
                                I; $43$;
                                if (value.<instanceof>(F;))
                                  {
                                    $43$ = 8;
                                  }
                                else
                                  {
                                    I; $44$;
                                    if (value.<instanceof>(D;))
                                      {
                                        $44$ = 9;
                                      }
                                    else
                                      {
                                        I; $45$;
                                        if (value.<instanceof>(Ljava/lang/String;))
                                          {
                                            $45$ = 10;
                                          }
                                        else
                                          {
                                            I; $46$;
                                            if (value.<instanceof>(Lscala/reflect/generic/Types$AbsType;))
                                              {
                                                $46$ = 12;
                                              }
                                            else
                                              {
                                                I; $47$;
                                                if (value.<instanceof>(Lscala/reflect/generic/Symbols$AbsSymbol;))
                                                  {
                                                    $47$ = 13;
                                                  }
                                                else
                                                  {
                                                    I; $48$;
                                                    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(value, null))
                                                      {
                                                        $48$ = 11;
                                                      }
                                                    else
                                                      {
                                                        throw (new (Ljava/lang/Error;::this(Ljava/lang/String;)V;)(("bad constant value: " + value)));
                                                      }
                                                    $47$ = $48$;
                                                  }
                                                $46$ = $47$;
                                              }
                                            $45$ = $46$;
                                          }
                                        $44$ = $45$;
                                      }
                                    $43$ = $44$;
                                  }
                                $42$ = $43$;
                              }
                            $41$ = $42$;
                          }
                        $40$ = $41$;
                      }
                    $39$ = $40$;
                  }
                $38$ = $39$;
              }
            $37$ = $38$;
          }
        $36$ = $37$;
      }
    this.(I;)tag$u0020 = $36$;
  }
}
