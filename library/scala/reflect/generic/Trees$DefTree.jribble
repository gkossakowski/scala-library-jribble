public abstract class Lscala/reflect/generic/Trees$DefTree; extends Lscala/reflect/generic/Trees$Tree; implements Lscala/reflect/generic/Trees$SymTree;, Lscala/ScalaObject; {
  
  public Lscala/reflect/generic/Symbols$AbsSymbol; symbol() {
    return this.(Lscala/reflect/generic/Symbols$AbsSymbol;)symbol$u0020;
  }
  
  private Lscala/reflect/generic/Symbols$AbsSymbol; symbol$u0020;
  
  public V; symbol_$eq(Lscala/reflect/generic/Symbols$AbsSymbol; x$1) {
    this.(Lscala/reflect/generic/Symbols$AbsSymbol;)symbol$u0020 = x$1;
  }
  
  public Z; hasSymbol() {
    return Lscala/reflect/generic/Trees$SymTree$class;.(Lscala/reflect/generic/Trees$SymTree$class;::hasSymbol(Lscala/reflect/generic/Trees$SymTree;)Z;)(this);
  }
  
  public abstract Ljava/lang/Object; name();
  
  public Z; isDef() {
    return true;
  }
  
  public Lscala/reflect/generic/Universe; scala$reflect$generic$Trees$DefTree$$$outer() {
    return this.(Lscala/reflect/generic/Universe;)$outer$u0020;
  }
  
  public Lscala/reflect/generic/Trees; scala$reflect$generic$Trees$SymTree$$$outer() {
    return this.(Lscala/reflect/generic/Trees$DefTree;::scala$reflect$generic$Trees$DefTree$$$outer()Lscala/reflect/generic/Universe;)();
  }
  
  public this(Lscala/reflect/generic/Universe; $outer) {
    (Lscala/reflect/generic/Trees$Tree;::super(Lscala/reflect/generic/Universe;)V;)($outer);
    Lscala/reflect/generic/Trees$SymTree$class;.(Lscala/reflect/generic/Trees$SymTree$class;::$init$(Lscala/reflect/generic/Trees$SymTree;)V;)(this);
  }
}
