public class Lscala/reflect/generic/Trees$SelectFromTypeTree; extends Lscala/reflect/generic/Trees$Tree; implements Lscala/reflect/generic/Trees$TypTree;, Lscala/reflect/generic/Trees$RefTree;, Lscala/ScalaObject;, Lscala/Product; {
  
  public Lscala/reflect/generic/Symbols$AbsSymbol; symbol() {
    return this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;)symbol$u0020;
  }
  
  private Lscala/reflect/generic/Symbols$AbsSymbol; symbol$u0020;
  
  public V; symbol_$eq(Lscala/reflect/generic/Symbols$AbsSymbol; x$1) {
    this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;)symbol$u0020 = x$1;
  }
  
  public Z; hasSymbol() {
    return Lscala/reflect/generic/Trees$SymTree$class;.(Lscala/reflect/generic/Trees$SymTree$class;::hasSymbol(Lscala/reflect/generic/Trees$SymTree;)Z;)(this);
  }
  
  public Ljava/lang/Object; copy$default$2() {
    return this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;::name()Ljava/lang/Object;)();
  }
  
  public Lscala/reflect/generic/Trees$Tree; copy$default$1() {
    return this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;::qualifier()Lscala/reflect/generic/Trees$Tree;)();
  }
  
  private Lscala/reflect/generic/Trees$Tree; qualifier$u0020;
  
  public Lscala/reflect/generic/Trees$Tree; qualifier() {
    return this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;)qualifier$u0020;
  }
  
  private Ljava/lang/Object; name$u0020;
  
  public Ljava/lang/Object; name() {
    return this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;)name$u0020;
  }
  
  public Lscala/reflect/generic/Trees$SelectFromTypeTree; copy(Lscala/reflect/generic/Trees$Tree; qualifier, Ljava/lang/Object; name) {
    return (new (Lscala/reflect/generic/Trees$SelectFromTypeTree;::this(Lscala/reflect/generic/Universe;Lscala/reflect/generic/Trees$Tree;Ljava/lang/Object;)V;)(this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;::scala$reflect$generic$Trees$SelectFromTypeTree$$$outer()Lscala/reflect/generic/Universe;)(), qualifier, name));
  }
  
  public Ljava/lang/String; productPrefix() {
    return "SelectFromTypeTree";
  }
  
  public I; productArity() {
    return 2;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp219 = x$1;
    I; $88$ = temp219;
    Ljava/lang/Object; $89$;
    switch ($88$) {
      0: {
        $89$ = this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;::qualifier()Lscala/reflect/generic/Trees$Tree;)();
        break;
      }
      
      1: {
        $89$ = this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;::name()Ljava/lang/Object;)();
        break;
      }
      
      default: {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
        break;
      }
      
    }
    return $89$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/reflect/generic/Trees$SelectFromTypeTree;);
  }
  
  public Lscala/reflect/generic/Universe; scala$reflect$generic$Trees$SelectFromTypeTree$$$outer() {
    return this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;)$outer$u0020;
  }
  
  public Lscala/reflect/generic/Trees; scala$reflect$generic$Trees$SymTree$$$outer() {
    return this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;::scala$reflect$generic$Trees$SelectFromTypeTree$$$outer()Lscala/reflect/generic/Universe;)();
  }
  
  public this(Lscala/reflect/generic/Universe; $outer, Lscala/reflect/generic/Trees$Tree; qualifier, Ljava/lang/Object; name) {
    this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;)qualifier$u0020 = qualifier;
    this.(Lscala/reflect/generic/Trees$SelectFromTypeTree;)name$u0020 = name;
    (Lscala/reflect/generic/Trees$Tree;::super(Lscala/reflect/generic/Universe;)V;)($outer);
    Lscala/reflect/generic/Trees$SymTree$class;.(Lscala/reflect/generic/Trees$SymTree$class;::$init$(Lscala/reflect/generic/Trees$SymTree;)V;)(this);
  }
}
