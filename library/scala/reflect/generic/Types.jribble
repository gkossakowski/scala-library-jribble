public interface Lscala/reflect/generic/Types; extends Lscala/ScalaObject; {
  
  public Lscala/reflect/generic/Types$AbsType; NoType();
  
  public Lscala/reflect/generic/Types$AbsType; NoPrefix();
  
  public Lscala/reflect/generic/Types$ThisTypeExtractor; ThisType();
  
  public Lscala/reflect/generic/Types$TypeRefExtractor; TypeRef();
  
  public Lscala/reflect/generic/Types$SingleTypeExtractor; SingleType();
  
  public Lscala/reflect/generic/Types$SuperTypeExtractor; SuperType();
  
  public Lscala/reflect/generic/Types$TypeBoundsExtractor; TypeBounds();
  
  public Lscala/reflect/generic/Types$RefinedTypeExtractor; RefinedType();
  
  public Lscala/reflect/generic/Types$ClassInfoTypeExtractor; ClassInfoType();
  
  public Lscala/reflect/generic/Types$ConstantTypeExtractor; ConstantType();
  
  public Lscala/reflect/generic/Types$MethodTypeExtractor; MethodType();
  
  public Lscala/reflect/generic/Types$PolyTypeExtractor; PolyType();
  
  public Lscala/reflect/generic/Types$ExistentialTypeExtractor; ExistentialType();
  
  public Lscala/reflect/generic/Types$AnnotatedTypeExtractor; AnnotatedType();
  
  public I; maxTostringRecursions();
  
  public I; scala$reflect$generic$Types$$tostringRecursions();
  
  public V; scala$reflect$generic$Types$$tostringRecursions_$eq(I; x$1);
}
