public abstract class Lscala/reflect/generic/Universe; extends Ljava/lang/Object; implements Lscala/reflect/generic/Symbols;, Lscala/reflect/generic/Types;, Lscala/reflect/generic/Constants;, Lscala/reflect/generic/Scopes;, Lscala/reflect/generic/Names;, Lscala/reflect/generic/StdNames;, Lscala/reflect/generic/Trees;, Lscala/reflect/generic/AnnotationInfos;, Lscala/reflect/generic/StandardDefinitions;, Lscala/ScalaObject; {
  
  public I; nodeCount() {
    return this.(Lscala/reflect/generic/Universe;)nodeCount$u0020;
  }
  
  private I; nodeCount$u0020;
  
  public V; nodeCount_$eq(I; x$1) {
    this.(Lscala/reflect/generic/Universe;)nodeCount$u0020 = x$1;
  }
  
  private Lscala/reflect/generic/Trees$Modifiers$; Modifiers$module;
  
  public final Lscala/reflect/generic/Trees$Modifiers$; Modifiers() {
    if ((this.(Lscala/reflect/generic/Universe;)Modifiers$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Modifiers$module = (new (Lscala/reflect/generic/Trees$Modifiers$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Modifiers$module;
  }
  
  protected I; bitmap$0 = 0;
  
  public Lscala/reflect/generic/Trees$Modifiers; NoMods() {
    if (((this.(Lscala/reflect/generic/Universe;)bitmap$0 & 1) == 0))
      {
        if (((this.(Lscala/reflect/generic/Universe;)bitmap$0 & 1) == 0))
          {
            this.(Lscala/reflect/generic/Universe;)NoMods$u0020 = Lscala/reflect/generic/Trees$class;.(Lscala/reflect/generic/Trees$class;::NoMods(Lscala/reflect/generic/Universe;)Lscala/reflect/generic/Trees$Modifiers;)(this);
            this.(Lscala/reflect/generic/Universe;)bitmap$0 = (this.(Lscala/reflect/generic/Universe;)bitmap$0 | 1);
          }
      }
    return this.(Lscala/reflect/generic/Universe;)NoMods$u0020;
  }
  
  private Lscala/reflect/generic/Trees$Modifiers; NoMods$u0020;
  
  private Lscala/reflect/generic/Trees$EmptyTree$; EmptyTree$module;
  
  public final Lscala/reflect/generic/Trees$EmptyTree$; EmptyTree() {
    if ((this.(Lscala/reflect/generic/Universe;)EmptyTree$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)EmptyTree$module = (new (Lscala/reflect/generic/Trees$EmptyTree$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)EmptyTree$module;
  }
  
  private Lscala/reflect/generic/Trees$PackageDef$; PackageDef$module;
  
  public final Lscala/reflect/generic/Trees$PackageDef$; PackageDef() {
    if ((this.(Lscala/reflect/generic/Universe;)PackageDef$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)PackageDef$module = (new (Lscala/reflect/generic/Trees$PackageDef$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)PackageDef$module;
  }
  
  private Lscala/reflect/generic/Trees$ClassDef$; ClassDef$module;
  
  public final Lscala/reflect/generic/Trees$ClassDef$; ClassDef() {
    if ((this.(Lscala/reflect/generic/Universe;)ClassDef$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)ClassDef$module = (new (Lscala/reflect/generic/Trees$ClassDef$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)ClassDef$module;
  }
  
  private Lscala/reflect/generic/Trees$ModuleDef$; ModuleDef$module;
  
  public final Lscala/reflect/generic/Trees$ModuleDef$; ModuleDef() {
    if ((this.(Lscala/reflect/generic/Universe;)ModuleDef$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)ModuleDef$module = (new (Lscala/reflect/generic/Trees$ModuleDef$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)ModuleDef$module;
  }
  
  private Lscala/reflect/generic/Trees$ValDef$; ValDef$module;
  
  public final Lscala/reflect/generic/Trees$ValDef$; ValDef() {
    if ((this.(Lscala/reflect/generic/Universe;)ValDef$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)ValDef$module = (new (Lscala/reflect/generic/Trees$ValDef$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)ValDef$module;
  }
  
  private Lscala/reflect/generic/Trees$DefDef$; DefDef$module;
  
  public final Lscala/reflect/generic/Trees$DefDef$; DefDef() {
    if ((this.(Lscala/reflect/generic/Universe;)DefDef$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)DefDef$module = (new (Lscala/reflect/generic/Trees$DefDef$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)DefDef$module;
  }
  
  private Lscala/reflect/generic/Trees$TypeDef$; TypeDef$module;
  
  public final Lscala/reflect/generic/Trees$TypeDef$; TypeDef() {
    if ((this.(Lscala/reflect/generic/Universe;)TypeDef$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)TypeDef$module = (new (Lscala/reflect/generic/Trees$TypeDef$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)TypeDef$module;
  }
  
  private Lscala/reflect/generic/Trees$LabelDef$; LabelDef$module;
  
  public final Lscala/reflect/generic/Trees$LabelDef$; LabelDef() {
    if ((this.(Lscala/reflect/generic/Universe;)LabelDef$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)LabelDef$module = (new (Lscala/reflect/generic/Trees$LabelDef$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)LabelDef$module;
  }
  
  private Lscala/reflect/generic/Trees$ImportSelector$; ImportSelector$module;
  
  public final Lscala/reflect/generic/Trees$ImportSelector$; ImportSelector() {
    if ((this.(Lscala/reflect/generic/Universe;)ImportSelector$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)ImportSelector$module = (new (Lscala/reflect/generic/Trees$ImportSelector$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)ImportSelector$module;
  }
  
  private Lscala/reflect/generic/Trees$Import$; Import$module;
  
  public final Lscala/reflect/generic/Trees$Import$; Import() {
    if ((this.(Lscala/reflect/generic/Universe;)Import$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Import$module = (new (Lscala/reflect/generic/Trees$Import$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Import$module;
  }
  
  private Lscala/reflect/generic/Trees$Template$; Template$module;
  
  public final Lscala/reflect/generic/Trees$Template$; Template() {
    if ((this.(Lscala/reflect/generic/Universe;)Template$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Template$module = (new (Lscala/reflect/generic/Trees$Template$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Template$module;
  }
  
  private Lscala/reflect/generic/Trees$Block$; Block$module;
  
  public final Lscala/reflect/generic/Trees$Block$; Block() {
    if ((this.(Lscala/reflect/generic/Universe;)Block$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Block$module = (new (Lscala/reflect/generic/Trees$Block$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Block$module;
  }
  
  private Lscala/reflect/generic/Trees$CaseDef$; CaseDef$module;
  
  public final Lscala/reflect/generic/Trees$CaseDef$; CaseDef() {
    if ((this.(Lscala/reflect/generic/Universe;)CaseDef$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)CaseDef$module = (new (Lscala/reflect/generic/Trees$CaseDef$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)CaseDef$module;
  }
  
  private Lscala/reflect/generic/Trees$Alternative$; Alternative$module;
  
  public final Lscala/reflect/generic/Trees$Alternative$; Alternative() {
    if ((this.(Lscala/reflect/generic/Universe;)Alternative$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Alternative$module = (new (Lscala/reflect/generic/Trees$Alternative$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Alternative$module;
  }
  
  private Lscala/reflect/generic/Trees$Star$; Star$module;
  
  public final Lscala/reflect/generic/Trees$Star$; Star() {
    if ((this.(Lscala/reflect/generic/Universe;)Star$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Star$module = (new (Lscala/reflect/generic/Trees$Star$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Star$module;
  }
  
  private Lscala/reflect/generic/Trees$Bind$; Bind$module;
  
  public final Lscala/reflect/generic/Trees$Bind$; Bind() {
    if ((this.(Lscala/reflect/generic/Universe;)Bind$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Bind$module = (new (Lscala/reflect/generic/Trees$Bind$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Bind$module;
  }
  
  private Lscala/reflect/generic/Trees$UnApply$; UnApply$module;
  
  public final Lscala/reflect/generic/Trees$UnApply$; UnApply() {
    if ((this.(Lscala/reflect/generic/Universe;)UnApply$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)UnApply$module = (new (Lscala/reflect/generic/Trees$UnApply$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)UnApply$module;
  }
  
  private Lscala/reflect/generic/Trees$ArrayValue$; ArrayValue$module;
  
  public final Lscala/reflect/generic/Trees$ArrayValue$; ArrayValue() {
    if ((this.(Lscala/reflect/generic/Universe;)ArrayValue$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)ArrayValue$module = (new (Lscala/reflect/generic/Trees$ArrayValue$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)ArrayValue$module;
  }
  
  private Lscala/reflect/generic/Trees$Function$; Function$module;
  
  public final Lscala/reflect/generic/Trees$Function$; Function() {
    if ((this.(Lscala/reflect/generic/Universe;)Function$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Function$module = (new (Lscala/reflect/generic/Trees$Function$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Function$module;
  }
  
  private Lscala/reflect/generic/Trees$Assign$; Assign$module;
  
  public final Lscala/reflect/generic/Trees$Assign$; Assign() {
    if ((this.(Lscala/reflect/generic/Universe;)Assign$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Assign$module = (new (Lscala/reflect/generic/Trees$Assign$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Assign$module;
  }
  
  private Lscala/reflect/generic/Trees$If$; If$module;
  
  public final Lscala/reflect/generic/Trees$If$; If() {
    if ((this.(Lscala/reflect/generic/Universe;)If$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)If$module = (new (Lscala/reflect/generic/Trees$If$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)If$module;
  }
  
  private Lscala/reflect/generic/Trees$Match$; Match$module;
  
  public final Lscala/reflect/generic/Trees$Match$; Match() {
    if ((this.(Lscala/reflect/generic/Universe;)Match$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Match$module = (new (Lscala/reflect/generic/Trees$Match$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Match$module;
  }
  
  private Lscala/reflect/generic/Trees$Return$; Return$module;
  
  public final Lscala/reflect/generic/Trees$Return$; Return() {
    if ((this.(Lscala/reflect/generic/Universe;)Return$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Return$module = (new (Lscala/reflect/generic/Trees$Return$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Return$module;
  }
  
  private Lscala/reflect/generic/Trees$Try$; Try$module;
  
  public final Lscala/reflect/generic/Trees$Try$; Try() {
    if ((this.(Lscala/reflect/generic/Universe;)Try$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Try$module = (new (Lscala/reflect/generic/Trees$Try$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Try$module;
  }
  
  private Lscala/reflect/generic/Trees$Throw$; Throw$module;
  
  public final Lscala/reflect/generic/Trees$Throw$; Throw() {
    if ((this.(Lscala/reflect/generic/Universe;)Throw$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Throw$module = (new (Lscala/reflect/generic/Trees$Throw$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Throw$module;
  }
  
  private Lscala/reflect/generic/Trees$New$; New$module;
  
  public final Lscala/reflect/generic/Trees$New$; New() {
    if ((this.(Lscala/reflect/generic/Universe;)New$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)New$module = (new (Lscala/reflect/generic/Trees$New$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)New$module;
  }
  
  private Lscala/reflect/generic/Trees$Typed$; Typed$module;
  
  public final Lscala/reflect/generic/Trees$Typed$; Typed() {
    if ((this.(Lscala/reflect/generic/Universe;)Typed$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Typed$module = (new (Lscala/reflect/generic/Trees$Typed$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Typed$module;
  }
  
  private Lscala/reflect/generic/Trees$TypeApply$; TypeApply$module;
  
  public final Lscala/reflect/generic/Trees$TypeApply$; TypeApply() {
    if ((this.(Lscala/reflect/generic/Universe;)TypeApply$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)TypeApply$module = (new (Lscala/reflect/generic/Trees$TypeApply$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)TypeApply$module;
  }
  
  private Lscala/reflect/generic/Trees$Apply$; Apply$module;
  
  public final Lscala/reflect/generic/Trees$Apply$; Apply() {
    if ((this.(Lscala/reflect/generic/Universe;)Apply$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Apply$module = (new (Lscala/reflect/generic/Trees$Apply$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Apply$module;
  }
  
  private Lscala/reflect/generic/Trees$ApplyDynamic$; ApplyDynamic$module;
  
  public final Lscala/reflect/generic/Trees$ApplyDynamic$; ApplyDynamic() {
    if ((this.(Lscala/reflect/generic/Universe;)ApplyDynamic$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)ApplyDynamic$module = (new (Lscala/reflect/generic/Trees$ApplyDynamic$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)ApplyDynamic$module;
  }
  
  private Lscala/reflect/generic/Trees$Super$; Super$module;
  
  public final Lscala/reflect/generic/Trees$Super$; Super() {
    if ((this.(Lscala/reflect/generic/Universe;)Super$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Super$module = (new (Lscala/reflect/generic/Trees$Super$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Super$module;
  }
  
  private Lscala/reflect/generic/Trees$This$; This$module;
  
  public final Lscala/reflect/generic/Trees$This$; This() {
    if ((this.(Lscala/reflect/generic/Universe;)This$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)This$module = (new (Lscala/reflect/generic/Trees$This$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)This$module;
  }
  
  private Lscala/reflect/generic/Trees$Select$; Select$module;
  
  public final Lscala/reflect/generic/Trees$Select$; Select() {
    if ((this.(Lscala/reflect/generic/Universe;)Select$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Select$module = (new (Lscala/reflect/generic/Trees$Select$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Select$module;
  }
  
  private Lscala/reflect/generic/Trees$Ident$; Ident$module;
  
  public final Lscala/reflect/generic/Trees$Ident$; Ident() {
    if ((this.(Lscala/reflect/generic/Universe;)Ident$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Ident$module = (new (Lscala/reflect/generic/Trees$Ident$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Ident$module;
  }
  
  private Lscala/reflect/generic/Trees$Literal$; Literal$module;
  
  public final Lscala/reflect/generic/Trees$Literal$; Literal() {
    if ((this.(Lscala/reflect/generic/Universe;)Literal$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Literal$module = (new (Lscala/reflect/generic/Trees$Literal$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Literal$module;
  }
  
  private Lscala/reflect/generic/Trees$Annotated$; Annotated$module;
  
  public final Lscala/reflect/generic/Trees$Annotated$; Annotated() {
    if ((this.(Lscala/reflect/generic/Universe;)Annotated$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Annotated$module = (new (Lscala/reflect/generic/Trees$Annotated$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Annotated$module;
  }
  
  private Lscala/reflect/generic/Trees$SingletonTypeTree$; SingletonTypeTree$module;
  
  public final Lscala/reflect/generic/Trees$SingletonTypeTree$; SingletonTypeTree() {
    if ((this.(Lscala/reflect/generic/Universe;)SingletonTypeTree$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)SingletonTypeTree$module = (new (Lscala/reflect/generic/Trees$SingletonTypeTree$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)SingletonTypeTree$module;
  }
  
  private Lscala/reflect/generic/Trees$SelectFromTypeTree$; SelectFromTypeTree$module;
  
  public final Lscala/reflect/generic/Trees$SelectFromTypeTree$; SelectFromTypeTree() {
    if ((this.(Lscala/reflect/generic/Universe;)SelectFromTypeTree$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)SelectFromTypeTree$module = (new (Lscala/reflect/generic/Trees$SelectFromTypeTree$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)SelectFromTypeTree$module;
  }
  
  private Lscala/reflect/generic/Trees$CompoundTypeTree$; CompoundTypeTree$module;
  
  public final Lscala/reflect/generic/Trees$CompoundTypeTree$; CompoundTypeTree() {
    if ((this.(Lscala/reflect/generic/Universe;)CompoundTypeTree$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)CompoundTypeTree$module = (new (Lscala/reflect/generic/Trees$CompoundTypeTree$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)CompoundTypeTree$module;
  }
  
  private Lscala/reflect/generic/Trees$AppliedTypeTree$; AppliedTypeTree$module;
  
  public final Lscala/reflect/generic/Trees$AppliedTypeTree$; AppliedTypeTree() {
    if ((this.(Lscala/reflect/generic/Universe;)AppliedTypeTree$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)AppliedTypeTree$module = (new (Lscala/reflect/generic/Trees$AppliedTypeTree$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)AppliedTypeTree$module;
  }
  
  private Lscala/reflect/generic/Trees$TypeBoundsTree$; TypeBoundsTree$module;
  
  public final Lscala/reflect/generic/Trees$TypeBoundsTree$; TypeBoundsTree() {
    if ((this.(Lscala/reflect/generic/Universe;)TypeBoundsTree$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)TypeBoundsTree$module = (new (Lscala/reflect/generic/Trees$TypeBoundsTree$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)TypeBoundsTree$module;
  }
  
  private Lscala/reflect/generic/Trees$ExistentialTypeTree$; ExistentialTypeTree$module;
  
  public final Lscala/reflect/generic/Trees$ExistentialTypeTree$; ExistentialTypeTree() {
    if ((this.(Lscala/reflect/generic/Universe;)ExistentialTypeTree$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)ExistentialTypeTree$module = (new (Lscala/reflect/generic/Trees$ExistentialTypeTree$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)ExistentialTypeTree$module;
  }
  
  private Lscala/reflect/generic/Trees$SelectFromArray$; SelectFromArray$module;
  
  public final Lscala/reflect/generic/Trees$SelectFromArray$; SelectFromArray() {
    if ((this.(Lscala/reflect/generic/Universe;)SelectFromArray$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)SelectFromArray$module = (new (Lscala/reflect/generic/Trees$SelectFromArray$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)SelectFromArray$module;
  }
  
  public Lscala/reflect/generic/Trees$Modifiers; Modifiers(J; flags, Ljava/lang/Object; privateWithin) {
    return Lscala/reflect/generic/Trees$class;.(Lscala/reflect/generic/Trees$class;::Modifiers(Lscala/reflect/generic/Universe;J;Ljava/lang/Object;)Lscala/reflect/generic/Trees$Modifiers;)(this, flags, privateWithin);
  }
  
  public Lscala/reflect/generic/Trees$Modifiers; Modifiers(J; flags) {
    return Lscala/reflect/generic/Trees$class;.(Lscala/reflect/generic/Trees$class;::Modifiers(Lscala/reflect/generic/Universe;J;)Lscala/reflect/generic/Trees$Modifiers;)(this, flags);
  }
  
  public Lscala/reflect/generic/Trees$Tree; duplicateTree(Lscala/reflect/generic/Trees$Tree; tree) {
    return Lscala/reflect/generic/Trees$class;.(Lscala/reflect/generic/Trees$class;::duplicateTree(Lscala/reflect/generic/Universe;Lscala/reflect/generic/Trees$Tree;)Lscala/reflect/generic/Trees$Tree;)(this, tree);
  }
  
  public Lscala/reflect/generic/Trees$Literal; Literal(Ljava/lang/Object; value) {
    return Lscala/reflect/generic/Trees$class;.(Lscala/reflect/generic/Trees$class;::Literal(Lscala/reflect/generic/Universe;Ljava/lang/Object;)Lscala/reflect/generic/Trees$Literal;)(this, value);
  }
  
  public final I; NoTag() {
    return 0;
  }
  
  public final I; UnitTag() {
    return 1;
  }
  
  public final I; BooleanTag() {
    return 2;
  }
  
  public final I; ByteTag() {
    return 3;
  }
  
  public final I; ShortTag() {
    return 4;
  }
  
  public final I; CharTag() {
    return 5;
  }
  
  public final I; IntTag() {
    return 6;
  }
  
  public final I; LongTag() {
    return 7;
  }
  
  public final I; FloatTag() {
    return 8;
  }
  
  public final I; DoubleTag() {
    return 9;
  }
  
  public final I; StringTag() {
    return 10;
  }
  
  public final I; NullTag() {
    return 11;
  }
  
  public final I; ClassTag() {
    return 12;
  }
  
  public final I; EnumTag() {
    return 13;
  }
  
  private Lscala/reflect/generic/Constants$Constant$; Constant$module;
  
  public final Lscala/reflect/generic/Constants$Constant$; Constant() {
    if ((this.(Lscala/reflect/generic/Universe;)Constant$module == null))
      {
        this.(Lscala/reflect/generic/Universe;)Constant$module = (new (Lscala/reflect/generic/Constants$Constant$;::this(Lscala/reflect/generic/Universe;)V;)(this));
      }
    return this.(Lscala/reflect/generic/Universe;)Constant$module;
  }
  
  public final I; maxTostringRecursions() {
    return 50;
  }
  
  public final I; scala$reflect$generic$Types$$tostringRecursions() {
    return this.(Lscala/reflect/generic/Universe;)scala$reflect$generic$Types$$tostringRecursions$u0020;
  }
  
  private I; scala$reflect$generic$Types$$tostringRecursions$u0020;
  
  public final V; scala$reflect$generic$Types$$tostringRecursions_$eq(I; x$1) {
    this.(Lscala/reflect/generic/Universe;)scala$reflect$generic$Types$$tostringRecursions$u0020 = x$1;
  }
  
  public abstract Ljava/lang/Object; NoPosition();
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
    Lscala/reflect/generic/Symbols$class;.(Lscala/reflect/generic/Symbols$class;::$init$(Lscala/reflect/generic/Universe;)V;)(this);
    Lscala/reflect/generic/Types$class;.(Lscala/reflect/generic/Types$class;::$init$(Lscala/reflect/generic/Universe;)V;)(this);
    Lscala/reflect/generic/Constants$class;.(Lscala/reflect/generic/Constants$class;::$init$(Lscala/reflect/generic/Universe;)V;)(this);
    Lscala/reflect/generic/Scopes$class;.(Lscala/reflect/generic/Scopes$class;::$init$(Lscala/reflect/generic/Universe;)V;)(this);
    Lscala/reflect/generic/StdNames$class;.(Lscala/reflect/generic/StdNames$class;::$init$(Lscala/reflect/generic/Universe;)V;)(this);
    Lscala/reflect/generic/Trees$class;.(Lscala/reflect/generic/Trees$class;::$init$(Lscala/reflect/generic/Universe;)V;)(this);
    Lscala/reflect/generic/AnnotationInfos$class;.(Lscala/reflect/generic/AnnotationInfos$class;::$init$(Lscala/reflect/generic/Universe;)V;)(this);
    Lscala/reflect/generic/StandardDefinitions$class;.(Lscala/reflect/generic/StandardDefinitions$class;::$init$(Lscala/reflect/generic/Universe;)V;)(this);
  }
}
