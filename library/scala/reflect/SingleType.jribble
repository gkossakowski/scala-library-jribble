public class Lscala/reflect/SingleType; extends Lscala/reflect/Type; implements Lscala/ScalaObject;, Lscala/Product; {
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/reflect/Symbol; copy$default$2() {
    return this.(Lscala/reflect/SingleType;::sym()Lscala/reflect/Symbol;)();
  }
  
  public Lscala/reflect/Type; copy$default$1() {
    return this.(Lscala/reflect/SingleType;::pre()Lscala/reflect/Type;)();
  }
  
  private Lscala/reflect/Type; pre$u0020;
  
  public Lscala/reflect/Type; pre() {
    return this.(Lscala/reflect/SingleType;)pre$u0020;
  }
  
  private Lscala/reflect/Symbol; sym$u0020;
  
  public Lscala/reflect/Symbol; sym() {
    return this.(Lscala/reflect/SingleType;)sym$u0020;
  }
  
  public Lscala/reflect/SingleType; copy(Lscala/reflect/Type; pre, Lscala/reflect/Symbol; sym) {
    return (new (Lscala/reflect/SingleType;::this(Lscala/reflect/Type;Lscala/reflect/Symbol;)V;)(pre, sym));
  }
  
  public I; hashCode() {
    return this.(Lscala/runtime/ScalaRunTime$;::_hashCode(Lscala/Product;)I;)(this);
  }
  
  public Ljava/lang/String; toString() {
    return this.(Lscala/runtime/ScalaRunTime$;::_toString(Lscala/Product;)Ljava/lang/String;)(this);
  }
  
  public Z; equals(Ljava/lang/Object; x$1) {
    Ljava/lang/Object; temp12 = x$1;
    Z; $8$;
    if (temp12.<instanceof>(Lscala/reflect/SingleType;))
      {
        Lscala/reflect/SingleType; temp13 = temp12.<cast>(Lscala/reflect/SingleType;);
        Lscala/reflect/Type; temp14 = temp13.(Lscala/reflect/SingleType;::pre()Lscala/reflect/Type;)();
        Lscala/reflect/Symbol; temp15 = temp13.(Lscala/reflect/SingleType;::sym()Lscala/reflect/Symbol;)();
        Lscala/reflect/Symbol; sym$2 = temp15;
        Lscala/reflect/Type; pre$2 = temp14;
        Z; $9$;
        if (this.(Lscala/reflect/SingleType;::gd3$1(Lscala/reflect/Type;Lscala/reflect/Symbol;)Z;)(pre$2, sym$2))
          {
            $9$ = x$1.<cast>(Lscala/reflect/SingleType;).(Lscala/Equals;::canEqual(Ljava/lang/Object;)Z;)(this);
          }
        else
          {
            $9$ = false;
          }
        $8$ = $9$;
      }
    else
      {
        $8$ = false;
      }
    return ((this == x$1) || $8$);
  }
  
  public Ljava/lang/String; productPrefix() {
    return "SingleType";
  }
  
  public I; productArity() {
    return 2;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp16 = x$1;
    I; $10$ = temp16;
    Ljava/lang/Object; $11$;
    switch ($10$) {
      0: {
        $11$ = this.(Lscala/reflect/SingleType;::pre()Lscala/reflect/Type;)();
        break;
      }
      
      1: {
        $11$ = this.(Lscala/reflect/SingleType;::sym()Lscala/reflect/Symbol;)();
        break;
      }
      
      default: {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
        break;
      }
      
    }
    return $11$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/reflect/SingleType;);
  }
  
  private final Z; gd3$1(Lscala/reflect/Type; x$1, Lscala/reflect/Symbol; x$2) {
    return (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$1, this.(Lscala/reflect/SingleType;::pre()Lscala/reflect/Type;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$2, this.(Lscala/reflect/SingleType;::sym()Lscala/reflect/Symbol;)()));
  }
  
  public this(Lscala/reflect/Type; pre, Lscala/reflect/Symbol; sym) {
    this.(Lscala/reflect/SingleType;)pre$u0020 = pre;
    this.(Lscala/reflect/SingleType;)sym$u0020 = sym;
    (Lscala/reflect/Type;::super()V;)();
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
  }
}
