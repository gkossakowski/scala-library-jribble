public class Lscala/reflect/MethodType; extends Lscala/reflect/Type; implements Lscala/ScalaObject;, Lscala/Product; {
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/reflect/Type; copy$default$2() {
    return this.(Lscala/reflect/MethodType;::restpe()Lscala/reflect/Type;)();
  }
  
  public Lscala/collection/immutable/List; copy$default$1() {
    return this.(Lscala/reflect/MethodType;::formals()Lscala/collection/immutable/List;)();
  }
  
  private Lscala/collection/immutable/List; formals$u0020;
  
  public Lscala/collection/immutable/List; formals() {
    return this.(Lscala/collection/immutable/List;)formals$u0020;
  }
  
  private Lscala/reflect/Type; restpe$u0020;
  
  public Lscala/reflect/Type; restpe() {
    return this.(Lscala/reflect/Type;)restpe$u0020;
  }
  
  public Lscala/reflect/MethodType; copy(Lscala/collection/immutable/List; formals, Lscala/reflect/Type; restpe) {
    return (new (Lscala/reflect/MethodType;::this(Lscala/collection/immutable/List;Lscala/reflect/Type;)V;)(formals, restpe));
  }
  
  public I; hashCode() {
    return this.(Lscala/runtime/ScalaRunTime$;::_hashCode(Lscala/Product;)I;)(this);
  }
  
  public Ljava/lang/String; toString() {
    return this.(Lscala/runtime/ScalaRunTime$;::_toString(Lscala/Product;)Ljava/lang/String;)(this);
  }
  
  public Z; equals(Ljava/lang/Object; x$1) {
    Ljava/lang/Object; temp31 = x$1;
    Z; $23$;
    if (temp31.<instanceof>(Lscala/reflect/MethodType;))
      {
        Lscala/reflect/MethodType; temp32 = temp31.<cast>(Lscala/reflect/MethodType;);
        Lscala/collection/immutable/List; temp33 = temp32.(Lscala/reflect/MethodType;::formals()Lscala/collection/immutable/List;)();
        Lscala/reflect/Type; temp34 = temp32.(Lscala/reflect/MethodType;::restpe()Lscala/reflect/Type;)();
        Lscala/reflect/Type; restpe$1 = temp34;
        Lscala/collection/immutable/List; formals$1 = temp33;
        Z; $24$;
        if (this.(Lscala/reflect/MethodType;::gd7$1(Lscala/collection/immutable/List;Lscala/reflect/Type;)Z;)(formals$1, restpe$1))
          {
            $24$ = x$1.<cast>(Lscala/reflect/MethodType;).(Lscala/Equals;::canEqual(Ljava/lang/Object;)Z;)(this);
          }
        else
          {
            $24$ = false;
          }
        $23$ = $24$;
      }
    else
      {
        $23$ = false;
      }
    return ((this == x$1) || $23$);
  }
  
  public Ljava/lang/String; productPrefix() {
    return "MethodType";
  }
  
  public I; productArity() {
    return 2;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp35 = x$1;
    I; $25$ = temp35;
    Ljava/lang/Object; $26$;
    switch ($25$) {
      0: {
        $26$ = this.(Lscala/reflect/MethodType;::formals()Lscala/collection/immutable/List;)();
        break;
      }
      
      1: {
        $26$ = this.(Lscala/reflect/MethodType;::restpe()Lscala/reflect/Type;)();
        break;
      }
      
      default: {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
        break;
      }
      
    }
    return $26$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/reflect/MethodType;);
  }
  
  private final Z; gd7$1(Lscala/collection/immutable/List; x$1, Lscala/reflect/Type; x$2) {
    return (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$1, this.(Lscala/reflect/MethodType;::formals()Lscala/collection/immutable/List;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$2, this.(Lscala/reflect/MethodType;::restpe()Lscala/reflect/Type;)()));
  }
  
  public this(Lscala/collection/immutable/List; formals, Lscala/reflect/Type; restpe) {
    this.(Lscala/collection/immutable/List;)formals$u0020 = formals;
    this.(Lscala/reflect/Type;)restpe$u0020 = restpe;
    (Lscala/reflect/Type;::super()V;)();
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
  }
}
