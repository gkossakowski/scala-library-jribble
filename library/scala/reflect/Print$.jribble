public final class Lscala/reflect/Print$; extends Ljava/lang/Object; implements Lscala/Function1;, Lscala/ScalaObject; {
  public static Lscala/reflect/Print$; MODULE$ = new (Lscala/reflect/Print$;::this()V;)();
  
  public Ljava/lang/String; toString() {
    return Lscala/Function1$class;.(Lscala/Function1$class;::toString(Lscala/Function1;)Ljava/lang/String;)(this);
  }
  
  public Lscala/Function1; compose(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Ljava/lang/String; apply(Ljava/lang/Object; any) {
    Ljava/lang/Object; temp1 = any;
    Ljava/lang/String; $1$;
    if (temp1.<instanceof>(Lscala/reflect/Code;))
      {
        $1$ = this.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp1.<cast>(Lscala/reflect/Code;).(Lscala/reflect/Code;::tree()Lscala/reflect/Tree;)());
      }
    else
      {
        Ljava/lang/String; $2$;
        if (temp1.<instanceof>(Lscala/reflect/Tree;))
          {
            $2$ = this.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp1.<cast>(Lscala/reflect/Tree;));
          }
        else
          {
            Ljava/lang/String; $3$;
            if (temp1.<instanceof>(Lscala/reflect/Symbol;))
              {
                $3$ = this.(Lscala/reflect/Print$;::apply(Lscala/reflect/Symbol;)Ljava/lang/String;)(temp1.<cast>(Lscala/reflect/Symbol;));
              }
            else
              {
                Ljava/lang/String; $4$;
                if (temp1.<instanceof>(Lscala/reflect/Type;))
                  {
                    $4$ = this.(Lscala/reflect/Print$;::apply(Lscala/reflect/Type;)Ljava/lang/String;)(temp1.<cast>(Lscala/reflect/Type;));
                  }
                else
                  {
                    $4$ = "UnknownAny";
                  }
                $3$ = $4$;
              }
            $2$ = $3$;
          }
        $1$ = $2$;
      }
    return $1$;
  }
  
  public Ljava/lang/String; apply(Lscala/reflect/Tree; tree) {
    Lscala/reflect/Tree; temp8 = tree;
    Ljava/lang/String; $5$;
    if (temp8.<instanceof>(Lscala/reflect/Ident;))
      {
        $5$ = Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Symbol;)Ljava/lang/String;)(temp8.<cast>(Lscala/reflect/Ident;).(Lscala/reflect/Ident;::sym()Lscala/reflect/Symbol;)());
      }
    else
      {
        Ljava/lang/String; $6$;
        if (temp8.<instanceof>(Lscala/reflect/Select;))
          {
            Lscala/reflect/Select; temp11 = temp8.<cast>(Lscala/reflect/Select;);
            $6$ = ((Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp11.(Lscala/reflect/Select;::qual()Lscala/reflect/Tree;)()) + ".") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Symbol;)Ljava/lang/String;)(temp11.(Lscala/reflect/Select;::sym()Lscala/reflect/Symbol;)()));
          }
        else
          {
            Ljava/lang/String; $7$;
            if (temp8.<instanceof>(Lscala/reflect/Literal;))
              {
                Lscala/reflect/Literal; temp14 = temp8.<cast>(Lscala/reflect/Literal;);
                Ljava/lang/Object; temp15 = temp14.(Lscala/reflect/Literal;::value()Ljava/lang/Object;)();
                Ljava/lang/Object; value = temp15;
                Ljava/lang/Object; temp6 = value;
                Ljava/lang/String; $8$;
                if (temp6.<instanceof>(Ljava/lang/String;))
                  {
                    $8$ = (("\"" + temp6.<cast>(Ljava/lang/String;)) + "\"");
                  }
                else
                  {
                    $8$ = value.(Ljava/lang/Object;::toString()Ljava/lang/String;)();
                  }
                $7$ = $8$;
              }
            else
              {
                Ljava/lang/String; $9$;
                if (temp8.<instanceof>(Lscala/reflect/Apply;))
                  {
                    Lscala/reflect/Apply; temp16 = temp8.<cast>(Lscala/reflect/Apply;);
                    $9$ = (Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp16.(Lscala/reflect/Apply;::fun()Lscala/reflect/Tree;)()) + temp16.(Lscala/reflect/Apply;::args()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(Lscala/reflect/Print$;.MODULE$, Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/TraversableOnce;).(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)("(", ", ", ")"));
                  }
                else
                  {
                    Ljava/lang/String; $10$;
                    if (temp8.<instanceof>(Lscala/reflect/TypeApply;))
                      {
                        Lscala/reflect/TypeApply; temp19 = temp8.<cast>(Lscala/reflect/TypeApply;);
                        $10$ = (Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp19.(Lscala/reflect/TypeApply;::fun()Lscala/reflect/Tree;)()) + temp19.(Lscala/reflect/TypeApply;::args()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(Lscala/reflect/Print$;.MODULE$, Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/TraversableOnce;).(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)("[", ", ", "]"));
                      }
                    else
                      {
                        Ljava/lang/String; $11$;
                        if (temp8.<instanceof>(Lscala/reflect/Function;))
                          {
                            Lscala/reflect/Function; temp22 = temp8.<cast>(Lscala/reflect/Function;);
                            $11$ = ((temp22.(Lscala/reflect/Function;::params()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(Lscala/reflect/Print$;.MODULE$, Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/TraversableOnce;).(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)("(", ", ", ")") + " => ") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp22.(Lscala/reflect/Function;::body()Lscala/reflect/Tree;)()));
                          }
                        else
                          {
                            Ljava/lang/String; $12$;
                            if (temp8.<instanceof>(Lscala/reflect/This;))
                              {
                                $12$ = (Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Symbol;)Ljava/lang/String;)(temp8.<cast>(Lscala/reflect/This;).(Lscala/reflect/This;::sym()Lscala/reflect/Symbol;)()) + ".this");
                              }
                            else
                              {
                                Ljava/lang/String; $13$;
                                if (temp8.<instanceof>(Lscala/reflect/Block;))
                                  {
                                    Lscala/reflect/Block; temp27 = temp8.<cast>(Lscala/reflect/Block;);
                                    Lscala/collection/immutable/List; temp28 = temp27.(Lscala/reflect/Block;::stats()Lscala/collection/immutable/List;)();
                                    Lscala/collection/immutable/List; stats = temp28;
                                    Lscala/collection/immutable/List; x$1 = stats;
                                    $13$ = Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::apply(Lscala/collection/Seq;)Lscala/collection/immutable/List;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::wrapRefArray(Ljava/lang/Object;[)Lscala/collection/mutable/WrappedArray;)(<Lscala/reflect/Tree;>{temp27.(Lscala/reflect/Block;::expr()Lscala/reflect/Tree;)()}.<cast>(Ljava/lang/Object;[))).(Lscala/collection/immutable/List;::$colon$colon$colon(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;)(x$1).(Lscala/collection/TraversableLike;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(Lscala/reflect/Print$;.MODULE$, Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/TraversableOnce;).(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)("{\012", ";\012", "\012}");
                                  }
                                else
                                  {
                                    Ljava/lang/String; $14$;
                                    if (temp8.<instanceof>(Lscala/reflect/New;))
                                      {
                                        $14$ = ("new " + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp8.<cast>(Lscala/reflect/New;).(Lscala/reflect/New;::sym()Lscala/reflect/Tree;)()));
                                      }
                                    else
                                      {
                                        Ljava/lang/String; $15$;
                                        if (temp8.<instanceof>(Lscala/reflect/If;))
                                          {
                                            Lscala/reflect/If; temp32 = temp8.<cast>(Lscala/reflect/If;);
                                            $15$ = ((((("if (" + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp32.(Lscala/reflect/If;::condition()Lscala/reflect/Tree;)())) + ") ") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp32.(Lscala/reflect/If;::trueCase()Lscala/reflect/Tree;)())) + " else ") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp32.(Lscala/reflect/If;::falseCase()Lscala/reflect/Tree;)()));
                                          }
                                        else
                                          {
                                            Ljava/lang/String; $16$;
                                            if (temp8.<instanceof>(Lscala/reflect/Assign;))
                                              {
                                                Lscala/reflect/Assign; temp36 = temp8.<cast>(Lscala/reflect/Assign;);
                                                Lscala/reflect/Tree; temp37 = temp36.(Lscala/reflect/Assign;::destination()Lscala/reflect/Tree;)();
                                                Lscala/reflect/Tree; temp38 = temp36.(Lscala/reflect/Assign;::source()Lscala/reflect/Tree;)();
                                                Ljava/lang/String; $17$;
                                                if ((temp37 != null))
                                                  {
                                                    Ljava/lang/String; $18$;
                                                    if ((temp38 != null))
                                                      {
                                                        $18$ = ((Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp37) + " = ") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp38));
                                                      }
                                                    else
                                                      {
                                                        $18$ = "???";
                                                      }
                                                    $17$ = $18$;
                                                  }
                                                else
                                                  {
                                                    $17$ = "???";
                                                  }
                                                $16$ = $17$;
                                              }
                                            else
                                              {
                                                Ljava/lang/String; $19$;
                                                if (temp8.<instanceof>(Lscala/reflect/Target;))
                                                  {
                                                    Lscala/reflect/Target; temp39 = temp8.<cast>(Lscala/reflect/Target;);
                                                    $19$ = (((("target " + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Symbol;)Ljava/lang/String;)(temp39.(Lscala/reflect/Target;::sym()Lscala/reflect/LabelSymbol;)())) + " {\012") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Tree;)Ljava/lang/String;)(temp39.(Lscala/reflect/Target;::body()Lscala/reflect/Tree;)())) + "\012}");
                                                  }
                                                else
                                                  {
                                                    Ljava/lang/String; $20$;
                                                    if (temp8.<instanceof>(Lscala/reflect/Goto;))
                                                      {
                                                        $20$ = ("goto " + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Symbol;)Ljava/lang/String;)(temp8.<cast>(Lscala/reflect/Goto;).(Lscala/reflect/Goto;::target()Lscala/reflect/LabelSymbol;)()));
                                                      }
                                                    else
                                                      {
                                                        $20$ = "???";
                                                      }
                                                    $19$ = $20$;
                                                  }
                                                $16$ = $19$;
                                              }
                                            $15$ = $16$;
                                          }
                                        $14$ = $15$;
                                      }
                                    $13$ = $14$;
                                  }
                                $12$ = $13$;
                              }
                            $11$ = $12$;
                          }
                        $10$ = $11$;
                      }
                    $9$ = $10$;
                  }
                $7$ = $9$;
              }
            $6$ = $7$;
          }
        $5$ = $6$;
      }
    return $5$;
  }
  
  public Ljava/lang/String; apply(Lscala/reflect/Symbol; symbol) {
    Lscala/reflect/Symbol; temp44 = symbol;
    Ljava/lang/String; $21$;
    if (temp44.<instanceof>(Lscala/reflect/Class;))
      {
        Lscala/reflect/Class; temp45 = temp44.<cast>(Lscala/reflect/Class;);
        Ljava/lang/String; temp46 = temp45.(Lscala/reflect/Class;::fullname()Ljava/lang/String;)();
        Ljava/lang/String; name = temp46;
        $21$ = name.(Ljava/lang/String;::substring(I;)Ljava/lang/String;)((name.(Ljava/lang/String;::lastIndexOf(I;)I;)(46) + 1));
      }
    else
      {
        Ljava/lang/String; $22$;
        if (temp44.<instanceof>(Lscala/reflect/Method;))
          {
            Lscala/reflect/Method; temp47 = temp44.<cast>(Lscala/reflect/Method;);
            Ljava/lang/String; temp48 = temp47.(Lscala/reflect/Method;::fullname()Ljava/lang/String;)();
            Ljava/lang/String; name = temp48;
            $22$ = name.(Ljava/lang/String;::substring(I;)Ljava/lang/String;)((name.(Ljava/lang/String;::lastIndexOf(I;)I;)(46) + 1));
          }
        else
          {
            Ljava/lang/String; $23$;
            if (temp44.<instanceof>(Lscala/reflect/Field;))
              {
                Lscala/reflect/Field; temp50 = temp44.<cast>(Lscala/reflect/Field;);
                Ljava/lang/String; temp51 = temp50.(Lscala/reflect/Field;::fullname()Ljava/lang/String;)();
                Ljava/lang/String; name = temp51;
                $23$ = name.(Ljava/lang/String;::substring(I;)Ljava/lang/String;)((name.(Ljava/lang/String;::lastIndexOf(I;)I;)(46) + 1));
              }
            else
              {
                Ljava/lang/String; $24$;
                if (temp44.<instanceof>(Lscala/reflect/TypeField;))
                  {
                    Lscala/reflect/TypeField; temp53 = temp44.<cast>(Lscala/reflect/TypeField;);
                    Ljava/lang/String; temp54 = temp53.(Lscala/reflect/TypeField;::fullname()Ljava/lang/String;)();
                    Ljava/lang/String; name = temp54;
                    $24$ = name.(Ljava/lang/String;::substring(I;)Ljava/lang/String;)((name.(Ljava/lang/String;::lastIndexOf(I;)I;)(46) + 1));
                  }
                else
                  {
                    Ljava/lang/String; $25$;
                    if (temp44.<instanceof>(Lscala/reflect/LocalValue;))
                      {
                        Lscala/reflect/LocalValue; temp56 = temp44.<cast>(Lscala/reflect/LocalValue;);
                        Ljava/lang/String; temp58 = temp56.(Lscala/reflect/LocalValue;::name()Ljava/lang/String;)();
                        Ljava/lang/String; name = temp58;
                        $25$ = name.(Ljava/lang/String;::substring(I;)Ljava/lang/String;)((name.(Ljava/lang/String;::lastIndexOf(I;)I;)(46) + 1));
                      }
                    else
                      {
                        Ljava/lang/String; $26$;
                        if (temp44.<instanceof>(Lscala/reflect/LocalMethod;))
                          {
                            Lscala/reflect/LocalMethod; temp60 = temp44.<cast>(Lscala/reflect/LocalMethod;);
                            Ljava/lang/String; temp62 = temp60.(Lscala/reflect/LocalMethod;::name()Ljava/lang/String;)();
                            Ljava/lang/String; name = temp62;
                            $26$ = name.(Ljava/lang/String;::substring(I;)Ljava/lang/String;)((name.(Ljava/lang/String;::lastIndexOf(I;)I;)(46) + 1));
                          }
                        else
                          {
                            Ljava/lang/String; $27$;
                            if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/reflect/NoSymbol$;.MODULE$, temp44))
                              {
                                $27$ = "NoSymbol";
                              }
                            else
                              {
                                Ljava/lang/String; $28$;
                                if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/reflect/RootSymbol$;.MODULE$, temp44))
                                  {
                                    $28$ = "RootSymbol";
                                  }
                                else
                                  {
                                    Ljava/lang/String; $29$;
                                    if (temp44.<instanceof>(Lscala/reflect/LabelSymbol;))
                                      {
                                        $29$ = temp44.<cast>(Lscala/reflect/LabelSymbol;).(Lscala/reflect/LabelSymbol;::name()Ljava/lang/String;)();
                                      }
                                    else
                                      {
                                        $29$ = "???";
                                      }
                                    $28$ = $29$;
                                  }
                                $27$ = $28$;
                              }
                            $26$ = $27$;
                          }
                        $25$ = $26$;
                      }
                    $24$ = $25$;
                  }
                $23$ = $24$;
              }
            $22$ = $23$;
          }
        $21$ = $22$;
      }
    return $21$;
  }
  
  public Ljava/lang/String; apply(Lscala/reflect/Type; datatype) {
    Lscala/reflect/Type; temp71 = datatype;
    Ljava/lang/String; $30$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/reflect/NoPrefix$;.MODULE$, temp71))
      {
        $30$ = "NoPrefix";
      }
    else
      {
        Ljava/lang/String; $31$;
        if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/reflect/NoType$;.MODULE$, temp71))
          {
            $31$ = "NoType";
          }
        else
          {
            Ljava/lang/String; $32$;
            if (temp71.<instanceof>(Lscala/reflect/NamedType;))
              {
                $32$ = (("(named: " + temp71.<cast>(Lscala/reflect/NamedType;).(Lscala/reflect/NamedType;::fullname()Ljava/lang/String;)()) + ")");
              }
            else
              {
                Ljava/lang/String; $33$;
                if (temp71.<instanceof>(Lscala/reflect/PrefixedType;))
                  {
                    Lscala/reflect/PrefixedType; temp76 = temp71.<cast>(Lscala/reflect/PrefixedType;);
                    $33$ = (((("(" + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Type;)Ljava/lang/String;)(temp76.(Lscala/reflect/PrefixedType;::pre()Lscala/reflect/Type;)())) + ".") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Symbol;)Ljava/lang/String;)(temp76.(Lscala/reflect/PrefixedType;::sym()Lscala/reflect/Symbol;)())) + ")");
                  }
                else
                  {
                    Ljava/lang/String; $34$;
                    if (temp71.<instanceof>(Lscala/reflect/SingleType;))
                      {
                        Lscala/reflect/SingleType; temp79 = temp71.<cast>(Lscala/reflect/SingleType;);
                        $34$ = (((("(" + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Type;)Ljava/lang/String;)(temp79.(Lscala/reflect/SingleType;::pre()Lscala/reflect/Type;)())) + ".") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Symbol;)Ljava/lang/String;)(temp79.(Lscala/reflect/SingleType;::sym()Lscala/reflect/Symbol;)())) + ")");
                      }
                    else
                      {
                        Ljava/lang/String; $35$;
                        if (temp71.<instanceof>(Lscala/reflect/ThisType;))
                          {
                            $35$ = (("(" + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Symbol;)Ljava/lang/String;)(temp71.<cast>(Lscala/reflect/ThisType;).(Lscala/reflect/ThisType;::clazz()Lscala/reflect/Symbol;)())) + ".this.type)");
                          }
                        else
                          {
                            Ljava/lang/String; $36$;
                            if (temp71.<instanceof>(Lscala/reflect/AppliedType;))
                              {
                                Lscala/reflect/AppliedType; temp84 = temp71.<cast>(Lscala/reflect/AppliedType;);
                                $36$ = (Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Type;)Ljava/lang/String;)(temp84.(Lscala/reflect/AppliedType;::tpe()Lscala/reflect/Type;)()) + temp84.(Lscala/reflect/AppliedType;::args()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(Lscala/reflect/Print$;.MODULE$, Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/TraversableOnce;).(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)("[", ", ", "]"));
                              }
                            else
                              {
                                Ljava/lang/String; $37$;
                                if (temp71.<instanceof>(Lscala/reflect/TypeBounds;))
                                  {
                                    Lscala/reflect/TypeBounds; temp87 = temp71.<cast>(Lscala/reflect/TypeBounds;);
                                    $37$ = (((("[" + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Type;)Ljava/lang/String;)(temp87.(Lscala/reflect/TypeBounds;::lo()Lscala/reflect/Type;)())) + " ... ") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Type;)Ljava/lang/String;)(temp87.(Lscala/reflect/TypeBounds;::hi()Lscala/reflect/Type;)())) + "]");
                                  }
                                else
                                  {
                                    Ljava/lang/String; $38$;
                                    if (temp71.<instanceof>(Lscala/reflect/MethodType;))
                                      {
                                        Lscala/reflect/MethodType; temp90 = temp71.<cast>(Lscala/reflect/MethodType;);
                                        $38$ = ((temp90.(Lscala/reflect/MethodType;::formals()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(Lscala/reflect/Print$;.MODULE$, Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/TraversableOnce;).(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)("(", ", ", ")") + " => ") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Type;)Ljava/lang/String;)(temp90.(Lscala/reflect/MethodType;::restpe()Lscala/reflect/Type;)()));
                                      }
                                    else
                                      {
                                        Ljava/lang/String; $39$;
                                        if (temp71.<instanceof>(Lscala/reflect/PolyType;))
                                          {
                                            Lscala/reflect/PolyType; temp93 = temp71.<cast>(Lscala/reflect/PolyType;);
                                            Lscala/collection/immutable/List; temp94 = temp93.(Lscala/reflect/PolyType;::typeParams()Lscala/collection/immutable/List;)();
                                            Lscala/collection/immutable/List; temp95 = temp93.(Lscala/reflect/PolyType;::typeBounds()Lscala/collection/immutable/List;)();
                                            Lscala/collection/immutable/List; typeParams = temp94;
                                            Lscala/collection/immutable/List; typeBounds = temp95;
                                            Lscala/collection/immutable/List; z = (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(typeParams, typeBounds)).(Lscala/Tuple2;::zip(Lscala/Function1;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(Lscala/Predef$;.MODULE$.(Lscala/Predef$;::conforms()Lscala/Predef$$less$colon$less;)(), Lscala/Predef$;.MODULE$.(Lscala/Predef$;::conforms()Lscala/Predef$$less$colon$less;)(), Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/TraversableLike;).(Lscala/collection/TraversableLike;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)((new (Lscala/reflect/Print$$anonfun$1;::this()V;)()), Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/immutable/List;);
                                            $39$ = ((z.(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)("[", ", ", "]") + " -> ") + Lscala/reflect/Print$;.MODULE$.(Lscala/reflect/Print$;::apply(Lscala/reflect/Type;)Ljava/lang/String;)(temp93.(Lscala/reflect/PolyType;::resultType()Lscala/reflect/Type;)()));
                                          }
                                        else
                                          {
                                            $39$ = "???";
                                          }
                                        $38$ = $39$;
                                      }
                                    $37$ = $38$;
                                  }
                                $36$ = $37$;
                              }
                            $35$ = $36$;
                          }
                        $34$ = $35$;
                      }
                    $33$ = $34$;
                  }
                $32$ = $33$;
              }
            $31$ = $32$;
          }
        $30$ = $31$;
      }
    return $30$;
  }
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/reflect/Print$;::apply(Ljava/lang/Object;)Ljava/lang/String;)(v1);
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
    Lscala/Function1$class;.(Lscala/Function1$class;::$init$(Lscala/Function1;)V;)(this);
  }
}
