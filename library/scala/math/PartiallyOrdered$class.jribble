public abstract class Lscala/math/PartiallyOrdered$class; {
  
  public static Z; $less(Lscala/math/PartiallyOrdered; $this, Ljava/lang/Object; that, Lscala/Function1; evidence$2) {
    Lscala/Option; temp1 = $this.(Lscala/math/PartiallyOrdered;::tryCompareTo(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;)(that, evidence$2);
    return (temp1.<instanceof>(Lscala/Some;) && Lscala/math/PartiallyOrdered$class;.(Lscala/math/PartiallyOrdered$class;::gd1$1(Lscala/math/PartiallyOrdered;I;)Z;)($this, Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(temp1.<cast>(Lscala/Some;).(Lscala/Some;::x()Ljava/lang/Object;)())));
  }
  
  public static Z; $greater(Lscala/math/PartiallyOrdered; $this, Ljava/lang/Object; that, Lscala/Function1; evidence$3) {
    Lscala/Option; temp4 = $this.(Lscala/math/PartiallyOrdered;::tryCompareTo(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;)(that, evidence$3);
    return (temp4.<instanceof>(Lscala/Some;) && Lscala/math/PartiallyOrdered$class;.(Lscala/math/PartiallyOrdered$class;::gd2$1(Lscala/math/PartiallyOrdered;I;)Z;)($this, Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(temp4.<cast>(Lscala/Some;).(Lscala/Some;::x()Ljava/lang/Object;)())));
  }
  
  public static Z; $less$eq(Lscala/math/PartiallyOrdered; $this, Ljava/lang/Object; that, Lscala/Function1; evidence$4) {
    Lscala/Option; temp7 = $this.(Lscala/math/PartiallyOrdered;::tryCompareTo(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;)(that, evidence$4);
    return (temp7.<instanceof>(Lscala/Some;) && Lscala/math/PartiallyOrdered$class;.(Lscala/math/PartiallyOrdered$class;::gd3$1(Lscala/math/PartiallyOrdered;I;)Z;)($this, Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(temp7.<cast>(Lscala/Some;).(Lscala/Some;::x()Ljava/lang/Object;)())));
  }
  
  public static Z; $greater$eq(Lscala/math/PartiallyOrdered; $this, Ljava/lang/Object; that, Lscala/Function1; evidence$5) {
    Lscala/Option; temp10 = $this.(Lscala/math/PartiallyOrdered;::tryCompareTo(Ljava/lang/Object;Lscala/Function1;)Lscala/Option;)(that, evidence$5);
    return (temp10.<instanceof>(Lscala/Some;) && Lscala/math/PartiallyOrdered$class;.(Lscala/math/PartiallyOrdered$class;::gd4$1(Lscala/math/PartiallyOrdered;I;)Z;)($this, Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(temp10.<cast>(Lscala/Some;).(Lscala/Some;::x()Ljava/lang/Object;)())));
  }
  
  private static final Z; gd1$1(Lscala/math/PartiallyOrdered; $this, I; x$1) {
    return (x$1 < 0);
  }
  
  private static final Z; gd2$1(Lscala/math/PartiallyOrdered; $this, I; x$1) {
    return (x$1 > 0);
  }
  
  private static final Z; gd3$1(Lscala/math/PartiallyOrdered; $this, I; x$1) {
    return (x$1 <= 0);
  }
  
  private static final Z; gd4$1(Lscala/math/PartiallyOrdered; $this, I; x$1) {
    return (x$1 >= 0);
  }
  
  public static V; $init$(Lscala/math/PartiallyOrdered; $this) {
    
  }
}
