public final class Lscala/math/Ordering$$anon$12; extends Ljava/lang/Object; implements Lscala/math/Ordering; {
  
  public Lscala/Some; tryCompare(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::tryCompare(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;)(this, x, y);
  }
  
  public Z; lteq(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::lteq(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;)(this, x, y);
  }
  
  public Z; gteq(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::gteq(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;)(this, x, y);
  }
  
  public Z; lt(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::lt(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;)(this, x, y);
  }
  
  public Z; gt(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::gt(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;)(this, x, y);
  }
  
  public Z; equiv(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::equiv(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Z;)(this, x, y);
  }
  
  public Ljava/lang/Object; max(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::max(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)(this, x, y);
  }
  
  public Ljava/lang/Object; min(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::min(Lscala/math/Ordering;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)(this, x, y);
  }
  
  public Lscala/math/Ordering; reverse() {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::reverse(Lscala/math/Ordering;)Lscala/math/Ordering;)(this);
  }
  
  public Lscala/math/Ordering; on(Lscala/Function1; f) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::on(Lscala/math/Ordering;Lscala/Function1;)Lscala/math/Ordering;)(this, f);
  }
  
  public Lscala/math/Ordering$Ops; mkOrderingOps(Ljava/lang/Object; lhs) {
    return Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::mkOrderingOps(Lscala/math/Ordering;Ljava/lang/Object;)Lscala/math/Ordering$Ops;)(this, lhs);
  }
  
  public I; compare(Lscala/Tuple5; x, Lscala/Tuple5; y) {
    I; compare1 = this.(Lscala/math/Ordering$$anon$12;)ord1$5.(Lscala/math/Ordering;::compare(Ljava/lang/Object;Ljava/lang/Object;)I;)(x.(Lscala/Tuple5;::_1()Ljava/lang/Object;)(), y.(Lscala/Tuple5;::_1()Ljava/lang/Object;)());
    if ((compare1 != 0))
      {
        return compare1;
      }
    else
      {
        
      }
    I; compare2 = this.(Lscala/math/Ordering$$anon$12;)ord2$5.(Lscala/math/Ordering;::compare(Ljava/lang/Object;Ljava/lang/Object;)I;)(x.(Lscala/Tuple5;::_2()Ljava/lang/Object;)(), y.(Lscala/Tuple5;::_2()Ljava/lang/Object;)());
    if ((compare2 != 0))
      {
        return compare2;
      }
    else
      {
        
      }
    I; compare3 = this.(Lscala/math/Ordering$$anon$12;)ord3$5.(Lscala/math/Ordering;::compare(Ljava/lang/Object;Ljava/lang/Object;)I;)(x.(Lscala/Tuple5;::_3()Ljava/lang/Object;)(), y.(Lscala/Tuple5;::_3()Ljava/lang/Object;)());
    if ((compare3 != 0))
      {
        return compare3;
      }
    else
      {
        
      }
    I; compare4 = this.(Lscala/math/Ordering$$anon$12;)ord4$5.(Lscala/math/Ordering;::compare(Ljava/lang/Object;Ljava/lang/Object;)I;)(x.(Lscala/Tuple5;::_4()Ljava/lang/Object;)(), y.(Lscala/Tuple5;::_4()Ljava/lang/Object;)());
    if ((compare4 != 0))
      {
        return compare4;
      }
    else
      {
        
      }
    I; compare5 = this.(Lscala/math/Ordering$$anon$12;)ord5$5.(Lscala/math/Ordering;::compare(Ljava/lang/Object;Ljava/lang/Object;)I;)(x.(Lscala/Tuple5;::_5()Ljava/lang/Object;)(), y.(Lscala/Tuple5;::_5()Ljava/lang/Object;)());
    if ((compare5 != 0))
      {
        return compare5;
      }
    else
      {
        
      }
    return 0;
  }
  
  public Lscala/math/PartialOrdering; reverse() {
    return this.(Lscala/math/Ordering;::reverse()Lscala/math/Ordering;)();
  }
  
  public Lscala/Option; tryCompare(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return this.(Lscala/math/Ordering;::tryCompare(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;)(x, y);
  }
  
  public I; compare(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    return this.(Lscala/math/Ordering$$anon$12;::compare(Lscala/Tuple5;Lscala/Tuple5;)I;)(x.<cast>(Lscala/Tuple5;), y.<cast>(Lscala/Tuple5;));
  }
  
  private Lscala/math/Ordering; ord1$5;
  
  private Lscala/math/Ordering; ord2$5;
  
  private Lscala/math/Ordering; ord3$5;
  
  private Lscala/math/Ordering; ord4$5;
  
  private Lscala/math/Ordering; ord5$5;
  
  public this(Lscala/math/Ordering; ord1$5, Lscala/math/Ordering; ord2$5, Lscala/math/Ordering; ord3$5, Lscala/math/Ordering; ord4$5, Lscala/math/Ordering; ord5$5) {
    this.(Lscala/math/Ordering$$anon$12;)ord1$5 = ord1$5;
    this.(Lscala/math/Ordering$$anon$12;)ord2$5 = ord2$5;
    this.(Lscala/math/Ordering$$anon$12;)ord3$5 = ord3$5;
    this.(Lscala/math/Ordering$$anon$12;)ord4$5 = ord4$5;
    this.(Lscala/math/Ordering$$anon$12;)ord5$5 = ord5$5;
    (Ljava/lang/Object;::super()V;)();
    Lscala/math/PartialOrdering$class;.(Lscala/math/PartialOrdering$class;::$init$(Lscala/math/PartialOrdering;)V;)(this);
    Lscala/math/Ordering$class;.(Lscala/math/Ordering$class;::$init$(Lscala/math/Ordering;)V;)(this);
  }
}
