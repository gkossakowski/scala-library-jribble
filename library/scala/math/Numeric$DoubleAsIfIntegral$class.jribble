public abstract class Lscala/math/Numeric$DoubleAsIfIntegral$class; {
  
  public static D; quot(Lscala/math/Numeric$DoubleAsIfIntegral; $this, D; x, D; y) {
    return Lscala/math/BigDecimal$;.MODULE$.(Lscala/math/BigDecimal$;::apply(D;)Lscala/math/BigDecimal;)(x).(Lscala/math/BigDecimal;::$div(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;)(Lscala/math/BigDecimal$;.MODULE$.(Lscala/math/BigDecimal$;::apply(D;)Lscala/math/BigDecimal;)(y)).(Lscala/math/BigDecimal;::doubleValue()D;)();
  }
  
  public static D; rem(Lscala/math/Numeric$DoubleAsIfIntegral; $this, D; x, D; y) {
    return Lscala/math/BigDecimal$;.MODULE$.(Lscala/math/BigDecimal$;::apply(D;)Lscala/math/BigDecimal;)(x).(Lscala/math/BigDecimal;::remainder(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;)(Lscala/math/BigDecimal$;.MODULE$.(Lscala/math/BigDecimal$;::apply(D;)Lscala/math/BigDecimal;)(y)).(Lscala/math/BigDecimal;::doubleValue()D;)();
  }
  
  public static V; $init$(Lscala/math/Numeric$DoubleAsIfIntegral; $this) {
    
  }
}
