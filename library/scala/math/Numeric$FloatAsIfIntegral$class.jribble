public abstract class Lscala/math/Numeric$FloatAsIfIntegral$class; {
  
  public static F; quot(Lscala/math/Numeric$FloatAsIfIntegral; $this, F; x, F; y) {
    return Lscala/math/BigDecimal$;.MODULE$.(Lscala/math/BigDecimal$;::apply(D;)Lscala/math/BigDecimal;)(x.<cast>(D;)).(Lscala/math/BigDecimal;::$div(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;)(Lscala/math/BigDecimal$;.MODULE$.(Lscala/math/BigDecimal$;::apply(D;)Lscala/math/BigDecimal;)(y.<cast>(D;))).(Lscala/math/BigDecimal;::floatValue()F;)();
  }
  
  public static F; rem(Lscala/math/Numeric$FloatAsIfIntegral; $this, F; x, F; y) {
    return Lscala/math/BigDecimal$;.MODULE$.(Lscala/math/BigDecimal$;::apply(D;)Lscala/math/BigDecimal;)(x.<cast>(D;)).(Lscala/math/BigDecimal;::remainder(Lscala/math/BigDecimal;)Lscala/math/BigDecimal;)(Lscala/math/BigDecimal$;.MODULE$.(Lscala/math/BigDecimal$;::apply(D;)Lscala/math/BigDecimal;)(y.<cast>(D;))).(Lscala/math/BigDecimal;::floatValue()F;)();
  }
  
  public static V; $init$(Lscala/math/Numeric$FloatAsIfIntegral; $this) {
    
  }
}
