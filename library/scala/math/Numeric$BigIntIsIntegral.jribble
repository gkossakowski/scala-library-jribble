public interface Lscala/math/Numeric$BigIntIsIntegral; extends Lscala/math/Integral;, Lscala/ScalaObject; {
  
  public Lscala/math/BigInt; plus(Lscala/math/BigInt; x, Lscala/math/BigInt; y);
  
  public Lscala/math/BigInt; minus(Lscala/math/BigInt; x, Lscala/math/BigInt; y);
  
  public Lscala/math/BigInt; times(Lscala/math/BigInt; x, Lscala/math/BigInt; y);
  
  public Lscala/math/BigInt; quot(Lscala/math/BigInt; x, Lscala/math/BigInt; y);
  
  public Lscala/math/BigInt; rem(Lscala/math/BigInt; x, Lscala/math/BigInt; y);
  
  public Lscala/math/BigInt; negate(Lscala/math/BigInt; x);
  
  public Lscala/math/BigInt; fromInt(I; x);
  
  public I; toInt(Lscala/math/BigInt; x);
  
  public J; toLong(Lscala/math/BigInt; x);
  
  public F; toFloat(Lscala/math/BigInt; x);
  
  public D; toDouble(Lscala/math/BigInt; x);
}
