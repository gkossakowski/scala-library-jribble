public final class Lscala/Tuple2$Zipped$$anonfun$map$1; extends Lscala/runtime/AbstractFunction1; implements Lscala/Serializable; {
  
  public final Lscala/collection/mutable/Builder; apply(Ljava/lang/Object; el1) {
    Lscala/collection/mutable/Builder; $7$;
    if (this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)elems2$1.(Lscala/collection/Iterator;::hasNext()Z;)())
      {
        $7$ = this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)b$1.(Lscala/collection/mutable/Builder;::$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)f$2.(Lscala/Function2;::apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)(el1, this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)elems2$1.(Lscala/collection/Iterator;::next()Ljava/lang/Object;)()));
      }
    else
      {
        throw (new (Lscala/runtime/NonLocalReturnControl;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)nonLocalReturnKey1$1, this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)b$1.(Lscala/collection/mutable/Builder;::result()Ljava/lang/Object;)()));
      }
    return $7$;
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/Tuple2$Zipped$$anonfun$map$1;::apply(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(v1);
  }
  
  private Lscala/Function2; f$2;
  
  private Lscala/collection/mutable/Builder; b$1;
  
  private Lscala/collection/Iterator; elems2$1;
  
  private Ljava/lang/Object; nonLocalReturnKey1$1;
  
  public this(Lscala/Tuple2$Zipped; $outer, Lscala/Function2; f$2, Lscala/collection/mutable/Builder; b$1, Lscala/collection/Iterator; elems2$1, Ljava/lang/Object; nonLocalReturnKey1$1) {
    this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)f$2 = f$2;
    this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)b$1 = b$1;
    this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)elems2$1 = elems2$1;
    this.(Lscala/Tuple2$Zipped$$anonfun$map$1;)nonLocalReturnKey1$1 = nonLocalReturnKey1$1;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
