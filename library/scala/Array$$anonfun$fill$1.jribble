public final class Lscala/Array$$anonfun$fill$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final Ljava/lang/Object; apply(I; x$5) {
    return Lscala/Array$;.MODULE$.(Lscala/Array$;::fill(I;Lscala/Function0;Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(this.(Lscala/Array$$anonfun$fill$1;)n2$9, this.(Lscala/Array$$anonfun$fill$1;)elem$1, this.(Lscala/Array$$anonfun$fill$1;)evidence$10$1);
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/Array$$anonfun$fill$1;::apply(I;)Ljava/lang/Object;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v1));
  }
  
  private I; n2$9;
  
  private Lscala/Function0; elem$1;
  
  private Lscala/reflect/ClassManifest; evidence$10$1;
  
  public this(I; n2$9, Lscala/Function0; elem$1, Lscala/reflect/ClassManifest; evidence$10$1) {
    this.(Lscala/Array$$anonfun$fill$1;)n2$9 = n2$9;
    this.(Lscala/Array$$anonfun$fill$1;)elem$1 = elem$1;
    this.(Lscala/Array$$anonfun$fill$1;)evidence$10$1 = evidence$10$1;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
