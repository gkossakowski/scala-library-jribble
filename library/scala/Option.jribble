public abstract class Lscala/Option; extends Ljava/lang/Object; implements Lscala/Product;, Lscala/Serializable;, Lscala/ScalaObject; {
  public final static Lscala/Option; empty() { return Lscala/Option$;.MODULE$.(Lscala/Option$;::empty()Lscala/Option;)(); }
  public final static Lscala/Option; apply(Ljava/lang/Object; x_0) { return Lscala/Option$;.MODULE$.(Lscala/Option$;::apply(Ljava/lang/Object;)Lscala/Option;)(x_0); }
  public final static Lscala/collection/Iterable; option2Iterable(Lscala/Option; x_0) { return Lscala/Option$;.MODULE$.(Lscala/Option$;::option2Iterable(Lscala/Option;)Lscala/collection/Iterable;)(x_0); }
  
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Ljava/lang/String; productPrefix() {
    return Lscala/Product$class;.(Lscala/Product$class;::productPrefix(Lscala/Product;)Ljava/lang/String;)(this);
  }
  
  public abstract Z; isEmpty();
  
  public Z; isDefined() {
    return !(this.(Lscala/Option;::isEmpty()Z;)());
  }
  
  public abstract Ljava/lang/Object; get();
  
  public final Ljava/lang/Object; getOrElse(Lscala/Function0; `default`) {
    Ljava/lang/Object; $2$;
    if (this.(Lscala/Option;::isEmpty()Z;)())
      {
        $2$ = `default`.(Lscala/Function0;::apply()Ljava/lang/Object;)();
      }
    else
      {
        $2$ = this.(Lscala/Option;::get()Ljava/lang/Object;)();
      }
    return $2$;
  }
  
  public final Ljava/lang/Object; orNull(Lscala/Predef$$less$colon$less; ev$1) {
    return this.(Lscala/Option;::getOrElse(Lscala/Function0;)Ljava/lang/Object;)((new (Lscala/Option$$anonfun$orNull$1;::this(Lscala/Option;Lscala/Predef$$less$colon$less;)V;)(this, ev$1)));
  }
  
  public final Lscala/Option; map(Lscala/Function1; f) {
    Lscala/Option; $3$;
    if (this.(Lscala/Option;::isEmpty()Z;)())
      {
        $3$ = Lscala/None$;.MODULE$;
      }
    else
      {
        $3$ = (new (Lscala/Some;::this(Ljava/lang/Object;)V;)(f.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/Option;::get()Ljava/lang/Object;)())));
      }
    return $3$;
  }
  
  public final Lscala/Option; flatMap(Lscala/Function1; f) {
    Lscala/Option; $4$;
    if (this.(Lscala/Option;::isEmpty()Z;)())
      {
        $4$ = Lscala/None$;.MODULE$;
      }
    else
      {
        $4$ = f.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/Option;::get()Ljava/lang/Object;)()).<cast>(Lscala/Option;);
      }
    return $4$;
  }
  
  public Lscala/Option; flatten(Lscala/Predef$$less$colon$less; ev) {
    Lscala/Option; $5$;
    if (this.(Lscala/Option;::isEmpty()Z;)())
      {
        $5$ = Lscala/None$;.MODULE$;
      }
    else
      {
        $5$ = ev.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/Option;::get()Ljava/lang/Object;)()).<cast>(Lscala/Option;);
      }
    return $5$;
  }
  
  public final Lscala/Option; filter(Lscala/Function1; p) {
    Lscala/Option; $6$;
    if ((this.(Lscala/Option;::isEmpty()Z;)() || Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToBoolean(Ljava/lang/Object;)Z;)(p.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/Option;::get()Ljava/lang/Object;)()))))
      {
        $6$ = this;
      }
    else
      {
        $6$ = Lscala/None$;.MODULE$;
      }
    return $6$;
  }
  
  public final Lscala/Option; filterNot(Lscala/Function1; p) {
    Lscala/Option; $7$;
    if ((this.(Lscala/Option;::isEmpty()Z;)() || !(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToBoolean(Ljava/lang/Object;)Z;)(p.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/Option;::get()Ljava/lang/Object;)())))))
      {
        $7$ = this;
      }
    else
      {
        $7$ = Lscala/None$;.MODULE$;
      }
    return $7$;
  }
  
  public Lscala/Option$WithFilter; withFilter(Lscala/Function1; p) {
    return (new (Lscala/Option$WithFilter;::this(Lscala/Option;Lscala/Function1;)V;)(this, p));
  }
  
  public final Z; exists(Lscala/Function1; p) {
    return (!(this.(Lscala/Option;::isEmpty()Z;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToBoolean(Ljava/lang/Object;)Z;)(p.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/Option;::get()Ljava/lang/Object;)())));
  }
  
  public final V; foreach(Lscala/Function1; f) {
    if (!(this.(Lscala/Option;::isEmpty()Z;)()))
      {
        f.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/Option;::get()Ljava/lang/Object;)());
      }
    else
      {
        
      }
  }
  
  public Lscala/Option; collect(Lscala/PartialFunction; pf) {
    Lscala/Option; $8$;
    if ((!(this.(Lscala/Option;::isEmpty()Z;)()) && pf.(Lscala/PartialFunction;::isDefinedAt(Ljava/lang/Object;)Z;)(this.(Lscala/Option;::get()Ljava/lang/Object;)())))
      {
        $8$ = (new (Lscala/Some;::this(Ljava/lang/Object;)V;)(pf.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/Option;::get()Ljava/lang/Object;)())));
      }
    else
      {
        $8$ = Lscala/None$;.MODULE$;
      }
    return $8$;
  }
  
  public final Lscala/Option; orElse(Lscala/Function0; alternative) {
    Lscala/Option; $9$;
    if (this.(Lscala/Option;::isEmpty()Z;)())
      {
        $9$ = alternative.(Lscala/Function0;::apply()Ljava/lang/Object;)().<cast>(Lscala/Option;);
      }
    else
      {
        $9$ = this;
      }
    return $9$;
  }
  
  public Lscala/collection/Iterator; iterator() {
    Lscala/collection/Iterator; $10$;
    if (this.(Lscala/Option;::isEmpty()Z;)())
      {
        $10$ = Lscala/collection/Iterator$;.MODULE$.(Lscala/collection/Iterator$;::empty()Lscala/collection/Iterator;)();
      }
    else
      {
        $10$ = Lscala/collection/Iterator$;.MODULE$.(Lscala/collection/Iterator$;::single(Ljava/lang/Object;)Lscala/collection/Iterator;)(this.(Lscala/Option;::get()Ljava/lang/Object;)());
      }
    return $10$;
  }
  
  public Lscala/collection/immutable/List; toList() {
    Lscala/collection/immutable/List; $11$;
    if (this.(Lscala/Option;::isEmpty()Z;)())
      {
        $11$ = Lscala/collection/immutable/Nil$;.MODULE$;
      }
    else
      {
        $11$ = Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::apply(Lscala/collection/Seq;)Lscala/collection/immutable/List;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::genericWrapArray(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;)(<Ljava/lang/Object;>{this.(Lscala/Option;::get()Ljava/lang/Object;)()}));
      }
    return $11$;
  }
  
  public final Lscala/Either; toRight(Lscala/Function0; left) {
    Lscala/Either; $12$;
    if (this.(Lscala/Option;::isEmpty()Z;)())
      {
        $12$ = (new (Lscala/Left;::this(Ljava/lang/Object;)V;)(left.(Lscala/Function0;::apply()Ljava/lang/Object;)()));
      }
    else
      {
        $12$ = (new (Lscala/Right;::this(Ljava/lang/Object;)V;)(this.(Lscala/Option;::get()Ljava/lang/Object;)()));
      }
    return $12$;
  }
  
  public final Lscala/Either; toLeft(Lscala/Function0; right) {
    Lscala/Either; $13$;
    if (this.(Lscala/Option;::isEmpty()Z;)())
      {
        $13$ = (new (Lscala/Right;::this(Ljava/lang/Object;)V;)(right.(Lscala/Function0;::apply()Ljava/lang/Object;)()));
      }
    else
      {
        $13$ = (new (Lscala/Left;::this(Ljava/lang/Object;)V;)(this.(Lscala/Option;::get()Ljava/lang/Object;)()));
      }
    return $13$;
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
  }
}
