public final class Lscala/Array$$anonfun$ofDim$2; extends Lscala/runtime/AbstractFunction1; {
  
  public final Ljava/lang/Object;[ apply(I; x$1) {
    return Lscala/Array$;.MODULE$.(Lscala/Array$;::ofDim(I;I;Lscala/reflect/ClassManifest;)Ljava/lang/Object;[)(this.(Lscala/Array$$anonfun$ofDim$2;)n2$2, this.(Lscala/Array$$anonfun$ofDim$2;)n3$1, this.(Lscala/Array$$anonfun$ofDim$2;)evidence$5$1);
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/Array$$anonfun$ofDim$2;::apply(I;)Ljava/lang/Object;[)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v1));
  }
  
  private I; n2$2;
  
  private I; n3$1;
  
  private Lscala/reflect/ClassManifest; evidence$5$1;
  
  public this(I; n2$2, I; n3$1, Lscala/reflect/ClassManifest; evidence$5$1) {
    this.(Lscala/Array$$anonfun$ofDim$2;)n2$2 = n2$2;
    this.(Lscala/Array$$anonfun$ofDim$2;)n3$1 = n3$1;
    this.(Lscala/Array$$anonfun$ofDim$2;)evidence$5$1 = evidence$5$1;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
