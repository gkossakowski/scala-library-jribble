public final class Lscala/runtime/RichFloat; extends Lscala/runtime/FractionalProxy; implements Lscala/ScalaObject; {
  
  private F; self$u0020;
  
  public F; self() {
    return this.(Lscala/runtime/RichFloat;)self$u0020;
  }
  
  private Lscala/math/Numeric$FloatAsIfIntegral$; integralNum$u0020;
  
  protected Lscala/math/Numeric$FloatAsIfIntegral$; integralNum() {
    return this.(Lscala/runtime/RichFloat;)integralNum$u0020;
  }
  
  public I; round() {
    return Lscala/math/package$;.MODULE$.(Lscala/MathCommon;::round(F;)I;)(this.(Lscala/runtime/RichFloat;::self()F;)());
  }
  
  public F; ceil() {
    return Lscala/math/package$;.MODULE$.(Lscala/MathCommon;::ceil(D;)D;)(this.(Lscala/runtime/RichFloat;::self()F;)().<cast>(D;)).<cast>(F;);
  }
  
  public F; floor() {
    return Lscala/math/package$;.MODULE$.(Lscala/MathCommon;::floor(D;)D;)(this.(Lscala/runtime/RichFloat;::self()F;)().<cast>(D;)).<cast>(F;);
  }
  
  public F; toRadians() {
    return Lscala/math/package$;.MODULE$.(Lscala/MathCommon;::toRadians(D;)D;)(this.(Lscala/runtime/RichFloat;::self()F;)().<cast>(D;)).<cast>(F;);
  }
  
  public F; toDegrees() {
    return Lscala/math/package$;.MODULE$.(Lscala/MathCommon;::toDegrees(D;)D;)(this.(Lscala/runtime/RichFloat;::self()F;)().<cast>(D;)).<cast>(F;);
  }
  
  public Z; isInfinity() {
    return Ljava/lang/Float;.(Ljava/lang/Float;::isInfinite(F;)Z;)(this.(Lscala/runtime/RichFloat;::self()F;)());
  }
  
  public Z; isPosInfinity() {
    return (this.(Lscala/runtime/RichFloat;::isInfinity()Z;)() && (this.(Lscala/runtime/RichFloat;::self()F;)() > 0.0F));
  }
  
  public Z; isNegInfinity() {
    return (this.(Lscala/runtime/RichFloat;::isInfinity()Z;)() && (this.(Lscala/runtime/RichFloat;::self()F;)() < 0.0F));
  }
  
  protected Lscala/math/Integral; integralNum() {
    return this.(Lscala/runtime/RichFloat;::integralNum()Lscala/math/Numeric$FloatAsIfIntegral$;)();
  }
  
  public Ljava/lang/Object; self() {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToFloat(F;)Ljava/lang/Float;)(this.(Lscala/runtime/RichFloat;::self()F;)());
  }
  
  public this(F; self) {
    this.(Lscala/runtime/RichFloat;)self$u0020 = self;
    (Lscala/runtime/FractionalProxy;::super(Lscala/math/Fractional;)V;)(Lscala/math/Numeric$FloatIsFractional$;.MODULE$);
    this.(Lscala/runtime/RichFloat;)integralNum$u0020 = Lscala/math/Numeric$FloatAsIfIntegral$;.MODULE$;
  }
}
