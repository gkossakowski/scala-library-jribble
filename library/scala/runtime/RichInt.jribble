public final class Lscala/runtime/RichInt; extends Lscala/runtime/ScalaNumberProxy; implements Lscala/runtime/RangedProxy;, Lscala/ScalaObject; {
  
  private I; self$u0020;
  
  public I; self() {
    return this.(Lscala/runtime/RichInt;)self$u0020;
  }
  
  public Z; isWhole() {
    return true;
  }
  
  public Lscala/collection/immutable/Range; until(I; end) {
    return Lscala/collection/immutable/Range$;.MODULE$.(Lscala/collection/immutable/Range$;::apply(I;I;)Lscala/collection/immutable/Range;)(this.(Lscala/runtime/RichInt;::self()I;)(), end);
  }
  
  public Lscala/collection/immutable/Range; until(I; end, I; step) {
    return Lscala/collection/immutable/Range$;.MODULE$.(Lscala/collection/immutable/Range$;::apply(I;I;I;)Lscala/collection/immutable/Range;)(this.(Lscala/runtime/RichInt;::self()I;)(), end, step);
  }
  
  public Lscala/collection/immutable/Range$Inclusive; to(I; end) {
    return Lscala/collection/immutable/Range$;.MODULE$.(Lscala/collection/immutable/Range$;::inclusive(I;I;)Lscala/collection/immutable/Range$Inclusive;)(this.(Lscala/runtime/RichInt;::self()I;)(), end);
  }
  
  public Lscala/collection/immutable/Range$Inclusive; to(I; end, I; step) {
    return Lscala/collection/immutable/Range$;.MODULE$.(Lscala/collection/immutable/Range$;::inclusive(I;I;I;)Lscala/collection/immutable/Range$Inclusive;)(this.(Lscala/runtime/RichInt;::self()I;)(), end, step);
  }
  
  public I; min(I; that) {
    I; $1$;
    if ((this.(Lscala/runtime/RichInt;::self()I;)() < that))
      {
        $1$ = this.(Lscala/runtime/RichInt;::self()I;)();
      }
    else
      {
        $1$ = that;
      }
    return $1$;
  }
  
  public I; max(I; that) {
    I; $2$;
    if ((this.(Lscala/runtime/RichInt;::self()I;)() > that))
      {
        $2$ = this.(Lscala/runtime/RichInt;::self()I;)();
      }
    else
      {
        $2$ = that;
      }
    return $2$;
  }
  
  public I; abs() {
    I; $3$;
    if ((this.(Lscala/runtime/RichInt;::self()I;)() < 0))
      {
        $3$ = -(this.(Lscala/runtime/RichInt;::self()I;)());
      }
    else
      {
        $3$ = this.(Lscala/runtime/RichInt;::self()I;)();
      }
    return $3$;
  }
  
  public Ljava/lang/String; toBinaryString() {
    return Ljava/lang/Integer;.(Ljava/lang/Integer;::toBinaryString(I;)Ljava/lang/String;)(this.(Lscala/runtime/RichInt;::self()I;)());
  }
  
  public Ljava/lang/String; toHexString() {
    return Ljava/lang/Integer;.(Ljava/lang/Integer;::toHexString(I;)Ljava/lang/String;)(this.(Lscala/runtime/RichInt;::self()I;)());
  }
  
  public Ljava/lang/String; toOctalString() {
    return Ljava/lang/Integer;.(Ljava/lang/Integer;::toOctalString(I;)Ljava/lang/String;)(this.(Lscala/runtime/RichInt;::self()I;)());
  }
  
  public Ljava/lang/Object; abs() {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(this.(Lscala/runtime/RichInt;::abs()I;)());
  }
  
  public Ljava/lang/Object; max(Ljava/lang/Object; that) {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(this.(Lscala/runtime/RichInt;::max(I;)I;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(that)));
  }
  
  public Ljava/lang/Object; min(Ljava/lang/Object; that) {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(this.(Lscala/runtime/RichInt;::min(I;)I;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(that)));
  }
  
  public Lscala/collection/immutable/IndexedSeq; to(Ljava/lang/Object; end, Ljava/lang/Object; step) {
    return this.(Lscala/runtime/RichInt;::to(I;I;)Lscala/collection/immutable/Range$Inclusive;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(end), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(step));
  }
  
  public Ljava/lang/Object; to(Ljava/lang/Object; end) {
    return this.(Lscala/runtime/RichInt;::to(I;)Lscala/collection/immutable/Range$Inclusive;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(end));
  }
  
  public Lscala/collection/immutable/IndexedSeq; until(Ljava/lang/Object; end, Ljava/lang/Object; step) {
    return this.(Lscala/runtime/RichInt;::until(I;I;)Lscala/collection/immutable/Range;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(end), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(step));
  }
  
  public Ljava/lang/Object; until(Ljava/lang/Object; end) {
    return this.(Lscala/runtime/RichInt;::until(I;)Lscala/collection/immutable/Range;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(end));
  }
  
  public Ljava/lang/Object; self() {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(this.(Lscala/runtime/RichInt;::self()I;)());
  }
  
  public this(I; self) {
    this.(Lscala/runtime/RichInt;)self$u0020 = self;
    (Lscala/runtime/ScalaNumberProxy;::super(Lscala/math/Numeric;)V;)(Lscala/math/Numeric$IntIsIntegral$;.MODULE$);
  }
}
