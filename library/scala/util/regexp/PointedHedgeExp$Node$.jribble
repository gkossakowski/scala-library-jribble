public final class Lscala/util/regexp/PointedHedgeExp$Node$; extends Lscala/runtime/AbstractFunction2; implements Lscala/ScalaObject; {
  
  public final Ljava/lang/String; toString() {
    return "Node";
  }
  
  public Lscala/Option; unapply(Lscala/util/regexp/PointedHedgeExp$Node; x$0) {
    Lscala/Option; $10$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$0, null))
      {
        $10$ = Lscala/None$;.MODULE$;
      }
    else
      {
        $10$ = (new (Lscala/Some;::this(Ljava/lang/Object;)V;)((new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(x$0.(Lscala/util/regexp/PointedHedgeExp$Node;::label()Ljava/lang/Object;)(), x$0.(Lscala/util/regexp/PointedHedgeExp$Node;::r()Lscala/util/regexp/Base$RegExp;)()))));
      }
    return $10$;
  }
  
  public Lscala/util/regexp/PointedHedgeExp$Node; apply(Ljava/lang/Object; label, Lscala/util/regexp/Base$RegExp; r) {
    return (new (Lscala/util/regexp/PointedHedgeExp$Node;::this(Lscala/util/regexp/PointedHedgeExp;Ljava/lang/Object;Lscala/util/regexp/Base$RegExp;)V;)(this.(Lscala/util/regexp/PointedHedgeExp$Node$;)$outer$u0020, label, r));
  }
  
  private Lscala/util/regexp/PointedHedgeExp; $outer$u0020;
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1, Ljava/lang/Object; v2) {
    return this.(Lscala/util/regexp/PointedHedgeExp$Node$;::apply(Ljava/lang/Object;Lscala/util/regexp/Base$RegExp;)Lscala/util/regexp/PointedHedgeExp$Node;)(v1, v2.<cast>(Lscala/util/regexp/Base$RegExp;));
  }
  
  public this(Lscala/util/regexp/PointedHedgeExp; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/util/regexp/PointedHedgeExp$Node$;)$outer$u0020 = $outer;
      }
    (Lscala/runtime/AbstractFunction2;::super()V;)();
  }
}
