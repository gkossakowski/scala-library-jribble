public class Lscala/util/regexp/PointedHedgeExp$TopIter; extends Lscala/util/regexp/Base$RegExp; implements Lscala/ScalaObject;, Lscala/Product; {
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/util/regexp/Base$RegExp; copy$default$2() {
    return this.(Lscala/util/regexp/PointedHedgeExp$TopIter;::r2()Lscala/util/regexp/Base$RegExp;)();
  }
  
  public Lscala/util/regexp/Base$RegExp; copy$default$1() {
    return this.(Lscala/util/regexp/PointedHedgeExp$TopIter;::r1()Lscala/util/regexp/Base$RegExp;)();
  }
  
  private Lscala/util/regexp/Base$RegExp; r1$u0020;
  
  public Lscala/util/regexp/Base$RegExp; r1() {
    return this.(Lscala/util/regexp/Base$RegExp;)r1$u0020;
  }
  
  private Lscala/util/regexp/Base$RegExp; r2$u0020;
  
  public Lscala/util/regexp/Base$RegExp; r2() {
    return this.(Lscala/util/regexp/Base$RegExp;)r2$u0020;
  }
  
  private final Z; isNullable$u0020;
  
  public final Z; isNullable() {
    return this.(Z;)isNullable$u0020;
  }
  
  public Lscala/util/regexp/PointedHedgeExp$TopIter; copy(Lscala/util/regexp/Base$RegExp; r1, Lscala/util/regexp/Base$RegExp; r2) {
    return (new (Lscala/util/regexp/PointedHedgeExp$TopIter;::this(Lscala/util/regexp/PointedHedgeExp;Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)V;)(this.(Lscala/util/regexp/PointedHedgeExp$TopIter;::scala$util$regexp$PointedHedgeExp$TopIter$$$outer()Lscala/util/regexp/PointedHedgeExp;)(), r1, r2));
  }
  
  public I; hashCode() {
    return this.(Lscala/runtime/ScalaRunTime$;::_hashCode(Lscala/Product;)I;)(this);
  }
  
  public Ljava/lang/String; toString() {
    return this.(Lscala/runtime/ScalaRunTime$;::_toString(Lscala/Product;)Ljava/lang/String;)(this);
  }
  
  public Z; equals(Ljava/lang/Object; x$1) {
    Ljava/lang/Object; temp6 = x$1;
    Z; $5$;
    if ((temp6.<instanceof>(Lscala/util/regexp/PointedHedgeExp$TopIter;) && (temp6.<cast>(Lscala/util/regexp/PointedHedgeExp$TopIter;).(Lscala/util/regexp/PointedHedgeExp$TopIter;::scala$util$regexp$PointedHedgeExp$TopIter$$$outer()Lscala/util/regexp/PointedHedgeExp;)() == this.(Lscala/util/regexp/PointedHedgeExp$TopIter;::scala$util$regexp$PointedHedgeExp$TopIter$$$outer()Lscala/util/regexp/PointedHedgeExp;)())))
      {
        Lscala/util/regexp/PointedHedgeExp$TopIter; temp7 = temp6.<cast>(Lscala/util/regexp/PointedHedgeExp$TopIter;);
        Lscala/util/regexp/Base$RegExp; temp8 = temp7.(Lscala/util/regexp/PointedHedgeExp$TopIter;::r1()Lscala/util/regexp/Base$RegExp;)();
        Lscala/util/regexp/Base$RegExp; temp9 = temp7.(Lscala/util/regexp/PointedHedgeExp$TopIter;::r2()Lscala/util/regexp/Base$RegExp;)();
        Lscala/util/regexp/Base$RegExp; r2$1 = temp9;
        Lscala/util/regexp/Base$RegExp; r1$1 = temp8;
        Z; $6$;
        if (this.(Lscala/util/regexp/PointedHedgeExp$TopIter;::gd2$1(Lscala/util/regexp/Base$RegExp;Lscala/util/regexp/Base$RegExp;)Z;)(r1$1, r2$1))
          {
            $6$ = x$1.<cast>(Lscala/util/regexp/PointedHedgeExp$TopIter;).(Lscala/Equals;::canEqual(Ljava/lang/Object;)Z;)(this);
          }
        else
          {
            $6$ = false;
          }
        $5$ = $6$;
      }
    else
      {
        $5$ = false;
      }
    return ((this == x$1) || $5$);
  }
  
  public Ljava/lang/String; productPrefix() {
    return "TopIter";
  }
  
  public I; productArity() {
    return 2;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp10 = x$1;
    I; $7$ = temp10;
    Ljava/lang/Object; $8$;
    switch ($7$) {
      0: {
        $8$ = this.(Lscala/util/regexp/PointedHedgeExp$TopIter;::r1()Lscala/util/regexp/Base$RegExp;)();
        break;
      }
      
      1: {
        $8$ = this.(Lscala/util/regexp/PointedHedgeExp$TopIter;::r2()Lscala/util/regexp/Base$RegExp;)();
        break;
      }
      
      default: {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
        break;
      }
      
    }
    return $8$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/util/regexp/PointedHedgeExp$TopIter;);
  }
  
  protected Lscala/util/regexp/PointedHedgeExp; $outer$u0020;
  
  public Lscala/util/regexp/PointedHedgeExp; scala$util$regexp$PointedHedgeExp$TopIter$$$outer() {
    return this.(Lscala/util/regexp/PointedHedgeExp;)$outer$u0020;
  }
  
  private final Z; gd2$1(Lscala/util/regexp/Base$RegExp; x$1, Lscala/util/regexp/Base$RegExp; x$2) {
    return (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$1, this.(Lscala/util/regexp/PointedHedgeExp$TopIter;::r1()Lscala/util/regexp/Base$RegExp;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$2, this.(Lscala/util/regexp/PointedHedgeExp$TopIter;::r2()Lscala/util/regexp/Base$RegExp;)()));
  }
  
  public this(Lscala/util/regexp/PointedHedgeExp; $outer, Lscala/util/regexp/Base$RegExp; r1, Lscala/util/regexp/Base$RegExp; r2) {
    this.(Lscala/util/regexp/Base$RegExp;)r1$u0020 = r1;
    this.(Lscala/util/regexp/Base$RegExp;)r2$u0020 = r2;
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/util/regexp/PointedHedgeExp;)$outer$u0020 = $outer;
      }
    (Lscala/util/regexp/Base$RegExp;::super(Lscala/util/regexp/Base;)V;)($outer);
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
    this.(Z;)isNullable$u0020 = (r1.(Lscala/util/regexp/Base$RegExp;::isNullable()Z;)() && r2.(Lscala/util/regexp/Base$RegExp;::isNullable()Z;)());
  }
}
