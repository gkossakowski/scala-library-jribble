public final class Lscala/util/regexp/Base$Sequ$; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  
  public Lscala/util/regexp/Base$RegExp; apply(Lscala/collection/Seq; rs) {
    Lscala/util/regexp/Base$RegExp; $2$;
    if (rs.(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        $2$ = this.(Lscala/util/regexp/Base$Sequ$;)$outer$u0020.(Lscala/util/regexp/Base;::Eps()Lscala/util/regexp/Base$Eps$;)();
      }
    else
      {
        $2$ = (new (Lscala/util/regexp/Base$Sequ;::this(Lscala/util/regexp/Base;Lscala/collection/Seq;)V;)(this.(Lscala/util/regexp/Base$Sequ$;)$outer$u0020, rs));
      }
    return $2$;
  }
  
  public Lscala/Some; unapplySeq(Lscala/util/regexp/Base$Sequ; x) {
    return (new (Lscala/Some;::this(Ljava/lang/Object;)V;)(x.(Lscala/util/regexp/Base$Sequ;::rs()Lscala/collection/Seq;)()));
  }
  
  private Lscala/util/regexp/Base; $outer$u0020;
  
  public this(Lscala/util/regexp/Base; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/util/regexp/Base$Sequ$;)$outer$u0020 = $outer;
      }
    (Ljava/lang/Object;::super()V;)();
  }
}
