public class Lscala/util/regexp/Base$Alt; extends Lscala/util/regexp/Base$RegExp; implements Lscala/ScalaObject; {
  
  private Lscala/collection/Seq; rs$u0020;
  
  public Lscala/collection/Seq; rs() {
    return this.(Lscala/util/regexp/Base$Alt;)rs$u0020;
  }
  
  private final Z; isNullable$u0020;
  
  public final Z; isNullable() {
    return this.(Lscala/util/regexp/Base$Alt;)isNullable$u0020;
  }
  
  public Lscala/util/regexp/Base; scala$util$regexp$Base$Alt$$$outer() {
    return this.(Lscala/util/regexp/Base$Alt;)$outer$u0020;
  }
  
  public this(Lscala/util/regexp/Base; $outer, Lscala/collection/Seq; rs) {
    this.(Lscala/util/regexp/Base$Alt;)rs$u0020 = rs;
    (Lscala/util/regexp/Base$RegExp;::super(Lscala/util/regexp/Base;)V;)($outer);
    this.(Lscala/util/regexp/Base$Alt;)isNullable$u0020 = rs.(Lscala/collection/IterableLike;::exists(Lscala/Function1;)Z;)((new (Lscala/util/regexp/Base$Alt$$anonfun$1;::this(Lscala/util/regexp/Base$Alt;)V;)(this)));
  }
}
