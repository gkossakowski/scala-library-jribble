public abstract class Lscala/util/regexp/PointedHedgeExp; extends Lscala/util/regexp/Base; implements Lscala/ScalaObject; {
  
  private Lscala/util/regexp/PointedHedgeExp$Point$; Point$module;
  
  public final Lscala/util/regexp/PointedHedgeExp$Point$; Point() {
    if ((this.(Lscala/util/regexp/PointedHedgeExp$Point$;)Point$module == null))
      {
        this.(Lscala/util/regexp/PointedHedgeExp$Point$;)Point$module = (new (Lscala/util/regexp/PointedHedgeExp$Point$;::this(Lscala/util/regexp/PointedHedgeExp;)V;)(this));
      }
    return this.(Lscala/util/regexp/PointedHedgeExp$Point$;)Point$module;
  }
  
  private Lscala/util/regexp/PointedHedgeExp$TopIter$; TopIter$module;
  
  public final Lscala/util/regexp/PointedHedgeExp$TopIter$; TopIter() {
    if ((this.(Lscala/util/regexp/PointedHedgeExp$TopIter$;)TopIter$module == null))
      {
        this.(Lscala/util/regexp/PointedHedgeExp$TopIter$;)TopIter$module = (new (Lscala/util/regexp/PointedHedgeExp$TopIter$;::this(Lscala/util/regexp/PointedHedgeExp;)V;)(this));
      }
    return this.(Lscala/util/regexp/PointedHedgeExp$TopIter$;)TopIter$module;
  }
  
  private Lscala/util/regexp/PointedHedgeExp$Node$; Node$module;
  
  public final Lscala/util/regexp/PointedHedgeExp$Node$; Node() {
    if ((this.(Lscala/util/regexp/PointedHedgeExp$Node$;)Node$module == null))
      {
        this.(Lscala/util/regexp/PointedHedgeExp$Node$;)Node$module = (new (Lscala/util/regexp/PointedHedgeExp$Node$;::this(Lscala/util/regexp/PointedHedgeExp;)V;)(this));
      }
    return this.(Lscala/util/regexp/PointedHedgeExp$Node$;)Node$module;
  }
  
  public this() {
    (Lscala/util/regexp/Base;::super()V;)();
  }
}
