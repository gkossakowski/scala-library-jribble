public class Lscala/util/MurmurHash$mcI$sp; extends Lscala/util/MurmurHash; implements Lscala/Function1$mcVI$sp; {
  
  public Lscala/Function1; compose(Lscala/Function1; g) {
    return Lscala/Function1$mcVI$sp$class;.(Lscala/Function1$mcVI$sp$class;::compose(Lscala/Function1$mcVI$sp;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcVI$sp(Lscala/Function1; g) {
    return Lscala/Function1$mcVI$sp$class;.(Lscala/Function1$mcVI$sp$class;::compose$mcVI$sp(Lscala/Function1$mcVI$sp;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen(Lscala/Function1; g) {
    return Lscala/Function1$mcVI$sp$class;.(Lscala/Function1$mcVI$sp$class;::andThen(Lscala/Function1$mcVI$sp;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcVI$sp(Lscala/Function1; g) {
    return Lscala/Function1$mcVI$sp$class;.(Lscala/Function1$mcVI$sp$class;::andThen$mcVI$sp(Lscala/Function1$mcVI$sp;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  private I; seed;
  
  public V; apply(I; t) {
    this.(Lscala/util/MurmurHash$mcI$sp;::apply$mcI$sp(I;)V;)(t);
  }
  
  public V; apply$mcI$sp(I; t) {
    this.(Lscala/util/MurmurHash;::scala$util$MurmurHash$$h_$eq(I;)V;)(Lscala/util/MurmurHash$;.MODULE$.(Lscala/util/MurmurHash$;::extendHash(I;I;I;I;)I;)(this.(Lscala/util/MurmurHash;::scala$util$MurmurHash$$h()I;)(), t, this.(Lscala/util/MurmurHash;::scala$util$MurmurHash$$c()I;)(), this.(Lscala/util/MurmurHash;::scala$util$MurmurHash$$k()I;)()));
    this.(Lscala/util/MurmurHash;::scala$util$MurmurHash$$c_$eq(I;)V;)(Lscala/util/MurmurHash$;.MODULE$.(Lscala/util/MurmurHash$;::nextMagicA(I;)I;)(this.(Lscala/util/MurmurHash;::scala$util$MurmurHash$$c()I;)()));
    this.(Lscala/util/MurmurHash;::scala$util$MurmurHash$$k_$eq(I;)V;)(Lscala/util/MurmurHash$;.MODULE$.(Lscala/util/MurmurHash$;::nextMagicB(I;)I;)(this.(Lscala/util/MurmurHash;::scala$util$MurmurHash$$k()I;)()));
    this.(Lscala/util/MurmurHash;::scala$util$MurmurHash$$hashed_$eq(Z;)V;)(false);
  }
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    this.(Lscala/util/MurmurHash$mcI$sp;::apply(I;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v1));
    return Lscala/runtime/BoxedUnit;.UNIT;
  }
  
  public V; apply(Ljava/lang/Object; t) {
    this.(Lscala/util/MurmurHash$mcI$sp;::apply(I;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(t));
  }
  
  public this(I; seed) {
    this.(Lscala/util/MurmurHash$mcI$sp;)seed = seed;
    (Lscala/util/MurmurHash;::super(I;)V;)(seed);
    Lscala/Function1$mcVI$sp$class;.(Lscala/Function1$mcVI$sp$class;::$init$(Lscala/Function1$mcVI$sp;)V;)(this);
  }
}
