public final class Lscala/None; {
  public final static Z; canEqual(Ljava/lang/Object; x_0) { return Lscala/None$;.MODULE$.(Lscala/None$;::canEqual(Ljava/lang/Object;)Z;)(x_0); }
  public final static Ljava/lang/Object; productElement(I; x_0) { return Lscala/None$;.MODULE$.(Lscala/None$;::productElement(I;)Ljava/lang/Object;)(x_0); }
  public final static I; productArity() { return Lscala/None$;.MODULE$.(Lscala/None$;::productArity()I;)(); }
  public final static Ljava/lang/String; productPrefix() { return Lscala/None$;.MODULE$.(Lscala/None$;::productPrefix()Ljava/lang/String;)(); }
  public final static Lscala/runtime/Nothing$; get() { return Lscala/None$;.MODULE$.(Lscala/None$;::get()Lscala/runtime/Nothing$;)(); }
  public final static Z; isEmpty() { return Lscala/None$;.MODULE$.(Lscala/None$;::isEmpty()Z;)(); }
  public final static Lscala/collection/Iterator; productElements() { return Lscala/None$;.MODULE$.(Lscala/Option;::productElements()Lscala/collection/Iterator;)(); }
  public final static Lscala/collection/Iterator; productIterator() { return Lscala/None$;.MODULE$.(Lscala/Option;::productIterator()Lscala/collection/Iterator;)(); }
  public final static Lscala/Either; toLeft(Lscala/Function0; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::toLeft(Lscala/Function0;)Lscala/Either;)(x_0); }
  public final static Lscala/Either; toRight(Lscala/Function0; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::toRight(Lscala/Function0;)Lscala/Either;)(x_0); }
  public final static Lscala/collection/immutable/List; toList() { return Lscala/None$;.MODULE$.(Lscala/Option;::toList()Lscala/collection/immutable/List;)(); }
  public final static Lscala/collection/Iterator; iterator() { return Lscala/None$;.MODULE$.(Lscala/Option;::iterator()Lscala/collection/Iterator;)(); }
  public final static Lscala/Option; orElse(Lscala/Function0; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::orElse(Lscala/Function0;)Lscala/Option;)(x_0); }
  public final static Lscala/Option; collect(Lscala/PartialFunction; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::collect(Lscala/PartialFunction;)Lscala/Option;)(x_0); }
  public final static V; foreach(Lscala/Function1; x_0) { Lscala/None$;.MODULE$.(Lscala/Option;::foreach(Lscala/Function1;)V;)(x_0); }
  public final static Z; exists(Lscala/Function1; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::exists(Lscala/Function1;)Z;)(x_0); }
  public final static Lscala/Option$WithFilter; withFilter(Lscala/Function1; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::withFilter(Lscala/Function1;)Lscala/Option$WithFilter;)(x_0); }
  public final static Lscala/Option; filterNot(Lscala/Function1; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::filterNot(Lscala/Function1;)Lscala/Option;)(x_0); }
  public final static Lscala/Option; filter(Lscala/Function1; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::filter(Lscala/Function1;)Lscala/Option;)(x_0); }
  public final static Lscala/Option; flatten(Lscala/Predef$$less$colon$less; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::flatten(Lscala/Predef$$less$colon$less;)Lscala/Option;)(x_0); }
  public final static Lscala/Option; flatMap(Lscala/Function1; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::flatMap(Lscala/Function1;)Lscala/Option;)(x_0); }
  public final static Lscala/Option; map(Lscala/Function1; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::map(Lscala/Function1;)Lscala/Option;)(x_0); }
  public final static Ljava/lang/Object; orNull(Lscala/Predef$$less$colon$less; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::orNull(Lscala/Predef$$less$colon$less;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; getOrElse(Lscala/Function0; x_0) { return Lscala/None$;.MODULE$.(Lscala/Option;::getOrElse(Lscala/Function0;)Ljava/lang/Object;)(x_0); }
  public final static Z; isDefined() { return Lscala/None$;.MODULE$.(Lscala/Option;::isDefined()Z;)(); }
  
}
