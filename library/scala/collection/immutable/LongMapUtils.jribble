public final class Lscala/collection/immutable/LongMapUtils; {
  public final static Lscala/collection/immutable/LongMap; bin(J; x_0, J; x_1, Lscala/collection/immutable/LongMap; x_2, Lscala/collection/immutable/LongMap; x_3) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::bin(J;J;Lscala/collection/immutable/LongMap;Lscala/collection/immutable/LongMap;)Lscala/collection/immutable/LongMap;)(x_0, x_1, x_2, x_3); }
  public final static Lscala/collection/immutable/LongMap; join(J; x_0, Lscala/collection/immutable/LongMap; x_1, J; x_2, Lscala/collection/immutable/LongMap; x_3) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::join(J;Lscala/collection/immutable/LongMap;J;Lscala/collection/immutable/LongMap;)Lscala/collection/immutable/LongMap;)(x_0, x_1, x_2, x_3); }
  public final static J; highestOneBit(J; x_0) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::highestOneBit(J;)J;)(x_0); }
  public final static J; branchMask(J; x_0, J; x_1) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::branchMask(J;J;)J;)(x_0, x_1); }
  public final static J; complement(J; x_0) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::complement(J;)J;)(x_0); }
  public final static Z; shorter(J; x_0, J; x_1) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::shorter(J;J;)Z;)(x_0, x_1); }
  public final static Z; unsignedCompare(J; x_0, J; x_1) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::unsignedCompare(J;J;)Z;)(x_0, x_1); }
  public final static Z; hasMatch(J; x_0, J; x_1, J; x_2) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::hasMatch(J;J;J;)Z;)(x_0, x_1, x_2); }
  public final static J; mask(J; x_0, J; x_1) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::mask(J;J;)J;)(x_0, x_1); }
  public final static Z; zero(J; x_0, J; x_1) { return Lscala/collection/immutable/LongMapUtils$;.MODULE$.(Lscala/collection/immutable/LongMapUtils$;::zero(J;J;)Z;)(x_0, x_1); }
  
}
