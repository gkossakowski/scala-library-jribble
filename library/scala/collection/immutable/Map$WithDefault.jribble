public class Lscala/collection/immutable/Map$WithDefault; extends Lscala/collection/Map$WithDefault; implements Lscala/collection/immutable/Map;, Lscala/ScalaObject; {
  
  public Lscala/collection/immutable/Map; toMap(Lscala/Predef$$less$colon$less; ev) {
    return Lscala/collection/immutable/Map$class;.(Lscala/collection/immutable/Map$class;::toMap(Lscala/collection/immutable/Map;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(this, ev);
  }
  
  public Lscala/collection/immutable/Map; seq() {
    return Lscala/collection/immutable/Map$class;.(Lscala/collection/immutable/Map$class;::seq(Lscala/collection/immutable/Map;)Lscala/collection/immutable/Map;)(this);
  }
  
  public Lscala/collection/immutable/Map; $plus(Lscala/Tuple2; elem1, Lscala/Tuple2; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/immutable/MapLike$class;.(Lscala/collection/immutable/MapLike$class;::$plus(Lscala/collection/immutable/MapLike;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/immutable/Map;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/immutable/Map; $plus$plus(Lscala/collection/GenTraversableOnce; xs) {
    return Lscala/collection/immutable/MapLike$class;.(Lscala/collection/immutable/MapLike$class;::$plus$plus(Lscala/collection/immutable/MapLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;)(this, xs);
  }
  
  public Lscala/collection/immutable/Map; $plus$plus(Lscala/collection/TraversableOnce; xs) {
    return Lscala/collection/immutable/MapLike$class;.(Lscala/collection/immutable/MapLike$class;::$plus$plus(Lscala/collection/immutable/MapLike;Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Map;)(this, xs);
  }
  
  public Lscala/collection/immutable/Map; filterKeys(Lscala/Function1; p) {
    return Lscala/collection/immutable/MapLike$class;.(Lscala/collection/immutable/MapLike$class;::filterKeys(Lscala/collection/immutable/MapLike;Lscala/Function1;)Lscala/collection/immutable/Map;)(this, p);
  }
  
  public Lscala/collection/immutable/Map; mapValues(Lscala/Function1; f) {
    return Lscala/collection/immutable/MapLike$class;.(Lscala/collection/immutable/MapLike$class;::mapValues(Lscala/collection/immutable/MapLike;Lscala/Function1;)Lscala/collection/immutable/Map;)(this, f);
  }
  
  public Lscala/collection/immutable/Set; keySet() {
    return Lscala/collection/immutable/MapLike$class;.(Lscala/collection/immutable/MapLike$class;::keySet(Lscala/collection/immutable/MapLike;)Lscala/collection/immutable/Set;)(this);
  }
  
  public Ljava/lang/Object; transform(Lscala/Function2; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/immutable/MapLike$class;.(Lscala/collection/immutable/MapLike$class;::transform(Lscala/collection/immutable/MapLike;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Lscala/collection/generic/GenericCompanion; companion() {
    return Lscala/collection/immutable/Iterable$class;.(Lscala/collection/immutable/Iterable$class;::companion(Lscala/collection/immutable/Iterable;)Lscala/collection/generic/GenericCompanion;)(this);
  }
  
  private Lscala/collection/immutable/Map; underlying;
  
  private Lscala/Function1; d;
  
  public Lscala/collection/immutable/Map$WithDefault; empty() {
    return (new (Lscala/collection/immutable/Map$WithDefault;::this(Lscala/collection/immutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/immutable/Map$WithDefault;)underlying.(Lscala/collection/immutable/Map;::empty()Lscala/collection/immutable/Map;)(), this.(Lscala/collection/immutable/Map$WithDefault;)d));
  }
  
  public Lscala/collection/immutable/Map$WithDefault; updated(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return (new (Lscala/collection/immutable/Map$WithDefault;::this(Lscala/collection/immutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/immutable/Map$WithDefault;)underlying.(Lscala/collection/immutable/MapLike;::updated(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/Map;)(key, value), this.(Lscala/collection/immutable/Map$WithDefault;)d));
  }
  
  public Lscala/collection/immutable/Map$WithDefault; $plus(Lscala/Tuple2; kv) {
    return this.(Lscala/collection/immutable/Map$WithDefault;::updated(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/Map$WithDefault;)(kv.(Lscala/Tuple2;::_1()Ljava/lang/Object;)(), kv.(Lscala/Tuple2;::_2()Ljava/lang/Object;)());
  }
  
  public Lscala/collection/immutable/Map$WithDefault; $minus(Ljava/lang/Object; key) {
    return (new (Lscala/collection/immutable/Map$WithDefault;::this(Lscala/collection/immutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/immutable/Map$WithDefault;)underlying.(Lscala/collection/MapLike;::$minus(Ljava/lang/Object;)Lscala/collection/Map;)(key).<cast>(Lscala/collection/immutable/Map;), this.(Lscala/collection/immutable/Map$WithDefault;)d));
  }
  
  public Lscala/collection/immutable/Map; withDefault(Lscala/Function1; d) {
    return (new (Lscala/collection/immutable/Map$WithDefault;::this(Lscala/collection/immutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/immutable/Map$WithDefault;)underlying, d));
  }
  
  public Lscala/collection/immutable/Map; withDefaultValue(Ljava/lang/Object; d$2) {
    return (new (Lscala/collection/immutable/Map$WithDefault;::this(Lscala/collection/immutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/immutable/Map$WithDefault;)underlying, (new (Lscala/collection/immutable/Map$WithDefault$$anonfun$withDefaultValue$2;::this(Lscala/collection/immutable/Map$WithDefault;Ljava/lang/Object;)V;)(this, d$2))));
  }
  
  public Lscala/collection/GenTraversable; toTraversable() {
    return this.(Lscala/collection/TraversableLike;::toTraversable()Lscala/collection/Traversable;)();
  }
  
  public Lscala/collection/GenMap; groupBy(Lscala/Function1; f) {
    return this.(Lscala/collection/TraversableLike;::groupBy(Lscala/Function1;)Lscala/collection/immutable/Map;)(f);
  }
  
  public Lscala/collection/generic/Subtractable; repr() {
    return this.(Lscala/collection/TraversableLike;::repr()Ljava/lang/Object;)().<cast>(Lscala/collection/generic/Subtractable;);
  }
  
  public Lscala/collection/TraversableView; view(I; from, I; until) {
    return this.(Lscala/collection/IterableLike;::view(I;I;)Lscala/collection/IterableView;)(from, until);
  }
  
  public Lscala/collection/TraversableView; view() {
    return this.(Lscala/collection/IterableLike;::view()Lscala/collection/IterableView;)();
  }
  
  public Lscala/collection/GenIterable; toIterable() {
    return this.(Lscala/collection/IterableLike;::toIterable()Lscala/collection/Iterable;)();
  }
  
  public Lscala/collection/Traversable; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/IterableLike;::toCollection(Ljava/lang/Object;)Lscala/collection/Iterable;)(repr);
  }
  
  public Lscala/collection/Traversable; thisCollection() {
    return this.(Lscala/collection/IterableLike;::thisCollection()Lscala/collection/Iterable;)();
  }
  
  public Lscala/collection/GenSeq; toSeq() {
    return this.(Lscala/collection/MapLike;::toSeq()Lscala/collection/Seq;)();
  }
  
  public Ljava/lang/Object; filterNot(Lscala/Function1; p) {
    return this.(Lscala/collection/MapLike;::filterNot(Lscala/Function1;)Lscala/collection/Map;)(p);
  }
  
  public Lscala/collection/Set; keySet() {
    return this.(Lscala/collection/immutable/MapLike;::keySet()Lscala/collection/immutable/Set;)();
  }
  
  public Lscala/collection/Map; mapValues(Lscala/Function1; f) {
    return this.(Lscala/collection/immutable/MapLike;::mapValues(Lscala/Function1;)Lscala/collection/immutable/Map;)(f);
  }
  
  public Lscala/collection/Map; filterKeys(Lscala/Function1; p) {
    return this.(Lscala/collection/immutable/MapLike;::filterKeys(Lscala/Function1;)Lscala/collection/immutable/Map;)(p);
  }
  
  public Lscala/collection/Map; $plus$plus(Lscala/collection/GenTraversableOnce; xs) {
    return this.(Lscala/collection/immutable/MapLike;::$plus$plus(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;)(xs);
  }
  
  public Lscala/collection/Map; $plus(Lscala/Tuple2; kv1, Lscala/Tuple2; kv2, Lscala/collection/Seq; kvs) {
    return this.(Lscala/collection/immutable/MapLike;::$plus(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/immutable/Map;)(kv1, kv2, kvs);
  }
  
  public Lscala/collection/TraversableOnce; seq() {
    return this.(Lscala/collection/immutable/Map;::seq()Lscala/collection/immutable/Map;)();
  }
  
  public Lscala/collection/Traversable; seq() {
    return this.(Lscala/collection/immutable/Map;::seq()Lscala/collection/immutable/Map;)();
  }
  
  public Lscala/collection/Iterable; seq() {
    return this.(Lscala/collection/immutable/Map;::seq()Lscala/collection/immutable/Map;)();
  }
  
  public Lscala/collection/Map; seq() {
    return this.(Lscala/collection/immutable/Map;::seq()Lscala/collection/immutable/Map;)();
  }
  
  public Lscala/collection/immutable/Traversable; seq() {
    return this.(Lscala/collection/immutable/Map;::seq()Lscala/collection/immutable/Map;)();
  }
  
  public Lscala/collection/immutable/Iterable; seq() {
    return this.(Lscala/collection/immutable/Map;::seq()Lscala/collection/immutable/Map;)();
  }
  
  public Lscala/collection/GenMap; toMap(Lscala/Predef$$less$colon$less; ev) {
    return this.(Lscala/collection/immutable/Map;::toMap(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(ev);
  }
  
  public Ljava/lang/Object; $minus(Ljava/lang/Object; key) {
    return this.(Lscala/collection/immutable/Map$WithDefault;::$minus(Ljava/lang/Object;)Lscala/collection/immutable/Map$WithDefault;)(key);
  }
  
  public Lscala/collection/generic/Subtractable; $minus(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/immutable/Map$WithDefault;::$minus(Ljava/lang/Object;)Lscala/collection/immutable/Map$WithDefault;)(elem);
  }
  
  public Lscala/collection/Map; $minus(Ljava/lang/Object; key) {
    return this.(Lscala/collection/immutable/Map$WithDefault;::$minus(Ljava/lang/Object;)Lscala/collection/immutable/Map$WithDefault;)(key);
  }
  
  public Lscala/collection/GenMap; $plus(Lscala/Tuple2; kv) {
    return this.(Lscala/collection/immutable/Map$WithDefault;::$plus(Lscala/Tuple2;)Lscala/collection/immutable/Map$WithDefault;)(kv);
  }
  
  public Lscala/collection/Map; $plus(Lscala/Tuple2; kv) {
    return this.(Lscala/collection/immutable/Map$WithDefault;::$plus(Lscala/Tuple2;)Lscala/collection/immutable/Map$WithDefault;)(kv);
  }
  
  public Lscala/collection/immutable/Map; $plus(Lscala/Tuple2; kv) {
    return this.(Lscala/collection/immutable/Map$WithDefault;::$plus(Lscala/Tuple2;)Lscala/collection/immutable/Map$WithDefault;)(kv);
  }
  
  public Lscala/collection/Map; updated(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return this.(Lscala/collection/immutable/Map$WithDefault;::updated(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/Map$WithDefault;)(key, value);
  }
  
  public Lscala/collection/immutable/Map; updated(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return this.(Lscala/collection/immutable/Map$WithDefault;::updated(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/immutable/Map$WithDefault;)(key, value);
  }
  
  public Lscala/collection/Map; empty() {
    return this.(Lscala/collection/immutable/Map$WithDefault;::empty()Lscala/collection/immutable/Map$WithDefault;)();
  }
  
  public Lscala/collection/immutable/Map; empty() {
    return this.(Lscala/collection/immutable/Map$WithDefault;::empty()Lscala/collection/immutable/Map$WithDefault;)();
  }
  
  public this(Lscala/collection/immutable/Map; underlying, Lscala/Function1; d) {
    this.(Lscala/collection/immutable/Map$WithDefault;)underlying = underlying;
    this.(Lscala/collection/immutable/Map$WithDefault;)d = d;
    (Lscala/collection/Map$WithDefault;::super(Lscala/collection/Map;Lscala/Function1;)V;)(underlying, d);
    Lscala/collection/immutable/Traversable$class;.(Lscala/collection/immutable/Traversable$class;::$init$(Lscala/collection/immutable/Traversable;)V;)(this);
    Lscala/collection/immutable/Iterable$class;.(Lscala/collection/immutable/Iterable$class;::$init$(Lscala/collection/immutable/Iterable;)V;)(this);
    Lscala/collection/immutable/MapLike$class;.(Lscala/collection/immutable/MapLike$class;::$init$(Lscala/collection/immutable/MapLike;)V;)(this);
    Lscala/collection/immutable/Map$class;.(Lscala/collection/immutable/Map$class;::$init$(Lscala/collection/immutable/Map;)V;)(this);
  }
}
