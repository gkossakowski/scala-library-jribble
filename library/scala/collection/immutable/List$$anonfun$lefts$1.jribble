public final class Lscala/collection/immutable/List$$anonfun$lefts$1; extends Lscala/runtime/AbstractFunction2; implements Lscala/Serializable; {
  
  public final Lscala/collection/immutable/List; apply(Lscala/Either; e, Lscala/collection/immutable/List; as) {
    Lscala/Either; temp34 = e;
    Lscala/collection/immutable/List; $33$;
    if (temp34.<instanceof>(Lscala/Left;))
      {
        Lscala/Left; temp35 = temp34.<cast>(Lscala/Left;);
        Ljava/lang/Object; temp36 = temp35.(Lscala/Left;::a()Ljava/lang/Object;)();
        Ljava/lang/Object; a = temp36;
        Ljava/lang/Object; x$10 = a;
        $33$ = as.(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x$10);
      }
    else
      {
        Lscala/collection/immutable/List; $34$;
        if (temp34.<instanceof>(Lscala/Right;))
          {
            $34$ = as;
          }
        else
          {
            throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp34));
          }
        $33$ = $34$;
      }
    return $33$;
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1, Ljava/lang/Object; v2) {
    return this.(Lscala/collection/immutable/List$$anonfun$lefts$1;::apply(Lscala/Either;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;)(v1.<cast>(Lscala/Either;), v2.<cast>(Lscala/collection/immutable/List;));
  }
  
  public this() {
    (Lscala/runtime/AbstractFunction2;::super()V;)();
  }
}
