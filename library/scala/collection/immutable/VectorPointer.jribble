public interface Lscala/collection/immutable/VectorPointer; extends Lscala/ScalaObject; {
  
  public I; depth();
  
  public V; depth_$eq(I; x$1);
  
  public Ljava/lang/Object;[ display0();
  
  public V; display0_$eq(Ljava/lang/Object;[ x$1);
  
  public Ljava/lang/Object;[ display1();
  
  public V; display1_$eq(Ljava/lang/Object;[ x$1);
  
  public Ljava/lang/Object;[ display2();
  
  public V; display2_$eq(Ljava/lang/Object;[ x$1);
  
  public Ljava/lang/Object;[ display3();
  
  public V; display3_$eq(Ljava/lang/Object;[ x$1);
  
  public Ljava/lang/Object;[ display4();
  
  public V; display4_$eq(Ljava/lang/Object;[ x$1);
  
  public Ljava/lang/Object;[ display5();
  
  public V; display5_$eq(Ljava/lang/Object;[ x$1);
  
  public V; initFrom(Lscala/collection/immutable/VectorPointer; that);
  
  public V; initFrom(Lscala/collection/immutable/VectorPointer; that, I; depth);
  
  public Ljava/lang/Object; getElem(I; index, I; xor);
  
  public V; gotoPos(I; index, I; xor);
  
  public V; gotoNextBlockStart(I; index, I; xor);
  
  public V; gotoNextBlockStartWritable(I; index, I; xor);
  
  public Ljava/lang/Object;[ copyOf(Ljava/lang/Object;[ a);
  
  public Ljava/lang/Object;[ nullSlotAndCopy(Ljava/lang/Object;[ array, I; index);
  
  public V; stabilize(I; index);
  
  public V; gotoPosWritable0(I; newIndex, I; xor);
  
  public V; gotoPosWritable1(I; oldIndex, I; newIndex, I; xor);
  
  public Ljava/lang/Object;[ copyRange(Ljava/lang/Object;[ array, I; oldLeft, I; newLeft);
  
  public V; gotoFreshPosWritable0(I; oldIndex, I; newIndex, I; xor);
  
  public V; gotoFreshPosWritable1(I; oldIndex, I; newIndex, I; xor);
  
  public V; debug();
}
