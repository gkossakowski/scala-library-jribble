public class Lscala/collection/immutable/Stack; extends Ljava/lang/Object; implements Lscala/collection/immutable/LinearSeq;, Lscala/collection/generic/GenericTraversableTemplate;, Lscala/collection/LinearSeqOptimized;, Lscala/ScalaObject; {
  public final static Lscala/collection/immutable/Stack; Empty() { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/immutable/Stack$;::Empty()Lscala/collection/immutable/Stack;)(); }
  public final static Lscala/collection/generic/CanBuildFrom; canBuildFrom() { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/immutable/Stack$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)(); }
  public final static Lscala/Some; unapplySeq(Lscala/collection/Seq; x_0) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/SeqFactory;::unapplySeq(Lscala/collection/Seq;)Lscala/Some;)(x_0); }
  public final static Lscala/collection/Traversable; iterate(Ljava/lang/Object; x_0, I; x_1, Lscala/Function1; x_2) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::iterate(Ljava/lang/Object;I;Lscala/Function1;)Lscala/collection/Traversable;)(x_0, x_1, x_2); }
  public final static Lscala/collection/Traversable; range(I; x_0, I; x_1, I; x_2) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::range(I;I;I;)Lscala/collection/Traversable;)(x_0, x_1, x_2); }
  public final static Lscala/collection/Traversable; range(I; x_0, I; x_1) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::range(I;I;)Lscala/collection/Traversable;)(x_0, x_1); }
  public final static Lscala/collection/Traversable; tabulate(I; x_0, I; x_1, I; x_2, I; x_3, I; x_4, Lscala/Function5; x_5) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::tabulate(I;I;I;I;I;Lscala/Function5;)Lscala/collection/Traversable;)(x_0, x_1, x_2, x_3, x_4, x_5); }
  public final static Lscala/collection/Traversable; tabulate(I; x_0, I; x_1, I; x_2, I; x_3, Lscala/Function4; x_4) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::tabulate(I;I;I;I;Lscala/Function4;)Lscala/collection/Traversable;)(x_0, x_1, x_2, x_3, x_4); }
  public final static Lscala/collection/Traversable; tabulate(I; x_0, I; x_1, I; x_2, Lscala/Function3; x_3) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::tabulate(I;I;I;Lscala/Function3;)Lscala/collection/Traversable;)(x_0, x_1, x_2, x_3); }
  public final static Lscala/collection/Traversable; tabulate(I; x_0, I; x_1, Lscala/Function2; x_2) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::tabulate(I;I;Lscala/Function2;)Lscala/collection/Traversable;)(x_0, x_1, x_2); }
  public final static Lscala/collection/Traversable; tabulate(I; x_0, Lscala/Function1; x_1) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::tabulate(I;Lscala/Function1;)Lscala/collection/Traversable;)(x_0, x_1); }
  public final static Lscala/collection/Traversable; fill(I; x_0, I; x_1, I; x_2, I; x_3, I; x_4, Lscala/Function0; x_5) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::fill(I;I;I;I;I;Lscala/Function0;)Lscala/collection/Traversable;)(x_0, x_1, x_2, x_3, x_4, x_5); }
  public final static Lscala/collection/Traversable; fill(I; x_0, I; x_1, I; x_2, I; x_3, Lscala/Function0; x_4) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::fill(I;I;I;I;Lscala/Function0;)Lscala/collection/Traversable;)(x_0, x_1, x_2, x_3, x_4); }
  public final static Lscala/collection/Traversable; fill(I; x_0, I; x_1, I; x_2, Lscala/Function0; x_3) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::fill(I;I;I;Lscala/Function0;)Lscala/collection/Traversable;)(x_0, x_1, x_2, x_3); }
  public final static Lscala/collection/Traversable; fill(I; x_0, I; x_1, Lscala/Function0; x_2) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::fill(I;I;Lscala/Function0;)Lscala/collection/Traversable;)(x_0, x_1, x_2); }
  public final static Lscala/collection/Traversable; fill(I; x_0, Lscala/Function0; x_1) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::fill(I;Lscala/Function0;)Lscala/collection/Traversable;)(x_0, x_1); }
  public final static Lscala/collection/Traversable; concat(Lscala/collection/Seq; x_0) { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/TraversableFactory;::concat(Lscala/collection/Seq;)Lscala/collection/Traversable;)(x_0); }
  public final static Lscala/collection/Traversable; empty() { return Lscala/collection/immutable/Stack$;.MODULE$.(Lscala/collection/generic/GenericCompanion;::empty()Lscala/collection/Traversable;)(); }
  
  
  public final Z; scala$collection$LinearSeqOptimized$$super$sameElements(Lscala/collection/Iterable; that) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::sameElements(Lscala/collection/IterableLike;Lscala/collection/Iterable;)Z;)(this, that);
  }
  
  public I; length() {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::length(Lscala/collection/LinearSeqOptimized;)I;)(this);
  }
  
  public Ljava/lang/Object; apply(I; n) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::apply(Lscala/collection/LinearSeqOptimized;I;)Ljava/lang/Object;)(this, n);
  }
  
  public V; foreach(Lscala/Function1; f) {
    Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::foreach(Lscala/collection/LinearSeqOptimized;Lscala/Function1;)V;)(this, f);
  }
  
  public Z; forall(Lscala/Function1; p) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::forall(Lscala/collection/LinearSeqOptimized;Lscala/Function1;)Z;)(this, p);
  }
  
  public Z; exists(Lscala/Function1; p) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::exists(Lscala/collection/LinearSeqOptimized;Lscala/Function1;)Z;)(this, p);
  }
  
  public I; count(Lscala/Function1; p) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::count(Lscala/collection/LinearSeqOptimized;Lscala/Function1;)I;)(this, p);
  }
  
  public Lscala/Option; find(Lscala/Function1; p) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::find(Lscala/collection/LinearSeqOptimized;Lscala/Function1;)Lscala/Option;)(this, p);
  }
  
  public Ljava/lang/Object; foldLeft(Ljava/lang/Object; z, Lscala/Function2; f) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::foldLeft(Lscala/collection/LinearSeqOptimized;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, f);
  }
  
  public Ljava/lang/Object; foldRight(Ljava/lang/Object; z, Lscala/Function2; f) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::foldRight(Lscala/collection/LinearSeqOptimized;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, f);
  }
  
  public Ljava/lang/Object; reduceLeft(Lscala/Function2; f) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::reduceLeft(Lscala/collection/LinearSeqOptimized;Lscala/Function2;)Ljava/lang/Object;)(this, f);
  }
  
  public Ljava/lang/Object; reduceRight(Lscala/Function2; op) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::reduceRight(Lscala/collection/LinearSeqOptimized;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Ljava/lang/Object; last() {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::last(Lscala/collection/LinearSeqOptimized;)Ljava/lang/Object;)(this);
  }
  
  public Lscala/collection/LinearSeqOptimized; take(I; n) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::take(Lscala/collection/LinearSeqOptimized;I;)Lscala/collection/LinearSeqOptimized;)(this, n);
  }
  
  public Lscala/collection/LinearSeqOptimized; drop(I; n) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::drop(Lscala/collection/LinearSeqOptimized;I;)Lscala/collection/LinearSeqOptimized;)(this, n);
  }
  
  public Lscala/collection/LinearSeqOptimized; dropRight(I; n) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::dropRight(Lscala/collection/LinearSeqOptimized;I;)Lscala/collection/LinearSeqOptimized;)(this, n);
  }
  
  public Lscala/collection/LinearSeqOptimized; slice(I; from, I; until) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::slice(Lscala/collection/LinearSeqOptimized;I;I;)Lscala/collection/LinearSeqOptimized;)(this, from, until);
  }
  
  public Lscala/collection/LinearSeqOptimized; takeWhile(Lscala/Function1; p) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::takeWhile(Lscala/collection/LinearSeqOptimized;Lscala/Function1;)Lscala/collection/LinearSeqOptimized;)(this, p);
  }
  
  public Lscala/Tuple2; span(Lscala/Function1; p) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::span(Lscala/collection/LinearSeqOptimized;Lscala/Function1;)Lscala/Tuple2;)(this, p);
  }
  
  public Z; sameElements(Lscala/collection/Iterable; that) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::sameElements(Lscala/collection/LinearSeqOptimized;Lscala/collection/Iterable;)Z;)(this, that);
  }
  
  public I; lengthCompare(I; len) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::lengthCompare(Lscala/collection/LinearSeqOptimized;I;)I;)(this, len);
  }
  
  public Z; isDefinedAt(I; x) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::isDefinedAt(Lscala/collection/LinearSeqOptimized;I;)Z;)(this, x);
  }
  
  public I; segmentLength(Lscala/Function1; p, I; from) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::segmentLength(Lscala/collection/LinearSeqOptimized;Lscala/Function1;I;)I;)(this, p, from);
  }
  
  public I; indexWhere(Lscala/Function1; p, I; from) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::indexWhere(Lscala/collection/LinearSeqOptimized;Lscala/Function1;I;)I;)(this, p, from);
  }
  
  public I; lastIndexWhere(Lscala/Function1; p, I; end) {
    return Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::lastIndexWhere(Lscala/collection/LinearSeqOptimized;Lscala/Function1;I;)I;)(this, p, end);
  }
  
  public Lscala/collection/LinearSeq; thisCollection() {
    return Lscala/collection/LinearSeqLike$class;.(Lscala/collection/LinearSeqLike$class;::thisCollection(Lscala/collection/LinearSeqLike;)Lscala/collection/LinearSeq;)(this);
  }
  
  public Lscala/collection/LinearSeq; toCollection(Lscala/collection/LinearSeqLike; repr) {
    return Lscala/collection/LinearSeqLike$class;.(Lscala/collection/LinearSeqLike$class;::toCollection(Lscala/collection/LinearSeqLike;Lscala/collection/LinearSeqLike;)Lscala/collection/LinearSeq;)(this, repr);
  }
  
  public I; size() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::size(Lscala/collection/SeqLike;)I;)(this);
  }
  
  public I; prefixLength(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::prefixLength(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexWhere(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexWhere(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public I; findIndexOf(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::findIndexOf(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexOf(Ljava/lang/Object; elem) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexOf(Lscala/collection/SeqLike;Ljava/lang/Object;)I;)(this, elem);
  }
  
  public I; indexOf(Ljava/lang/Object; elem, I; from) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexOf(Lscala/collection/SeqLike;Ljava/lang/Object;I;)I;)(this, elem, from);
  }
  
  public I; lastIndexOf(Ljava/lang/Object; elem) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexOf(Lscala/collection/SeqLike;Ljava/lang/Object;)I;)(this, elem);
  }
  
  public I; lastIndexOf(Ljava/lang/Object; elem, I; end) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexOf(Lscala/collection/SeqLike;Ljava/lang/Object;I;)I;)(this, elem, end);
  }
  
  public I; lastIndexWhere(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexWhere(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public Ljava/lang/Object; reverseMap(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::reverseMap(Lscala/collection/SeqLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Lscala/collection/Iterator; reverseIterator() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::reverseIterator(Lscala/collection/SeqLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; reversedElements() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::reversedElements(Lscala/collection/SeqLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Z; startsWith(Lscala/collection/Seq; that, I; offset) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::startsWith(Lscala/collection/SeqLike;Lscala/collection/Seq;I;)Z;)(this, that, offset);
  }
  
  public Z; startsWith(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::startsWith(Lscala/collection/SeqLike;Lscala/collection/Seq;)Z;)(this, that);
  }
  
  public Z; endsWith(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::endsWith(Lscala/collection/SeqLike;Lscala/collection/Seq;)Z;)(this, that);
  }
  
  public I; indexOfSlice(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexOfSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;)I;)(this, that);
  }
  
  public I; indexOfSlice(Lscala/collection/Seq; that, I; from) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexOfSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;I;)I;)(this, that, from);
  }
  
  public I; lastIndexOfSlice(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexOfSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;)I;)(this, that);
  }
  
  public I; lastIndexOfSlice(Lscala/collection/Seq; that, I; end) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexOfSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;I;)I;)(this, that, end);
  }
  
  public Z; containsSlice(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::containsSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;)Z;)(this, that);
  }
  
  public Z; contains(Ljava/lang/Object; elem) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::contains(Lscala/collection/SeqLike;Ljava/lang/Object;)Z;)(this, elem);
  }
  
  public Ljava/lang/Object; union(Lscala/collection/Seq; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::union(Lscala/collection/SeqLike;Lscala/collection/Seq;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; diff(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::diff(Lscala/collection/SeqLike;Lscala/collection/Seq;)Ljava/lang/Object;)(this, that);
  }
  
  public Ljava/lang/Object; intersect(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::intersect(Lscala/collection/SeqLike;Lscala/collection/Seq;)Ljava/lang/Object;)(this, that);
  }
  
  public Ljava/lang/Object; distinct() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::distinct(Lscala/collection/SeqLike;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; patch(I; from, Lscala/collection/Seq; patch, I; replaced, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::patch(Lscala/collection/SeqLike;I;Lscala/collection/Seq;I;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, from, patch, replaced, bf);
  }
  
  public Ljava/lang/Object; updated(I; index, Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::updated(Lscala/collection/SeqLike;I;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, index, elem, bf);
  }
  
  public Ljava/lang/Object; $plus$colon(Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::$plus$colon(Lscala/collection/SeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, elem, bf);
  }
  
  public Ljava/lang/Object; $colon$plus(Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::$colon$plus(Lscala/collection/SeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, elem, bf);
  }
  
  public Ljava/lang/Object; padTo(I; len, Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::padTo(Lscala/collection/SeqLike;I;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, len, elem, bf);
  }
  
  public Z; corresponds(Lscala/collection/Seq; that, Lscala/Function2; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::corresponds(Lscala/collection/SeqLike;Lscala/collection/Seq;Lscala/Function2;)Z;)(this, that, p);
  }
  
  public Ljava/lang/Object; sortWith(Lscala/Function2; lt) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::sortWith(Lscala/collection/SeqLike;Lscala/Function2;)Ljava/lang/Object;)(this, lt);
  }
  
  public Ljava/lang/Object; sortBy(Lscala/Function1; f, Lscala/math/Ordering; ord) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::sortBy(Lscala/collection/SeqLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;)(this, f, ord);
  }
  
  public Ljava/lang/Object; sorted(Lscala/math/Ordering; ord) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::sorted(Lscala/collection/SeqLike;Lscala/math/Ordering;)Ljava/lang/Object;)(this, ord);
  }
  
  public Lscala/collection/Seq; toSeq() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::toSeq(Lscala/collection/SeqLike;)Lscala/collection/Seq;)(this);
  }
  
  public Lscala/collection/immutable/Range; indices() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indices(Lscala/collection/SeqLike;)Lscala/collection/immutable/Range;)(this);
  }
  
  public Lscala/collection/SeqView; view() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::view(Lscala/collection/SeqLike;)Lscala/collection/SeqView;)(this);
  }
  
  public Lscala/collection/SeqView; view(I; from, I; until) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::view(Lscala/collection/SeqLike;I;I;)Lscala/collection/SeqView;)(this, from, until);
  }
  
  public I; hashCode() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::hashCode(Lscala/collection/SeqLike;)I;)(this);
  }
  
  public Z; equals(Ljava/lang/Object; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::equals(Lscala/collection/SeqLike;Ljava/lang/Object;)Z;)(this, that);
  }
  
  public I; findLastIndexOf(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::findLastIndexOf(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public Z; equalsWith(Lscala/collection/Seq; that, Lscala/Function2; f) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::equalsWith(Lscala/collection/SeqLike;Lscala/collection/Seq;Lscala/Function2;)Z;)(this, that, f);
  }
  
  public Lscala/collection/SeqView; projection() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::projection(Lscala/collection/SeqLike;)Lscala/collection/SeqView;)(this);
  }
  
  public Lscala/PartialFunction; orElse(Lscala/PartialFunction; that) {
    return Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::orElse(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;)(this, that);
  }
  
  public Lscala/PartialFunction; andThen(Lscala/Function1; k) {
    return Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::andThen(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;)(this, k);
  }
  
  public Lscala/Function1; lift() {
    return Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::lift(Lscala/PartialFunction;)Lscala/Function1;)(this);
  }
  
  public Lscala/Function1; compose(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/collection/Iterable; toIterable() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::toIterable(Lscala/collection/IterableLike;)Lscala/collection/Iterable;)(this);
  }
  
  public Lscala/collection/Iterator; grouped(I; size) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::grouped(Lscala/collection/IterableLike;I;)Lscala/collection/Iterator;)(this, size);
  }
  
  public Lscala/collection/Iterator; sliding(I; size) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::sliding(Lscala/collection/IterableLike;I;)Lscala/collection/Iterator;)(this, size);
  }
  
  public Lscala/collection/Iterator; sliding(I; size, I; step) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::sliding(Lscala/collection/IterableLike;I;I;)Lscala/collection/Iterator;)(this, size, step);
  }
  
  public Ljava/lang/Object; takeRight(I; n) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::takeRight(Lscala/collection/IterableLike;I;)Ljava/lang/Object;)(this, n);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start, I; len) {
    Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::copyToArray(Lscala/collection/IterableLike;Ljava/lang/Object;I;I;)V;)(this, xs, start, len);
  }
  
  public Ljava/lang/Object; zip(Lscala/collection/Iterable; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::zip(Lscala/collection/IterableLike;Lscala/collection/Iterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; zipAll(Lscala/collection/Iterable; that, Ljava/lang/Object; thisElem, Ljava/lang/Object; thatElem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::zipAll(Lscala/collection/IterableLike;Lscala/collection/Iterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, thisElem, thatElem, bf);
  }
  
  public Ljava/lang/Object; zipWithIndex(Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::zipWithIndex(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, bf);
  }
  
  public Lscala/collection/immutable/Stream; toStream() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::toStream(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;)(this);
  }
  
  public Z; canEqual(Ljava/lang/Object; that) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::canEqual(Lscala/collection/IterableLike;Ljava/lang/Object;)Z;)(this, that);
  }
  
  public Lscala/collection/Iterator; elements() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::elements(Lscala/collection/IterableLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Ljava/lang/Object; first() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::first(Lscala/collection/IterableLike;)Ljava/lang/Object;)(this);
  }
  
  public Lscala/Option; firstOption() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::firstOption(Lscala/collection/IterableLike;)Lscala/Option;)(this);
  }
  
  public Lscala/collection/mutable/Builder; newBuilder() {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::newBuilder(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;)(this);
  }
  
  public Lscala/collection/mutable/Builder; genericBuilder() {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::genericBuilder(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;)(this);
  }
  
  public Lscala/Tuple2; unzip(Lscala/Function1; asPair) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::unzip(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;)(this, asPair);
  }
  
  public Lscala/collection/Traversable; flatten(Lscala/Function1; asTraversable) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::flatten(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/Traversable;)(this, asTraversable);
  }
  
  public Lscala/collection/Traversable; transpose(Lscala/Function1; asTraversable) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::transpose(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/Traversable;)(this, asTraversable);
  }
  
  public Ljava/lang/Object; repr() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::repr(Lscala/collection/TraversableLike;)Ljava/lang/Object;)(this);
  }
  
  public final Z; isTraversableAgain() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::isTraversableAgain(Lscala/collection/TraversableLike;)Z;)(this);
  }
  
  public Z; hasDefiniteSize() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::hasDefiniteSize(Lscala/collection/TraversableLike;)Z;)(this);
  }
  
  public Ljava/lang/Object; $plus$plus(Lscala/collection/TraversableOnce; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::$plus$plus(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; map(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::map(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Ljava/lang/Object; flatMap(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::flatMap(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Ljava/lang/Object; filter(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::filter(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Ljava/lang/Object; filterNot(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::filterNot(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Ljava/lang/Object; collect(Lscala/PartialFunction; pf, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::collect(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, pf, bf);
  }
  
  public Lscala/Tuple2; partition(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::partition(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;)(this, p);
  }
  
  public Lscala/collection/immutable/Map; groupBy(Lscala/Function1; f) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::groupBy(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;)(this, f);
  }
  
  public Ljava/lang/Object; scanLeft(Ljava/lang/Object; z, Lscala/Function2; op, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::scanLeft(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, z, op, bf);
  }
  
  public Ljava/lang/Object; scanRight(Ljava/lang/Object; z, Lscala/Function2; op, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::scanRight(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, z, op, bf);
  }
  
  public Lscala/Option; headOption() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::headOption(Lscala/collection/TraversableLike;)Lscala/Option;)(this);
  }
  
  public Lscala/Option; lastOption() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::lastOption(Lscala/collection/TraversableLike;)Lscala/Option;)(this);
  }
  
  public Ljava/lang/Object; init() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::init(Lscala/collection/TraversableLike;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; dropWhile(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::dropWhile(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Lscala/Tuple2; splitAt(I; n) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::splitAt(Lscala/collection/TraversableLike;I;)Lscala/Tuple2;)(this, n);
  }
  
  public Lscala/collection/Traversable; toTraversable() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::toTraversable(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;)(this);
  }
  
  public Lscala/collection/Iterator; toIterator() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::toIterator(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Ljava/lang/String; stringPrefix() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::stringPrefix(Lscala/collection/TraversableLike;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/generic/FilterMonadic; withFilter(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::withFilter(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;)(this, p);
  }
  
  public Lscala/collection/immutable/List; reversed() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reversed(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;)(this);
  }
  
  public Z; nonEmpty() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::nonEmpty(Lscala/collection/TraversableOnce;)Z;)(this);
  }
  
  public Ljava/lang/Object; $div$colon(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$div$colon(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; $colon$bslash(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$colon$bslash(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Lscala/Option; reduceLeftOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceLeftOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Lscala/Option; reduceRightOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceRightOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Ljava/lang/Object; sum(Lscala/math/Numeric; num) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::sum(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; product(Lscala/math/Numeric; num) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::product(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; min(Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::min(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public Ljava/lang/Object; max(Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::max(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public V; copyToBuffer(Lscala/collection/mutable/Buffer; dest) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToBuffer(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V;)(this, dest);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToArray(Lscala/collection/TraversableOnce;Ljava/lang/Object;I;)V;)(this, xs, start);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToArray(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V;)(this, xs);
  }
  
  public Ljava/lang/Object; toArray(Lscala/reflect/ClassManifest; evidence$1) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toArray(Lscala/collection/TraversableOnce;Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(this, evidence$1);
  }
  
  public Lscala/collection/immutable/List; toList() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toList(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;)(this);
  }
  
  public Lscala/collection/immutable/IndexedSeq; toIndexedSeq() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toIndexedSeq(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;)(this);
  }
  
  public Lscala/collection/mutable/Buffer; toBuffer() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toBuffer(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;)(this);
  }
  
  public Lscala/collection/immutable/Set; toSet() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toSet(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;)(this);
  }
  
  public Lscala/collection/immutable/Map; toMap(Lscala/Predef$$less$colon$less; ev) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toMap(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(this, ev);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)(this, start, sep, end);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; sep) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;)(this, sep);
  }
  
  public Ljava/lang/String; mkString() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, start, sep, end);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; sep) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, sep);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(this, b);
  }
  
  private Lscala/collection/immutable/List; elems$u0020;
  
  protected Lscala/collection/immutable/List; elems() {
    return this.(Lscala/collection/immutable/Stack;)elems$u0020;
  }
  
  public Lscala/collection/generic/GenericCompanion; companion() {
    return Lscala/collection/immutable/Stack$;.MODULE$;
  }
  
  public this() {
    (Lscala/collection/immutable/Stack;::this(Lscala/collection/immutable/List;)V;)(Lscala/collection/immutable/Nil$;.MODULE$);
  }
  
  public Z; isEmpty() {
    return this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::isEmpty()Z;)();
  }
  
  public Ljava/lang/Object; head() {
    return this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)();
  }
  
  public Lscala/collection/immutable/Stack; tail() {
    return (new (Lscala/collection/immutable/Stack;::this(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;)));
  }
  
  public Lscala/collection/immutable/Stack; push(Ljava/lang/Object; elem) {
    Ljava/lang/Object; x$1 = elem;
    return (new (Lscala/collection/immutable/Stack;::this(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x$1)));
  }
  
  public Lscala/collection/immutable/Stack; push(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return this.(Lscala/collection/immutable/Stack;::push(Ljava/lang/Object;)Lscala/collection/immutable/Stack;)(elem1).(Lscala/collection/immutable/Stack;::push(Ljava/lang/Object;)Lscala/collection/immutable/Stack;)(elem2).(Lscala/collection/immutable/Stack;::pushAll(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Stack;)(elems);
  }
  
  public Lscala/collection/immutable/Stack; pushAll(Lscala/collection/TraversableOnce; xs) {
    Lscala/collection/immutable/Stack; x$2 = this;
    return xs.(Lscala/collection/TraversableOnce;::toIterator()Lscala/collection/Iterator;)().(Lscala/collection/TraversableOnce;::$div$colon(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(x$2, (new (Lscala/collection/immutable/Stack$$anonfun$pushAll$1;::this(Lscala/collection/immutable/Stack;)V;)(this))).<cast>(Lscala/collection/immutable/Stack;);
  }
  
  public Ljava/lang/Object; top() {
    Ljava/lang/Object; $1$;
    if (!(this.(Lscala/collection/immutable/Stack;::isEmpty()Z;)()))
      {
        $1$ = this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)();
      }
    else
      {
        throw (new (Ljava/util/NoSuchElementException;::this(Ljava/lang/String;)V;)("top of empty stack"));
      }
    return $1$;
  }
  
  public Lscala/collection/immutable/Stack; pop() {
    Lscala/collection/immutable/Stack; $2$;
    if (!(this.(Lscala/collection/immutable/Stack;::isEmpty()Z;)()))
      {
        $2$ = (new (Lscala/collection/immutable/Stack;::this(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;)));
      }
    else
      {
        throw (new (Ljava/util/NoSuchElementException;::this(Ljava/lang/String;)V;)("pop of empty stack"));
      }
    return $2$;
  }
  
  public Lscala/Tuple2; pop2() {
    Lscala/Tuple2; $3$;
    if (!(this.(Lscala/collection/immutable/Stack;::isEmpty()Z;)()))
      {
        $3$ = (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)(), (new (Lscala/collection/immutable/Stack;::this(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;)))));
      }
    else
      {
        throw (new (Ljava/util/NoSuchElementException;::this(Ljava/lang/String;)V;)("pop of empty stack"));
      }
    return $3$;
  }
  
  public Lscala/collection/immutable/Stack; reverse() {
    return (new (Lscala/collection/immutable/Stack;::this(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/immutable/List;::reverse()Lscala/collection/immutable/List;)()));
  }
  
  public Lscala/collection/Iterator; iterator() {
    return this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/LinearSeqLike;::iterator()Lscala/collection/Iterator;)();
  }
  
  public Ljava/lang/String; toString() {
    return this.(Lscala/collection/immutable/Stack;::elems()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)("Stack(", ", ", ")");
  }
  
  public Lscala/Function1; andThen(Lscala/Function1; g) {
    return this.(Lscala/PartialFunction;::andThen(Lscala/Function1;)Lscala/PartialFunction;)(g);
  }
  
  public Lscala/collection/IterableView; projection() {
    return this.(Lscala/collection/SeqLike;::projection()Lscala/collection/SeqView;)();
  }
  
  public Lscala/collection/TraversableView; view(I; from, I; until) {
    return this.(Lscala/collection/SeqLike;::view(I;I;)Lscala/collection/SeqView;)(from, until);
  }
  
  public Lscala/collection/IterableView; view(I; from, I; until) {
    return this.(Lscala/collection/SeqLike;::view(I;I;)Lscala/collection/SeqView;)(from, until);
  }
  
  public Lscala/collection/TraversableView; view() {
    return this.(Lscala/collection/SeqLike;::view()Lscala/collection/SeqView;)();
  }
  
  public Lscala/collection/IterableView; view() {
    return this.(Lscala/collection/SeqLike;::view()Lscala/collection/SeqView;)();
  }
  
  public Lscala/collection/Traversable; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/LinearSeqLike;::toCollection(Lscala/collection/LinearSeqLike;)Lscala/collection/LinearSeq;)(repr.<cast>(Lscala/collection/LinearSeqLike;));
  }
  
  public Lscala/collection/Iterable; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/LinearSeqLike;::toCollection(Lscala/collection/LinearSeqLike;)Lscala/collection/LinearSeq;)(repr.<cast>(Lscala/collection/LinearSeqLike;));
  }
  
  public Lscala/collection/Seq; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/LinearSeqLike;::toCollection(Lscala/collection/LinearSeqLike;)Lscala/collection/LinearSeq;)(repr.<cast>(Lscala/collection/LinearSeqLike;));
  }
  
  public Lscala/collection/Traversable; thisCollection() {
    return this.(Lscala/collection/LinearSeqLike;::thisCollection()Lscala/collection/LinearSeq;)();
  }
  
  public Lscala/collection/Iterable; thisCollection() {
    return this.(Lscala/collection/LinearSeqLike;::thisCollection()Lscala/collection/LinearSeq;)();
  }
  
  public Lscala/collection/Seq; thisCollection() {
    return this.(Lscala/collection/LinearSeqLike;::thisCollection()Lscala/collection/LinearSeq;)();
  }
  
  public Z; isDefinedAt(Ljava/lang/Object; x) {
    return this.(Lscala/collection/LinearSeqOptimized;::isDefinedAt(I;)Z;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(x));
  }
  
  public Ljava/lang/Object; takeWhile(Lscala/Function1; p) {
    return this.(Lscala/collection/LinearSeqOptimized;::takeWhile(Lscala/Function1;)Lscala/collection/LinearSeqOptimized;)(p);
  }
  
  public Ljava/lang/Object; slice(I; from, I; until) {
    return this.(Lscala/collection/LinearSeqOptimized;::slice(I;I;)Lscala/collection/LinearSeqOptimized;)(from, until);
  }
  
  public Ljava/lang/Object; dropRight(I; n) {
    return this.(Lscala/collection/LinearSeqOptimized;::dropRight(I;)Lscala/collection/LinearSeqOptimized;)(n);
  }
  
  public Ljava/lang/Object; drop(I; n) {
    return this.(Lscala/collection/LinearSeqOptimized;::drop(I;)Lscala/collection/LinearSeqOptimized;)(n);
  }
  
  public Ljava/lang/Object; take(I; n) {
    return this.(Lscala/collection/LinearSeqOptimized;::take(I;)Lscala/collection/LinearSeqOptimized;)(n);
  }
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/collection/LinearSeqOptimized;::apply(I;)Ljava/lang/Object;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v1));
  }
  
  public Ljava/lang/Object; reverse() {
    return this.(Lscala/collection/immutable/Stack;::reverse()Lscala/collection/immutable/Stack;)();
  }
  
  public Lscala/collection/LinearSeqOptimized; tail() {
    return this.(Lscala/collection/immutable/Stack;::tail()Lscala/collection/immutable/Stack;)();
  }
  
  public Ljava/lang/Object; tail() {
    return this.(Lscala/collection/immutable/Stack;::tail()Lscala/collection/immutable/Stack;)();
  }
  
  public this(Lscala/collection/immutable/List; elems) {
    this.(Lscala/collection/immutable/Stack;)elems$u0020 = elems;
    (Ljava/lang/Object;::super()V;)();
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$init$(Lscala/collection/TraversableOnce;)V;)(this);
    Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::$init$(Lscala/collection/TraversableLike;)V;)(this);
    Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::$init$(Lscala/collection/generic/GenericTraversableTemplate;)V;)(this);
    Lscala/collection/Traversable$class;.(Lscala/collection/Traversable$class;::$init$(Lscala/collection/Traversable;)V;)(this);
    Lscala/collection/immutable/Traversable$class;.(Lscala/collection/immutable/Traversable$class;::$init$(Lscala/collection/immutable/Traversable;)V;)(this);
    Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::$init$(Lscala/collection/IterableLike;)V;)(this);
    Lscala/collection/Iterable$class;.(Lscala/collection/Iterable$class;::$init$(Lscala/collection/Iterable;)V;)(this);
    Lscala/collection/immutable/Iterable$class;.(Lscala/collection/immutable/Iterable$class;::$init$(Lscala/collection/immutable/Iterable;)V;)(this);
    Lscala/Function1$class;.(Lscala/Function1$class;::$init$(Lscala/Function1;)V;)(this);
    Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::$init$(Lscala/PartialFunction;)V;)(this);
    Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::$init$(Lscala/collection/SeqLike;)V;)(this);
    Lscala/collection/Seq$class;.(Lscala/collection/Seq$class;::$init$(Lscala/collection/Seq;)V;)(this);
    Lscala/collection/immutable/Seq$class;.(Lscala/collection/immutable/Seq$class;::$init$(Lscala/collection/immutable/Seq;)V;)(this);
    Lscala/collection/LinearSeqLike$class;.(Lscala/collection/LinearSeqLike$class;::$init$(Lscala/collection/LinearSeqLike;)V;)(this);
    Lscala/collection/LinearSeq$class;.(Lscala/collection/LinearSeq$class;::$init$(Lscala/collection/LinearSeq;)V;)(this);
    Lscala/collection/immutable/LinearSeq$class;.(Lscala/collection/immutable/LinearSeq$class;::$init$(Lscala/collection/immutable/LinearSeq;)V;)(this);
    Lscala/collection/LinearSeqOptimized$class;.(Lscala/collection/LinearSeqOptimized$class;::$init$(Lscala/collection/LinearSeqOptimized;)V;)(this);
  }
}
