public final class Lscala/collection/immutable/PagedSeq$; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  public static Lscala/collection/immutable/PagedSeq$; MODULE$ = new (Lscala/collection/immutable/PagedSeq$;::this()V;)();
  
  public final I; UndeterminedEnd() {
    return 2147483647;
  }
  
  public Lscala/collection/immutable/PagedSeq; fromIterator(Lscala/collection/Iterator; source$1, Lscala/reflect/ClassManifest; evidence$1) {
    return (new (Lscala/collection/immutable/PagedSeq;::this(Lscala/Function3;Lscala/reflect/ClassManifest;)V;)((new (Lscala/collection/immutable/PagedSeq$$anonfun$fromIterator$1;::this(Lscala/collection/Iterator;)V;)(source$1)), evidence$1));
  }
  
  public Lscala/collection/immutable/PagedSeq; fromIterable(Lscala/collection/immutable/Iterable; source, Lscala/reflect/ClassManifest; evidence$2) {
    return this.(Lscala/collection/immutable/PagedSeq$;::fromIterator(Lscala/collection/Iterator;Lscala/reflect/ClassManifest;)Lscala/collection/immutable/PagedSeq;)(source.(Lscala/collection/IterableLike;::iterator()Lscala/collection/Iterator;)(), evidence$2);
  }
  
  public Lscala/collection/immutable/PagedSeq; fromStrings(Lscala/collection/Iterator; source$2) {
    Lscala/runtime/ObjectRef; current$1 = (new (Lscala/runtime/ObjectRef;::this(Ljava/lang/Object;)V;)(""));
    return (new (Lscala/collection/immutable/PagedSeq;::this(Lscala/Function3;Lscala/reflect/ClassManifest;)V;)((new (Lscala/collection/immutable/PagedSeq$$anonfun$fromStrings$1;::this(Lscala/collection/Iterator;Lscala/runtime/ObjectRef;)V;)(source$2, current$1)), Lscala/reflect/Manifest$;.MODULE$.(Lscala/reflect/Manifest$;::Char()Lscala/reflect/AnyValManifest;)()));
  }
  
  public Lscala/collection/immutable/PagedSeq; fromStrings(Lscala/collection/immutable/Iterable; source) {
    return this.(Lscala/collection/immutable/PagedSeq$;::fromStrings(Lscala/collection/Iterator;)Lscala/collection/immutable/PagedSeq;)(source.(Lscala/collection/IterableLike;::iterator()Lscala/collection/Iterator;)());
  }
  
  public Lscala/collection/immutable/PagedSeq; fromLines(Lscala/collection/Iterator; source) {
    Lscala/runtime/BooleanRef; isFirst$1 = (new (Lscala/runtime/BooleanRef;::this(Z;)V;)(true));
    return this.(Lscala/collection/immutable/PagedSeq$;::fromStrings(Lscala/collection/Iterator;)Lscala/collection/immutable/PagedSeq;)(source.(Lscala/collection/Iterator;::map(Lscala/Function1;)Lscala/collection/Iterator;)((new (Lscala/collection/immutable/PagedSeq$$anonfun$fromLines$1;::this(Lscala/runtime/BooleanRef;)V;)(isFirst$1))));
  }
  
  public Lscala/collection/immutable/PagedSeq; fromLines(Lscala/collection/immutable/Iterable; source) {
    return this.(Lscala/collection/immutable/PagedSeq$;::fromLines(Lscala/collection/Iterator;)Lscala/collection/immutable/PagedSeq;)(source.(Lscala/collection/IterableLike;::iterator()Lscala/collection/Iterator;)());
  }
  
  public Lscala/collection/immutable/PagedSeq; fromReader(Ljava/io/Reader; source$3) {
    return (new (Lscala/collection/immutable/PagedSeq;::this(Lscala/Function3;Lscala/reflect/ClassManifest;)V;)((new (Lscala/collection/immutable/PagedSeq$$anonfun$fromReader$1;::this(Ljava/io/Reader;)V;)(source$3)), Lscala/reflect/Manifest$;.MODULE$.(Lscala/reflect/Manifest$;::Char()Lscala/reflect/AnyValManifest;)()));
  }
  
  public Lscala/collection/immutable/PagedSeq; fromFile(Ljava/io/File; source) {
    return this.(Lscala/collection/immutable/PagedSeq$;::fromReader(Ljava/io/Reader;)Lscala/collection/immutable/PagedSeq;)((new (Ljava/io/FileReader;::this(Ljava/io/File;)V;)(source)));
  }
  
  public Lscala/collection/immutable/PagedSeq; fromFile(Ljava/lang/String; source) {
    return this.(Lscala/collection/immutable/PagedSeq$;::fromFile(Ljava/io/File;)Lscala/collection/immutable/PagedSeq;)((new (Ljava/io/File;::this(Ljava/lang/String;)V;)(source)));
  }
  
  public Lscala/collection/immutable/PagedSeq; fromSource(Lscala/io/Source; source) {
    return this.(Lscala/collection/immutable/PagedSeq$;::fromLines(Lscala/collection/Iterator;)Lscala/collection/immutable/PagedSeq;)(source.(Lscala/io/Source;::getLines()Lscala/collection/Iterator;)());
  }
  
  public final I; more$1(C;[ data, I; start, I; len, Lscala/collection/Iterator; source$2, Lscala/runtime/ObjectRef; current$1) {
    I; $1$;
    if ((current$1.(Lscala/runtime/ObjectRef;)elem.<cast>(Ljava/lang/String;).(Ljava/lang/String;::length()I;)() != 0))
      {
        I; cnt = Lscala/Predef$;.MODULE$.(Lscala/Predef$;::intWrapper(I;)Lscala/runtime/RichInt;)(current$1.(Lscala/runtime/ObjectRef;)elem.<cast>(Ljava/lang/String;).(Ljava/lang/String;::length()I;)()).(Lscala/runtime/RichInt;::min(I;)I;)(len);
        current$1.(Lscala/runtime/ObjectRef;)elem.<cast>(Ljava/lang/String;).(Ljava/lang/String;::getChars(I;I;C;[I;)V;)(0, cnt, data, start);
        current$1.(Lscala/runtime/ObjectRef;)elem = current$1.(Lscala/runtime/ObjectRef;)elem.<cast>(Ljava/lang/String;).(Ljava/lang/String;::substring(I;)Ljava/lang/String;)(cnt);
        I; $2$;
        if ((cnt == len))
          {
            $2$ = cnt;
          }
        else
          {
            $2$ = (Lscala/Predef$;.MODULE$.(Lscala/Predef$;::intWrapper(I;)Lscala/runtime/RichInt;)(this.(Lscala/collection/immutable/PagedSeq$;::more$1(C;[I;I;Lscala/collection/Iterator;Lscala/runtime/ObjectRef;)I;)(data, (start + cnt), (len - cnt), source$2, current$1)).(Lscala/runtime/RichInt;::max(I;)I;)(0) + cnt);
          }
        $1$ = $2$;
      }
    else
      {
        I; $3$;
        if (source$2.(Lscala/collection/Iterator;::hasNext()Z;)())
          {
            current$1.(Lscala/runtime/ObjectRef;)elem = source$2.(Lscala/collection/Iterator;::next()Ljava/lang/Object;)().<cast>(Ljava/lang/String;);
            $3$ = this.(Lscala/collection/immutable/PagedSeq$;::more$1(C;[I;I;Lscala/collection/Iterator;Lscala/runtime/ObjectRef;)I;)(data, start, len, source$2, current$1);
          }
        else
          {
            $3$ = -1;
          }
        $1$ = $3$;
      }
    return $1$;
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
