public final class Lscala/collection/immutable/Nil; {
  public final static Ljava/lang/Object; productElement(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/Nil$;::productElement(I;)Ljava/lang/Object;)(x_0); }
  public final static I; productArity() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/Nil$;::productArity()I;)(); }
  public final static Ljava/lang/String; productPrefix() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/Nil$;::productPrefix()Ljava/lang/String;)(); }
  public final static Lscala/collection/immutable/List; tail() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/Nil$;::tail()Lscala/collection/immutable/List;)(); }
  public final static Lscala/runtime/Nothing$; head() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/Nil$;::head()Lscala/runtime/Nothing$;)(); }
  public final static Z; isEmpty() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/Nil$;::isEmpty()Z;)(); }
  public final static Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::addString(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(x_0); }
  public final static Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; x_0, Ljava/lang/String; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::addString(Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(x_0, x_1); }
  public final static Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; x_0, Ljava/lang/String; x_1, Ljava/lang/String; x_2, Ljava/lang/String; x_3) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::addString(Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(x_0, x_1, x_2, x_3); }
  public final static Ljava/lang/String; mkString() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::mkString()Ljava/lang/String;)(); }
  public final static Ljava/lang/String; mkString(Ljava/lang/String; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::mkString(Ljava/lang/String;)Ljava/lang/String;)(x_0); }
  public final static Ljava/lang/String; mkString(Ljava/lang/String; x_0, Ljava/lang/String; x_1, Ljava/lang/String; x_2) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)(x_0, x_1, x_2); }
  public final static Lscala/collection/immutable/Map; toMap(Lscala/Predef$$less$colon$less; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toMap(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(x_0); }
  public final static Lscala/collection/immutable/Set; toSet() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toSet()Lscala/collection/immutable/Set;)(); }
  public final static Lscala/collection/mutable/Buffer; toBuffer() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toBuffer()Lscala/collection/mutable/Buffer;)(); }
  public final static Lscala/collection/immutable/IndexedSeq; toIndexedSeq() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toIndexedSeq()Lscala/collection/immutable/IndexedSeq;)(); }
  public final static Ljava/lang/Object; toArray(Lscala/reflect/ClassManifest; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toArray(Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(x_0); }
  public final static V; copyToArray(Ljava/lang/Object; x_0) { Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::copyToArray(Ljava/lang/Object;)V;)(x_0); }
  public final static V; copyToArray(Ljava/lang/Object; x_0, I; x_1) { Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::copyToArray(Ljava/lang/Object;I;)V;)(x_0, x_1); }
  public final static V; copyToBuffer(Lscala/collection/mutable/Buffer; x_0) { Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::copyToBuffer(Lscala/collection/mutable/Buffer;)V;)(x_0); }
  public final static Ljava/lang/Object; max(Lscala/math/Ordering; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::max(Lscala/math/Ordering;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; min(Lscala/math/Ordering; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::min(Lscala/math/Ordering;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; product(Lscala/math/Numeric; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::product(Lscala/math/Numeric;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; sum(Lscala/math/Numeric; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::sum(Lscala/math/Numeric;)Ljava/lang/Object;)(x_0); }
  public final static Lscala/Option; reduceRightOption(Lscala/Function2; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::reduceRightOption(Lscala/Function2;)Lscala/Option;)(x_0); }
  public final static Lscala/Option; reduceLeftOption(Lscala/Function2; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::reduceLeftOption(Lscala/Function2;)Lscala/Option;)(x_0); }
  public final static Ljava/lang/Object; $colon$bslash(Ljava/lang/Object; x_0, Lscala/Function2; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::$colon$bslash(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Ljava/lang/Object; $div$colon(Ljava/lang/Object; x_0, Lscala/Function2; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::$div$colon(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Z; nonEmpty() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::nonEmpty()Z;)(); }
  public final static Lscala/collection/generic/FilterMonadic; withFilter(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::withFilter(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;)(x_0); }
  public final static Lscala/collection/Iterator; toIterator() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toIterator()Lscala/collection/Iterator;)(); }
  public final static Lscala/collection/Traversable; toTraversable() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toTraversable()Lscala/collection/Traversable;)(); }
  public final static Ljava/lang/Object; init() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::init()Ljava/lang/Object;)(); }
  public final static Lscala/Option; lastOption() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::lastOption()Lscala/Option;)(); }
  public final static Ljava/lang/Object; tail() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::tail()Ljava/lang/Object;)(); }
  public final static Lscala/Option; headOption() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::headOption()Lscala/Option;)(); }
  public final static Ljava/lang/Object; scanRight(Ljava/lang/Object; x_0, Lscala/Function2; x_1, Lscala/collection/generic/CanBuildFrom; x_2) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::scanRight(Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1, x_2); }
  public final static Ljava/lang/Object; scanLeft(Ljava/lang/Object; x_0, Lscala/Function2; x_1, Lscala/collection/generic/CanBuildFrom; x_2) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::scanLeft(Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1, x_2); }
  public final static Lscala/collection/immutable/Map; groupBy(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::groupBy(Lscala/Function1;)Lscala/collection/immutable/Map;)(x_0); }
  public final static Lscala/Tuple2; partition(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::partition(Lscala/Function1;)Lscala/Tuple2;)(x_0); }
  public final static Ljava/lang/Object; collect(Lscala/PartialFunction; x_0, Lscala/collection/generic/CanBuildFrom; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::collect(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Ljava/lang/Object; filterNot(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::filterNot(Lscala/Function1;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; filter(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::filter(Lscala/Function1;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; flatMap(Lscala/Function1; x_0, Lscala/collection/generic/CanBuildFrom; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::flatMap(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Ljava/lang/Object; map(Lscala/Function1; x_0, Lscala/collection/generic/CanBuildFrom; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Z; hasDefiniteSize() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::hasDefiniteSize()Z;)(); }
  public final static Z; isTraversableAgain() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::isTraversableAgain()Z;)(); }
  public final static Ljava/lang/Object; repr() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::repr()Ljava/lang/Object;)(); }
  public final static Lscala/collection/Traversable; transpose(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::transpose(Lscala/Function1;)Lscala/collection/Traversable;)(x_0); }
  public final static Lscala/collection/Traversable; flatten(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::flatten(Lscala/Function1;)Lscala/collection/Traversable;)(x_0); }
  public final static Lscala/Tuple2; unzip(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::unzip(Lscala/Function1;)Lscala/Tuple2;)(x_0); }
  public final static Lscala/collection/mutable/Builder; genericBuilder() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::genericBuilder()Lscala/collection/mutable/Builder;)(); }
  public final static Lscala/Option; firstOption() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::firstOption()Lscala/Option;)(); }
  public final static Ljava/lang/Object; first() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::first()Ljava/lang/Object;)(); }
  public final static Lscala/collection/Iterator; elements() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::elements()Lscala/collection/Iterator;)(); }
  public final static Z; canEqual(Ljava/lang/Object; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::canEqual(Ljava/lang/Object;)Z;)(x_0); }
  public final static Ljava/lang/Object; zipWithIndex(Lscala/collection/generic/CanBuildFrom; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::zipWithIndex(Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; zipAll(Lscala/collection/Iterable; x_0, Ljava/lang/Object; x_1, Ljava/lang/Object; x_2, Lscala/collection/generic/CanBuildFrom; x_3) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::zipAll(Lscala/collection/Iterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1, x_2, x_3); }
  public final static Ljava/lang/Object; zip(Lscala/collection/Iterable; x_0, Lscala/collection/generic/CanBuildFrom; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::zip(Lscala/collection/Iterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1); }
  public final static V; copyToArray(Ljava/lang/Object; x_0, I; x_1, I; x_2) { Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::copyToArray(Ljava/lang/Object;I;I;)V;)(x_0, x_1, x_2); }
  public final static Lscala/collection/Iterator; sliding(I; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::sliding(I;I;)Lscala/collection/Iterator;)(x_0, x_1); }
  public final static Lscala/collection/Iterator; sliding(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::sliding(I;)Lscala/collection/Iterator;)(x_0); }
  public final static Lscala/collection/Iterator; grouped(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::grouped(I;)Lscala/collection/Iterator;)(x_0); }
  public final static Lscala/collection/Iterable; toIterable() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toIterable()Lscala/collection/Iterable;)(); }
  public final static Lscala/Function1; compose(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::compose(Lscala/Function1;)Lscala/Function1;)(x_0); }
  public final static Lscala/Function1; lift() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::lift()Lscala/Function1;)(); }
  public final static Lscala/PartialFunction; andThen(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::andThen(Lscala/Function1;)Lscala/PartialFunction;)(x_0); }
  public final static Lscala/PartialFunction; orElse(Lscala/PartialFunction; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::orElse(Lscala/PartialFunction;)Lscala/PartialFunction;)(x_0); }
  public final static Lscala/collection/SeqView; projection() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::projection()Lscala/collection/SeqView;)(); }
  public final static Z; equalsWith(Lscala/collection/Seq; x_0, Lscala/Function2; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::equalsWith(Lscala/collection/Seq;Lscala/Function2;)Z;)(x_0, x_1); }
  public final static I; findLastIndexOf(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::findLastIndexOf(Lscala/Function1;)I;)(x_0); }
  public final static Lscala/collection/SeqView; view(I; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::view(I;I;)Lscala/collection/SeqView;)(x_0, x_1); }
  public final static Lscala/collection/SeqView; view() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::view()Lscala/collection/SeqView;)(); }
  public final static Lscala/collection/immutable/Range; indices() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::indices()Lscala/collection/immutable/Range;)(); }
  public final static Lscala/collection/Seq; toSeq() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toSeq()Lscala/collection/Seq;)(); }
  public final static Ljava/lang/Object; sorted(Lscala/math/Ordering; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::sorted(Lscala/math/Ordering;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; sortBy(Lscala/Function1; x_0, Lscala/math/Ordering; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::sortBy(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Ljava/lang/Object; sortWith(Lscala/Function2; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::sortWith(Lscala/Function2;)Ljava/lang/Object;)(x_0); }
  public final static Z; corresponds(Lscala/collection/Seq; x_0, Lscala/Function2; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::corresponds(Lscala/collection/Seq;Lscala/Function2;)Z;)(x_0, x_1); }
  public final static Ljava/lang/Object; padTo(I; x_0, Ljava/lang/Object; x_1, Lscala/collection/generic/CanBuildFrom; x_2) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::padTo(I;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1, x_2); }
  public final static Ljava/lang/Object; $colon$plus(Ljava/lang/Object; x_0, Lscala/collection/generic/CanBuildFrom; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::$colon$plus(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Ljava/lang/Object; updated(I; x_0, Ljava/lang/Object; x_1, Lscala/collection/generic/CanBuildFrom; x_2) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::updated(I;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1, x_2); }
  public final static Ljava/lang/Object; patch(I; x_0, Lscala/collection/Seq; x_1, I; x_2, Lscala/collection/generic/CanBuildFrom; x_3) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::patch(I;Lscala/collection/Seq;I;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1, x_2, x_3); }
  public final static Ljava/lang/Object; distinct() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::distinct()Ljava/lang/Object;)(); }
  public final static Ljava/lang/Object; intersect(Lscala/collection/Seq; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::intersect(Lscala/collection/Seq;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; diff(Lscala/collection/Seq; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::diff(Lscala/collection/Seq;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; union(Lscala/collection/Seq; x_0, Lscala/collection/generic/CanBuildFrom; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::union(Lscala/collection/Seq;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Z; contains(Ljava/lang/Object; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::contains(Ljava/lang/Object;)Z;)(x_0); }
  public final static Z; containsSlice(Lscala/collection/Seq; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::containsSlice(Lscala/collection/Seq;)Z;)(x_0); }
  public final static I; lastIndexOfSlice(Lscala/collection/Seq; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::lastIndexOfSlice(Lscala/collection/Seq;I;)I;)(x_0, x_1); }
  public final static I; lastIndexOfSlice(Lscala/collection/Seq; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::lastIndexOfSlice(Lscala/collection/Seq;)I;)(x_0); }
  public final static I; indexOfSlice(Lscala/collection/Seq; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::indexOfSlice(Lscala/collection/Seq;I;)I;)(x_0, x_1); }
  public final static I; indexOfSlice(Lscala/collection/Seq; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::indexOfSlice(Lscala/collection/Seq;)I;)(x_0); }
  public final static Z; endsWith(Lscala/collection/Seq; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::endsWith(Lscala/collection/Seq;)Z;)(x_0); }
  public final static Z; startsWith(Lscala/collection/Seq; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::startsWith(Lscala/collection/Seq;)Z;)(x_0); }
  public final static Z; startsWith(Lscala/collection/Seq; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::startsWith(Lscala/collection/Seq;I;)Z;)(x_0, x_1); }
  public final static Lscala/collection/Iterator; reversedElements() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::reversedElements()Lscala/collection/Iterator;)(); }
  public final static Lscala/collection/Iterator; reverseIterator() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::reverseIterator()Lscala/collection/Iterator;)(); }
  public final static Ljava/lang/Object; reverseMap(Lscala/Function1; x_0, Lscala/collection/generic/CanBuildFrom; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::reverseMap(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1); }
  public final static I; lastIndexWhere(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::lastIndexWhere(Lscala/Function1;)I;)(x_0); }
  public final static I; lastIndexOf(Ljava/lang/Object; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::lastIndexOf(Ljava/lang/Object;I;)I;)(x_0, x_1); }
  public final static I; lastIndexOf(Ljava/lang/Object; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::lastIndexOf(Ljava/lang/Object;)I;)(x_0); }
  public final static I; indexOf(Ljava/lang/Object; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::indexOf(Ljava/lang/Object;I;)I;)(x_0, x_1); }
  public final static I; indexOf(Ljava/lang/Object; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::indexOf(Ljava/lang/Object;)I;)(x_0); }
  public final static I; findIndexOf(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::findIndexOf(Lscala/Function1;)I;)(x_0); }
  public final static I; indexWhere(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::indexWhere(Lscala/Function1;)I;)(x_0); }
  public final static I; prefixLength(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::prefixLength(Lscala/Function1;)I;)(x_0); }
  public final static I; size() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::size()I;)(); }
  public final static Lscala/collection/Iterator; iterator() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::iterator()Lscala/collection/Iterator;)(); }
  public final static Lscala/collection/Iterator; productElements() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::productElements()Lscala/collection/Iterator;)(); }
  public final static Lscala/collection/Iterator; productIterator() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::productIterator()Lscala/collection/Iterator;)(); }
  public final static I; lastIndexWhere(Lscala/Function1; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::lastIndexWhere(Lscala/Function1;I;)I;)(x_0, x_1); }
  public final static I; indexWhere(Lscala/Function1; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::indexWhere(Lscala/Function1;I;)I;)(x_0, x_1); }
  public final static I; segmentLength(Lscala/Function1; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::segmentLength(Lscala/Function1;I;)I;)(x_0, x_1); }
  public final static Z; isDefinedAt(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::isDefinedAt(I;)Z;)(x_0); }
  public final static I; lengthCompare(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::lengthCompare(I;)I;)(x_0); }
  public final static Z; sameElements(Lscala/collection/Iterable; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::sameElements(Lscala/collection/Iterable;)Z;)(x_0); }
  public final static Lscala/collection/LinearSeqOptimized; dropRight(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::dropRight(I;)Lscala/collection/LinearSeqOptimized;)(x_0); }
  public final static Ljava/lang/Object; last() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::last()Ljava/lang/Object;)(); }
  public final static Ljava/lang/Object; reduceRight(Lscala/Function2; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::reduceRight(Lscala/Function2;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; reduceLeft(Lscala/Function2; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::reduceLeft(Lscala/Function2;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; foldRight(Ljava/lang/Object; x_0, Lscala/Function2; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::foldRight(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Ljava/lang/Object; foldLeft(Ljava/lang/Object; x_0, Lscala/Function2; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::foldLeft(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Lscala/Option; find(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::find(Lscala/Function1;)Lscala/Option;)(x_0); }
  public final static I; count(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::count(Lscala/Function1;)I;)(x_0); }
  public final static Z; exists(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::exists(Lscala/Function1;)Z;)(x_0); }
  public final static Z; forall(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::forall(Lscala/Function1;)Z;)(x_0); }
  public final static V; foreach(Lscala/Function1; x_0) { Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::foreach(Lscala/Function1;)V;)(x_0); }
  public final static Ljava/lang/Object; apply(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::apply(I;)Ljava/lang/Object;)(x_0); }
  public final static I; length() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::length()I;)(); }
  public final static Lscala/collection/immutable/List; sort(Lscala/Function2; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::sort(Lscala/Function2;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; removeDuplicates() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::removeDuplicates()Lscala/collection/immutable/List;)(); }
  public final static Lscala/collection/immutable/List; $minus(Ljava/lang/Object; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::$minus(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; $minus$minus(Lscala/collection/immutable/List; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::$minus$minus(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; remove(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::remove(Lscala/Function1;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/Tuple2; `break`(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::`break`(Lscala/Function1;)Lscala/Tuple2;)(x_0); }
  public final static Lscala/collection/immutable/Stream; toStream() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toStream()Lscala/collection/immutable/Stream;)(); }
  public final static Ljava/lang/String; stringPrefix() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::stringPrefix()Ljava/lang/String;)(); }
  public final static Lscala/collection/immutable/List; reverse() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::reverse()Lscala/collection/immutable/List;)(); }
  public final static Lscala/Tuple2; span(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::span(Lscala/Function1;)Lscala/Tuple2;)(x_0); }
  public final static Lscala/collection/immutable/List; dropWhile(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::dropWhile(Lscala/Function1;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; takeWhile(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::takeWhile(Lscala/Function1;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/Tuple2; splitAt(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::splitAt(I;)Lscala/Tuple2;)(x_0); }
  public final static Lscala/collection/immutable/List; takeRight(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::takeRight(I;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; slice(I; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::slice(I;I;)Lscala/collection/immutable/List;)(x_0, x_1); }
  public final static Lscala/collection/immutable/List; drop(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::drop(I;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; take(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::take(I;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; toList() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::toList()Lscala/collection/immutable/List;)(); }
  public final static Ljava/lang/Object; $plus$colon(Ljava/lang/Object; x_0, Lscala/collection/generic/CanBuildFrom; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::$plus$colon(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Ljava/lang/Object; $plus$plus(Lscala/collection/TraversableOnce; x_0, Lscala/collection/generic/CanBuildFrom; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::$plus$plus(Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Lscala/collection/immutable/List; mapConserve(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::mapConserve(Lscala/Function1;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; reverse_$colon$colon$colon(Lscala/collection/immutable/List; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::reverse_$colon$colon$colon(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; $colon$colon$colon(Lscala/collection/immutable/List; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::$colon$colon$colon(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/immutable/List; $colon$colon(Ljava/lang/Object; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x_0); }
  public final static Lscala/collection/generic/GenericCompanion; companion() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/immutable/List;::companion()Lscala/collection/generic/GenericCompanion;)(); }
  public final static Lscala/collection/LinearSeqOptimized; takeWhile(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/LinearSeqOptimized;::takeWhile(Lscala/Function1;)Lscala/collection/LinearSeqOptimized;)(x_0); }
  public final static Lscala/collection/LinearSeqOptimized; slice(I; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/LinearSeqOptimized;::slice(I;I;)Lscala/collection/LinearSeqOptimized;)(x_0, x_1); }
  public final static Lscala/collection/LinearSeqOptimized; drop(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/LinearSeqOptimized;::drop(I;)Lscala/collection/LinearSeqOptimized;)(x_0); }
  public final static Lscala/collection/LinearSeqOptimized; take(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/LinearSeqOptimized;::take(I;)Lscala/collection/LinearSeqOptimized;)(x_0); }
  public final static Ljava/lang/Object; reverse() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/SeqLike;::reverse()Ljava/lang/Object;)(); }
  public final static Lscala/Function1; andThen(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/Function1;::andThen(Lscala/Function1;)Lscala/Function1;)(x_0); }
  public final static Lscala/collection/IterableView; projection() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/IterableLike;::projection()Lscala/collection/IterableView;)(); }
  public final static Lscala/collection/IterableView; view(I; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/IterableLike;::view(I;I;)Lscala/collection/IterableView;)(x_0, x_1); }
  public final static Lscala/collection/IterableView; view() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/IterableLike;::view()Lscala/collection/IterableView;)(); }
  public final static Ljava/lang/Object; dropRight(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/IterableLike;::dropRight(I;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; takeRight(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/IterableLike;::takeRight(I;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; takeWhile(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/IterableLike;::takeWhile(Lscala/Function1;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; slice(I; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/IterableLike;::slice(I;I;)Ljava/lang/Object;)(x_0, x_1); }
  public final static Ljava/lang/Object; take(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/IterableLike;::take(I;)Ljava/lang/Object;)(x_0); }
  public final static Lscala/collection/TraversableView; view(I; x_0, I; x_1) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/TraversableLike;::view(I;I;)Lscala/collection/TraversableView;)(x_0, x_1); }
  public final static Lscala/collection/TraversableView; view() { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/TraversableLike;::view()Lscala/collection/TraversableView;)(); }
  public final static Ljava/lang/Object; dropWhile(Lscala/Function1; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/TraversableLike;::dropWhile(Lscala/Function1;)Ljava/lang/Object;)(x_0); }
  public final static Ljava/lang/Object; drop(I; x_0) { return Lscala/collection/immutable/Nil$;.MODULE$.(Lscala/collection/TraversableLike;::drop(I;)Ljava/lang/Object;)(x_0); }
  
}
