public final class Lscala/collection/immutable/Stream$$anonfun$scanLeft$1; extends Lscala/runtime/AbstractFunction0; {
  
  public final Lscala/collection/immutable/Stream; apply() {
    return this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;)$outer$u0020.(Lscala/collection/immutable/Stream;::scala$collection$immutable$Stream$$asStream(Ljava/lang/Object;)Lscala/collection/immutable/Stream;)(this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;)$outer$u0020.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/Stream;).(Lscala/collection/immutable/Stream;::scanLeft(Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;)op$1.(Lscala/Function2;::apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;)z$1, this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;)$outer$u0020.(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)()), this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;)op$1, Lscala/collection/immutable/Stream$;.MODULE$.(Lscala/collection/immutable/Stream$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()));
  }
  
  private Lscala/collection/immutable/Stream; $outer$u0020;
  
  public final Ljava/lang/Object; apply() {
    return this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;::apply()Lscala/collection/immutable/Stream;)();
  }
  
  private Ljava/lang/Object; z$1;
  
  private Lscala/Function2; op$1;
  
  public this(Lscala/collection/immutable/Stream; $outer, Ljava/lang/Object; z$1, Lscala/Function2; op$1) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;)$outer$u0020 = $outer;
      }
    this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;)z$1 = z$1;
    this.(Lscala/collection/immutable/Stream$$anonfun$scanLeft$1;)op$1 = op$1;
    (Lscala/runtime/AbstractFunction0;::super()V;)();
  }
}
