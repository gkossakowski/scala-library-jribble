public final class Lscala/collection/immutable/TrieIterator$$anonfun$collisionToArray$1; extends Lscala/runtime/AbstractFunction1; implements Lscala/Serializable; {
  
  public final Lscala/collection/immutable/HashMap; apply(Lscala/Tuple2; x) {
    return Lscala/collection/immutable/HashMap$;.MODULE$.(Lscala/collection/generic/GenMapFactory;::apply(Lscala/collection/Seq;)Lscala/collection/GenMap;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::wrapRefArray(Ljava/lang/Object;[)Lscala/collection/mutable/WrappedArray;)(<Lscala/Tuple2;>{x}.<cast>(Ljava/lang/Object;[))).<cast>(Lscala/collection/immutable/HashMap;);
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/collection/immutable/TrieIterator$$anonfun$collisionToArray$1;::apply(Lscala/Tuple2;)Lscala/collection/immutable/HashMap;)(v1.<cast>(Lscala/Tuple2;));
  }
  
  public this(Lscala/collection/immutable/TrieIterator; $outer) {
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
