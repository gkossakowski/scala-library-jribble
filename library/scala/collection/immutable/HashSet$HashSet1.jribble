public class Lscala/collection/immutable/HashSet$HashSet1; extends Lscala/collection/immutable/HashSet; implements Lscala/ScalaObject; {
  
  private Ljava/lang/Object; key$u0020;
  
  public Ljava/lang/Object; key() {
    return this.(Lscala/collection/immutable/HashSet$HashSet1;)key$u0020;
  }
  
  public V; key_$eq(Ljava/lang/Object; x$1) {
    this.(Lscala/collection/immutable/HashSet$HashSet1;)key$u0020 = x$1;
  }
  
  private I; hash$u0020;
  
  public I; hash() {
    return this.(Lscala/collection/immutable/HashSet$HashSet1;)hash$u0020;
  }
  
  public V; hash_$eq(I; x$1) {
    this.(Lscala/collection/immutable/HashSet$HashSet1;)hash$u0020 = x$1;
  }
  
  public I; size() {
    return 1;
  }
  
  public Z; get0(Ljava/lang/Object; key, I; hash, I; level) {
    return ((hash == this.(Lscala/collection/immutable/HashSet$HashSet1;::hash()I;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(key, this.(Lscala/collection/immutable/HashSet$HashSet1;::key()Ljava/lang/Object;)()));
  }
  
  public Lscala/collection/immutable/HashSet; updated0(Ljava/lang/Object; key, I; hash, I; level) {
    Lscala/collection/immutable/HashSet; $1$;
    if (((hash == this.(Lscala/collection/immutable/HashSet$HashSet1;::hash()I;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(key, this.(Lscala/collection/immutable/HashSet$HashSet1;::key()Ljava/lang/Object;)())))
      {
        $1$ = this;
      }
    else
      {
        Lscala/collection/immutable/HashSet; $2$;
        if ((hash != this.(Lscala/collection/immutable/HashSet$HashSet1;::hash()I;)()))
          {
            Lscala/collection/immutable/HashSet$HashTrieSet; m = (new (Lscala/collection/immutable/HashSet$HashTrieSet;::this(I;Lscala/collection/immutable/HashSet;[I;)V;)(0, new Lscala/collection/immutable/HashSet;[0], 0));
            $2$ = m.(Lscala/collection/immutable/HashSet$HashTrieSet;::updated0(Ljava/lang/Object;I;I;)Lscala/collection/immutable/HashSet;)(this.(Lscala/collection/immutable/HashSet$HashSet1;::key()Ljava/lang/Object;)(), this.(Lscala/collection/immutable/HashSet$HashSet1;::hash()I;)(), level).(Lscala/collection/immutable/HashSet;::updated0(Ljava/lang/Object;I;I;)Lscala/collection/immutable/HashSet;)(key, hash, level);
          }
        else
          {
            $2$ = (new (Lscala/collection/immutable/HashSet$HashSetCollision1;::this(I;Lscala/collection/immutable/ListSet;)V;)(hash, Lscala/collection/immutable/ListSet$;.MODULE$.(Lscala/collection/immutable/ListSet$;::empty()Lscala/collection/immutable/ListSet;)().(Lscala/collection/immutable/ListSet;::$plus(Ljava/lang/Object;)Lscala/collection/immutable/ListSet;)(this.(Lscala/collection/immutable/HashSet$HashSet1;::key()Ljava/lang/Object;)()).(Lscala/collection/immutable/ListSet;::$plus(Ljava/lang/Object;)Lscala/collection/immutable/ListSet;)(key)));
          }
        $1$ = $2$;
      }
    return $1$;
  }
  
  public Lscala/collection/immutable/HashSet; removed0(Ljava/lang/Object; key, I; hash, I; level) {
    Lscala/collection/immutable/HashSet; $3$;
    if (((hash == this.(Lscala/collection/immutable/HashSet$HashSet1;::hash()I;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(key, this.(Lscala/collection/immutable/HashSet$HashSet1;::key()Ljava/lang/Object;)())))
      {
        $3$ = Lscala/collection/immutable/HashSet$;.MODULE$.(Lscala/collection/immutable/HashSet$;::empty()Lscala/collection/immutable/HashSet;)();
      }
    else
      {
        $3$ = this;
      }
    return $3$;
  }
  
  public Lscala/collection/Iterator; iterator() {
    return Lscala/collection/Iterator$;.MODULE$.(Lscala/collection/Iterator$;::apply(Lscala/collection/Seq;)Lscala/collection/Iterator;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::genericWrapArray(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;)(<Ljava/lang/Object;>{this.(Lscala/collection/immutable/HashSet$HashSet1;::key()Ljava/lang/Object;)()}));
  }
  
  public V; foreach(Lscala/Function1; f) {
    f.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/collection/immutable/HashSet$HashSet1;::key()Ljava/lang/Object;)());
  }
  
  public this(Ljava/lang/Object; key, I; hash) {
    this.(Lscala/collection/immutable/HashSet$HashSet1;)key$u0020 = key;
    this.(Lscala/collection/immutable/HashSet$HashSet1;)hash$u0020 = hash;
    (Lscala/collection/immutable/HashSet;::super()V;)();
  }
}
