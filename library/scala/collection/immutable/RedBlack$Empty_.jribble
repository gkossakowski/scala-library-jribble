public class Lscala/collection/immutable/RedBlack$Empty_; extends Lscala/collection/immutable/RedBlack$Tree; implements Lscala/ScalaObject;, Lscala/Product;, Lscala/Serializable; {
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Z; isEmpty() {
    return true;
  }
  
  public Z; isBlack() {
    return true;
  }
  
  public Lscala/collection/immutable/RedBlack$Tree; lookup(Ljava/lang/Object; k) {
    return this;
  }
  
  public Lscala/collection/immutable/RedBlack$Tree; upd(Ljava/lang/Object; k, Ljava/lang/Object; v) {
    return (new (Lscala/collection/immutable/RedBlack$RedTree;::this(Lscala/collection/immutable/RedBlack;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/RedBlack$Tree;Lscala/collection/immutable/RedBlack$Tree;)V;)(this.(Lscala/collection/immutable/RedBlack$Empty_;::scala$collection$immutable$RedBlack$Empty_$$$outer()Lscala/collection/immutable/RedBlack;)(), k, v, this.(Lscala/collection/immutable/RedBlack$Empty_;::scala$collection$immutable$RedBlack$Empty_$$$outer()Lscala/collection/immutable/RedBlack;)().(Lscala/collection/immutable/RedBlack;::Empty()Lscala/collection/immutable/RedBlack$Empty_;)(), this.(Lscala/collection/immutable/RedBlack$Empty_;::scala$collection$immutable$RedBlack$Empty_$$$outer()Lscala/collection/immutable/RedBlack;)().(Lscala/collection/immutable/RedBlack;::Empty()Lscala/collection/immutable/RedBlack$Empty_;)()));
  }
  
  public Lscala/collection/immutable/RedBlack$Tree; del(Ljava/lang/Object; k) {
    return this;
  }
  
  public Lscala/collection/immutable/RedBlack$NonEmpty; smallest() {
    throw (new (Ljava/util/NoSuchElementException;::this(Ljava/lang/String;)V;)("empty map"));
  }
  
  public Lscala/collection/Iterator; iterator() {
    return Lscala/collection/Iterator$;.MODULE$.(Lscala/collection/Iterator$;::empty()Lscala/collection/Iterator;)();
  }
  
  public Lscala/collection/immutable/Stream; toStream() {
    return Lscala/collection/immutable/Stream$;.MODULE$.(Lscala/collection/immutable/Stream$;::empty()Lscala/collection/immutable/Stream;)();
  }
  
  public V; foreach(Lscala/Function2; f) {
    
  }
  
  public Lscala/Tuple2; visit(Ljava/lang/Object; input, Lscala/Function3; f) {
    return (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToBoolean(Z;)Ljava/lang/Boolean;)(true), input));
  }
  
  public Lscala/collection/immutable/RedBlack$Empty_; rng(Lscala/Option; from, Lscala/Option; until) {
    return this;
  }
  
  public Lscala/runtime/Nothing$; first() {
    throw (new (Ljava/util/NoSuchElementException;::this(Ljava/lang/String;)V;)("empty map"));
  }
  
  public Lscala/runtime/Nothing$; last() {
    throw (new (Ljava/util/NoSuchElementException;::this(Ljava/lang/String;)V;)("empty map"));
  }
  
  public I; count() {
    return 0;
  }
  
  public Lscala/collection/immutable/RedBlack$Empty_; copy() {
    return (new (Lscala/collection/immutable/RedBlack$Empty_;::this(Lscala/collection/immutable/RedBlack;)V;)(this.(Lscala/collection/immutable/RedBlack$Empty_;::scala$collection$immutable$RedBlack$Empty_$$$outer()Lscala/collection/immutable/RedBlack;)()));
  }
  
  public I; hashCode() {
    return Lscala/runtime/ScalaRunTime$;.MODULE$.(Lscala/runtime/ScalaRunTime$;::_hashCode(Lscala/Product;)I;)(this);
  }
  
  public Ljava/lang/String; toString() {
    return Lscala/runtime/ScalaRunTime$;.MODULE$.(Lscala/runtime/ScalaRunTime$;::_toString(Lscala/Product;)Ljava/lang/String;)(this);
  }
  
  public Z; equals(Ljava/lang/Object; x$1) {
    Ljava/lang/Object; temp242 = x$1;
    Z; $32$;
    if ((temp242.<instanceof>(Lscala/collection/immutable/RedBlack$Empty_;) && (temp242.<cast>(Lscala/collection/immutable/RedBlack$Empty_;).(Lscala/collection/immutable/RedBlack$Empty_;::scala$collection$immutable$RedBlack$Empty_$$$outer()Lscala/collection/immutable/RedBlack;)() == this.(Lscala/collection/immutable/RedBlack$Empty_;::scala$collection$immutable$RedBlack$Empty_$$$outer()Lscala/collection/immutable/RedBlack;)())))
      {
        $32$ = x$1.<cast>(Lscala/collection/immutable/RedBlack$Empty_;).(Lscala/Equals;::canEqual(Ljava/lang/Object;)Z;)(this);
      }
    else
      {
        $32$ = false;
      }
    return ((this == x$1) || $32$);
  }
  
  public Ljava/lang/String; productPrefix() {
    return "Empty_";
  }
  
  public I; productArity() {
    return 0;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp244 = x$1;
    throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/collection/immutable/RedBlack$Empty_;);
  }
  
  public Lscala/collection/immutable/RedBlack; scala$collection$immutable$RedBlack$Empty_$$$outer() {
    return this.(Lscala/collection/immutable/RedBlack$Tree;)$outer$u0020;
  }
  
  public Ljava/lang/Object; last() {
    this.(Lscala/collection/immutable/RedBlack$Empty_;::last()Lscala/runtime/Nothing$;)();
  }
  
  public Ljava/lang/Object; first() {
    this.(Lscala/collection/immutable/RedBlack$Empty_;::first()Lscala/runtime/Nothing$;)();
  }
  
  public Lscala/collection/immutable/RedBlack$Tree; rng(Lscala/Option; from, Lscala/Option; until) {
    return this.(Lscala/collection/immutable/RedBlack$Empty_;::rng(Lscala/Option;Lscala/Option;)Lscala/collection/immutable/RedBlack$Empty_;)(from, until);
  }
  
  public this(Lscala/collection/immutable/RedBlack; $outer) {
    (Lscala/collection/immutable/RedBlack$Tree;::super(Lscala/collection/immutable/RedBlack;)V;)($outer);
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
  }
}
