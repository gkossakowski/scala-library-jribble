public final class Lscala/collection/immutable/Stream$$anonfun$collectedTail$1; extends Lscala/runtime/AbstractFunction0; implements Lscala/Serializable; {
  
  public final Lscala/collection/immutable/Stream; apply() {
    return this.(Lscala/collection/immutable/Stream$$anonfun$collectedTail$1;)stream$1.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/Stream;).(Lscala/collection/immutable/Stream;::collect(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this.(Lscala/collection/immutable/Stream$$anonfun$collectedTail$1;)pf$1, this.(Lscala/collection/immutable/Stream$$anonfun$collectedTail$1;)bf$1).<cast>(Lscala/collection/immutable/Stream;);
  }
  
  public final Ljava/lang/Object; apply() {
    return this.(Lscala/collection/immutable/Stream$$anonfun$collectedTail$1;::apply()Lscala/collection/immutable/Stream;)();
  }
  
  private Lscala/collection/immutable/Stream; stream$1;
  
  private Lscala/PartialFunction; pf$1;
  
  private Lscala/collection/generic/CanBuildFrom; bf$1;
  
  public this(Lscala/collection/immutable/Stream; stream$1, Lscala/PartialFunction; pf$1, Lscala/collection/generic/CanBuildFrom; bf$1) {
    this.(Lscala/collection/immutable/Stream$$anonfun$collectedTail$1;)stream$1 = stream$1;
    this.(Lscala/collection/immutable/Stream$$anonfun$collectedTail$1;)pf$1 = pf$1;
    this.(Lscala/collection/immutable/Stream$$anonfun$collectedTail$1;)bf$1 = bf$1;
    (Lscala/runtime/AbstractFunction0;::super()V;)();
  }
}
