public final class Lscala/collection/immutable/Stream$$anonfun$take$1; extends Lscala/runtime/AbstractFunction0; {
  
  public final Lscala/collection/immutable/Stream; apply() {
    Lscala/collection/immutable/Stream; $27$;
    if ((this.(I;)n$1 == 1))
      {
        $27$ = Lscala/collection/immutable/Stream$;.MODULE$.(Lscala/collection/immutable/Stream$;::empty()Lscala/collection/immutable/Stream;)();
      }
    else
      {
        $27$ = this.(Lscala/collection/immutable/Stream;)$outer$u0020.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/Stream;).(Lscala/collection/immutable/Stream;::take(I;)Lscala/collection/immutable/Stream;)((this.(I;)n$1 - 1));
      }
    return $27$;
  }
  
  private Lscala/collection/immutable/Stream; $outer$u0020;
  
  public final Ljava/lang/Object; apply() {
    return this.(Lscala/collection/immutable/Stream$$anonfun$take$1;::apply()Lscala/collection/immutable/Stream;)();
  }
  
  private I; n$1;
  
  public this(Lscala/collection/immutable/Stream; $outer, I; n$1) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/immutable/Stream;)$outer$u0020 = $outer;
      }
    this.(I;)n$1 = n$1;
    (Lscala/runtime/AbstractFunction0;::super()V;)();
  }
}
