public final class Lscala/collection/immutable/Stream$$anonfun$flatten1$1$1; extends Lscala/runtime/AbstractFunction0; implements Lscala/Serializable; {
  
  public final Lscala/collection/immutable/Stream; apply() {
    return this.(Lscala/collection/immutable/Stream$$anonfun$flatten1$1$1;)$outer$u0020.(Lscala/collection/immutable/Stream;::flatten1$1(Lscala/collection/Traversable;Lscala/Function1;)Lscala/collection/immutable/Stream;)(this.(Lscala/collection/immutable/Stream$$anonfun$flatten1$1$1;)t$1.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/Traversable;), this.(Lscala/collection/immutable/Stream$$anonfun$flatten1$1$1;)asTraversable$1);
  }
  
  private Lscala/collection/immutable/Stream; $outer$u0020;
  
  public final Ljava/lang/Object; apply() {
    return this.(Lscala/collection/immutable/Stream$$anonfun$flatten1$1$1;::apply()Lscala/collection/immutable/Stream;)();
  }
  
  private Lscala/Function1; asTraversable$1;
  
  private Lscala/collection/Traversable; t$1;
  
  public this(Lscala/collection/immutable/Stream; $outer, Lscala/Function1; asTraversable$1, Lscala/collection/Traversable; t$1) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/immutable/Stream$$anonfun$flatten1$1$1;)$outer$u0020 = $outer;
      }
    this.(Lscala/collection/immutable/Stream$$anonfun$flatten1$1$1;)asTraversable$1 = asTraversable$1;
    this.(Lscala/collection/immutable/Stream$$anonfun$flatten1$1$1;)t$1 = t$1;
    (Lscala/runtime/AbstractFunction0;::super()V;)();
  }
}
