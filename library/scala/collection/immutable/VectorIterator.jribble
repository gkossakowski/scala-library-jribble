public class Lscala/collection/immutable/VectorIterator; extends Ljava/lang/Object; implements Lscala/collection/Iterator;, Lscala/collection/immutable/VectorPointer;, Lscala/ScalaObject; {
  
  public I; depth() {
    return this.(Lscala/collection/immutable/VectorIterator;)depth$u0020;
  }
  
  private I; depth$u0020;
  
  public V; depth_$eq(I; x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)depth$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display0() {
    return this.(Lscala/collection/immutable/VectorIterator;)display0$u0020;
  }
  
  private Ljava/lang/Object;[ display0$u0020;
  
  public V; display0_$eq(Ljava/lang/Object;[ x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)display0$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display1() {
    return this.(Lscala/collection/immutable/VectorIterator;)display1$u0020;
  }
  
  private Ljava/lang/Object;[ display1$u0020;
  
  public V; display1_$eq(Ljava/lang/Object;[ x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)display1$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display2() {
    return this.(Lscala/collection/immutable/VectorIterator;)display2$u0020;
  }
  
  private Ljava/lang/Object;[ display2$u0020;
  
  public V; display2_$eq(Ljava/lang/Object;[ x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)display2$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display3() {
    return this.(Lscala/collection/immutable/VectorIterator;)display3$u0020;
  }
  
  private Ljava/lang/Object;[ display3$u0020;
  
  public V; display3_$eq(Ljava/lang/Object;[ x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)display3$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display4() {
    return this.(Lscala/collection/immutable/VectorIterator;)display4$u0020;
  }
  
  private Ljava/lang/Object;[ display4$u0020;
  
  public V; display4_$eq(Ljava/lang/Object;[ x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)display4$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display5() {
    return this.(Lscala/collection/immutable/VectorIterator;)display5$u0020;
  }
  
  private Ljava/lang/Object;[ display5$u0020;
  
  public V; display5_$eq(Ljava/lang/Object;[ x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)display5$u0020 = x$1;
  }
  
  public final V; initFrom(Lscala/collection/immutable/VectorPointer; that) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::initFrom(Lscala/collection/immutable/VectorPointer;Lscala/collection/immutable/VectorPointer;)V;)(this, that);
  }
  
  public final V; initFrom(Lscala/collection/immutable/VectorPointer; that, I; depth) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::initFrom(Lscala/collection/immutable/VectorPointer;Lscala/collection/immutable/VectorPointer;I;)V;)(this, that, depth);
  }
  
  public final Ljava/lang/Object; getElem(I; index, I; xor) {
    return Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::getElem(Lscala/collection/immutable/VectorPointer;I;I;)Ljava/lang/Object;)(this, index, xor);
  }
  
  public final V; gotoPos(I; index, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoPos(Lscala/collection/immutable/VectorPointer;I;I;)V;)(this, index, xor);
  }
  
  public final V; gotoNextBlockStart(I; index, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoNextBlockStart(Lscala/collection/immutable/VectorPointer;I;I;)V;)(this, index, xor);
  }
  
  public final V; gotoNextBlockStartWritable(I; index, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoNextBlockStartWritable(Lscala/collection/immutable/VectorPointer;I;I;)V;)(this, index, xor);
  }
  
  public final Ljava/lang/Object;[ copyOf(Ljava/lang/Object;[ a) {
    return Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::copyOf(Lscala/collection/immutable/VectorPointer;Ljava/lang/Object;[)Ljava/lang/Object;[)(this, a);
  }
  
  public final Ljava/lang/Object;[ nullSlotAndCopy(Ljava/lang/Object;[ array, I; index) {
    return Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::nullSlotAndCopy(Lscala/collection/immutable/VectorPointer;Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this, array, index);
  }
  
  public final V; stabilize(I; index) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::stabilize(Lscala/collection/immutable/VectorPointer;I;)V;)(this, index);
  }
  
  public final V; gotoPosWritable0(I; newIndex, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoPosWritable0(Lscala/collection/immutable/VectorPointer;I;I;)V;)(this, newIndex, xor);
  }
  
  public final V; gotoPosWritable1(I; oldIndex, I; newIndex, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoPosWritable1(Lscala/collection/immutable/VectorPointer;I;I;I;)V;)(this, oldIndex, newIndex, xor);
  }
  
  public final Ljava/lang/Object;[ copyRange(Ljava/lang/Object;[ array, I; oldLeft, I; newLeft) {
    return Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::copyRange(Lscala/collection/immutable/VectorPointer;Ljava/lang/Object;[I;I;)Ljava/lang/Object;[)(this, array, oldLeft, newLeft);
  }
  
  public final V; gotoFreshPosWritable0(I; oldIndex, I; newIndex, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoFreshPosWritable0(Lscala/collection/immutable/VectorPointer;I;I;I;)V;)(this, oldIndex, newIndex, xor);
  }
  
  public final V; gotoFreshPosWritable1(I; oldIndex, I; newIndex, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoFreshPosWritable1(Lscala/collection/immutable/VectorPointer;I;I;I;)V;)(this, oldIndex, newIndex, xor);
  }
  
  public V; debug() {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::debug(Lscala/collection/immutable/VectorPointer;)V;)(this);
  }
  
  public Lscala/collection/Iterator; seq() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::seq(Lscala/collection/Iterator;)Lscala/collection/Iterator;)(this);
  }
  
  public Z; isEmpty() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::isEmpty(Lscala/collection/Iterator;)Z;)(this);
  }
  
  public Z; isTraversableAgain() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::isTraversableAgain(Lscala/collection/Iterator;)Z;)(this);
  }
  
  public Z; hasDefiniteSize() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::hasDefiniteSize(Lscala/collection/Iterator;)Z;)(this);
  }
  
  public Lscala/collection/Iterator; take(I; n) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::take(Lscala/collection/Iterator;I;)Lscala/collection/Iterator;)(this, n);
  }
  
  public Lscala/collection/Iterator; drop(I; n) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::drop(Lscala/collection/Iterator;I;)Lscala/collection/Iterator;)(this, n);
  }
  
  public Lscala/collection/Iterator; slice(I; from, I; until) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::slice(Lscala/collection/Iterator;I;I;)Lscala/collection/Iterator;)(this, from, until);
  }
  
  public Lscala/collection/Iterator; map(Lscala/Function1; f) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::map(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, f);
  }
  
  public Lscala/collection/Iterator; $plus$plus(Lscala/Function0; that) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::$plus$plus(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;)(this, that);
  }
  
  public Lscala/collection/Iterator; flatMap(Lscala/Function1; f) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::flatMap(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, f);
  }
  
  public Lscala/collection/Iterator; filter(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::filter(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/collection/Iterator; withFilter(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::withFilter(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/collection/Iterator; filterNot(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::filterNot(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/collection/Iterator; collect(Lscala/PartialFunction; pf) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::collect(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;)(this, pf);
  }
  
  public Lscala/collection/Iterator; scanLeft(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::scanLeft(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;)(this, z, op);
  }
  
  public Lscala/collection/Iterator; scanRight(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::scanRight(Lscala/collection/Iterator;Ljava/lang/Object;Lscala/Function2;)Lscala/collection/Iterator;)(this, z, op);
  }
  
  public Lscala/collection/Iterator; takeWhile(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::takeWhile(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/Tuple2; partition(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::partition(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;)(this, p);
  }
  
  public Lscala/Tuple2; span(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::span(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;)(this, p);
  }
  
  public Lscala/collection/Iterator; dropWhile(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::dropWhile(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/collection/Iterator; zip(Lscala/collection/Iterator; that) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::zip(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;)(this, that);
  }
  
  public Lscala/collection/Iterator; padTo(I; len, Ljava/lang/Object; elem) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::padTo(Lscala/collection/Iterator;I;Ljava/lang/Object;)Lscala/collection/Iterator;)(this, len, elem);
  }
  
  public Lscala/collection/Iterator; zipWithIndex() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::zipWithIndex(Lscala/collection/Iterator;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; zipAll(Lscala/collection/Iterator; that, Ljava/lang/Object; thisElem, Ljava/lang/Object; thatElem) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::zipAll(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;)(this, that, thisElem, thatElem);
  }
  
  public V; foreach(Lscala/Function1; f) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::foreach(Lscala/collection/Iterator;Lscala/Function1;)V;)(this, f);
  }
  
  public Z; forall(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::forall(Lscala/collection/Iterator;Lscala/Function1;)Z;)(this, p);
  }
  
  public Z; exists(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::exists(Lscala/collection/Iterator;Lscala/Function1;)Z;)(this, p);
  }
  
  public Z; contains(Ljava/lang/Object; elem) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::contains(Lscala/collection/Iterator;Ljava/lang/Object;)Z;)(this, elem);
  }
  
  public Lscala/Option; find(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::find(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;)(this, p);
  }
  
  public I; indexWhere(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::indexWhere(Lscala/collection/Iterator;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexOf(Ljava/lang/Object; elem) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::indexOf(Lscala/collection/Iterator;Ljava/lang/Object;)I;)(this, elem);
  }
  
  public Lscala/collection/BufferedIterator; buffered() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::buffered(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;)(this);
  }
  
  public Lscala/collection/Iterator$GroupedIterator; grouped(I; size) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::grouped(Lscala/collection/Iterator;I;)Lscala/collection/Iterator$GroupedIterator;)(this, size);
  }
  
  public Lscala/collection/Iterator$GroupedIterator; sliding(I; size, I; step) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::sliding(Lscala/collection/Iterator;I;I;)Lscala/collection/Iterator$GroupedIterator;)(this, size, step);
  }
  
  public I; length() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::length(Lscala/collection/Iterator;)I;)(this);
  }
  
  public Lscala/Tuple2; duplicate() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::duplicate(Lscala/collection/Iterator;)Lscala/Tuple2;)(this);
  }
  
  public Lscala/collection/Iterator; patch(I; from, Lscala/collection/Iterator; patchElems, I; replaced) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::patch(Lscala/collection/Iterator;I;Lscala/collection/Iterator;I;)Lscala/collection/Iterator;)(this, from, patchElems, replaced);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start, I; len) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::copyToArray(Lscala/collection/Iterator;Ljava/lang/Object;I;I;)V;)(this, xs, start, len);
  }
  
  public Z; sameElements(Lscala/collection/Iterator; that) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::sameElements(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z;)(this, that);
  }
  
  public Lscala/collection/Traversable; toTraversable() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::toTraversable(Lscala/collection/Iterator;)Lscala/collection/Traversable;)(this);
  }
  
  public Lscala/collection/Iterator; toIterator() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::toIterator(Lscala/collection/Iterator;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/immutable/Stream; toStream() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::toStream(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;)(this);
  }
  
  public Ljava/lang/String; toString() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::toString(Lscala/collection/Iterator;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/Iterator; append(Lscala/collection/Iterator; that) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::append(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;)(this, that);
  }
  
  public I; findIndexOf(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::findIndexOf(Lscala/collection/Iterator;Lscala/Function1;)I;)(this, p);
  }
  
  public Lscala/CountedIterator; counted() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::counted(Lscala/collection/Iterator;)Lscala/CountedIterator;)(this);
  }
  
  public V; readInto(Ljava/lang/Object; xs, I; start, I; sz) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::readInto(Lscala/collection/Iterator;Ljava/lang/Object;I;I;)V;)(this, xs, start, sz);
  }
  
  public V; readInto(Ljava/lang/Object; xs, I; start) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::readInto(Lscala/collection/Iterator;Ljava/lang/Object;I;)V;)(this, xs, start);
  }
  
  public V; readInto(Ljava/lang/Object; xs) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::readInto(Lscala/collection/Iterator;Ljava/lang/Object;)V;)(this, xs);
  }
  
  public I; sliding$default$2() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::sliding$default$2(Lscala/collection/Iterator;)I;)(this);
  }
  
  public Lscala/collection/immutable/List; reversed() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reversed(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;)(this);
  }
  
  public I; size() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::size(Lscala/collection/TraversableOnce;)I;)(this);
  }
  
  public Z; nonEmpty() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::nonEmpty(Lscala/collection/TraversableOnce;)Z;)(this);
  }
  
  public I; count(Lscala/Function1; p) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::count(Lscala/collection/TraversableOnce;Lscala/Function1;)I;)(this, p);
  }
  
  public Lscala/Option; collectFirst(Lscala/PartialFunction; pf) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::collectFirst(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;)(this, pf);
  }
  
  public Ljava/lang/Object; $div$colon(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$div$colon(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; $colon$bslash(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$colon$bslash(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; foldLeft(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::foldLeft(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; foldRight(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::foldRight(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; reduceLeft(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceLeft(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Ljava/lang/Object; reduceRight(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceRight(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Lscala/Option; reduceLeftOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceLeftOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Lscala/Option; reduceRightOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceRightOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Ljava/lang/Object; reduce(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduce(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Lscala/Option; reduceOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Ljava/lang/Object; fold(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::fold(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; aggregate(Ljava/lang/Object; z, Lscala/Function2; seqop, Lscala/Function2; combop) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::aggregate(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;)(this, z, seqop, combop);
  }
  
  public Ljava/lang/Object; sum(Lscala/math/Numeric; num) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::sum(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; product(Lscala/math/Numeric; num) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::product(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; min(Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::min(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public Ljava/lang/Object; max(Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::max(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public Ljava/lang/Object; maxBy(Lscala/Function1; f, Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::maxBy(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;)(this, f, cmp);
  }
  
  public Ljava/lang/Object; minBy(Lscala/Function1; f, Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::minBy(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;)(this, f, cmp);
  }
  
  public V; copyToBuffer(Lscala/collection/mutable/Buffer; dest) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToBuffer(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V;)(this, dest);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToArray(Lscala/collection/TraversableOnce;Ljava/lang/Object;I;)V;)(this, xs, start);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToArray(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V;)(this, xs);
  }
  
  public Ljava/lang/Object; toArray(Lscala/reflect/ClassManifest; evidence$1) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toArray(Lscala/collection/TraversableOnce;Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(this, evidence$1);
  }
  
  public Lscala/collection/immutable/List; toList() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toList(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;)(this);
  }
  
  public Lscala/collection/Iterable; toIterable() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toIterable(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;)(this);
  }
  
  public Lscala/collection/Seq; toSeq() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toSeq(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;)(this);
  }
  
  public Lscala/collection/immutable/IndexedSeq; toIndexedSeq() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toIndexedSeq(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;)(this);
  }
  
  public Lscala/collection/mutable/Buffer; toBuffer() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toBuffer(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;)(this);
  }
  
  public Lscala/collection/immutable/Set; toSet() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toSet(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;)(this);
  }
  
  public Lscala/collection/immutable/Map; toMap(Lscala/Predef$$less$colon$less; ev) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toMap(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(this, ev);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)(this, start, sep, end);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; sep) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;)(this, sep);
  }
  
  public Ljava/lang/String; mkString() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, start, sep, end);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; sep) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, sep);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(this, b);
  }
  
  public Ljava/lang/Object; $div$colon$bslash(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/GenTraversableOnce$class;.(Lscala/collection/GenTraversableOnce$class;::$div$colon$bslash(Lscala/collection/GenTraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  private I; _endIndex;
  
  private I; blockIndex$u0020;
  
  private I; blockIndex() {
    return this.(Lscala/collection/immutable/VectorIterator;)blockIndex$u0020;
  }
  
  private V; blockIndex_$eq(I; x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)blockIndex$u0020 = x$1;
  }
  
  private I; lo$u0020;
  
  private I; lo() {
    return this.(Lscala/collection/immutable/VectorIterator;)lo$u0020;
  }
  
  private V; lo_$eq(I; x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)lo$u0020 = x$1;
  }
  
  private I; endIndex$u0020;
  
  private I; endIndex() {
    return this.(Lscala/collection/immutable/VectorIterator;)endIndex$u0020;
  }
  
  private V; endIndex_$eq(I; x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)endIndex$u0020 = x$1;
  }
  
  private I; endLo$u0020;
  
  private I; endLo() {
    return this.(Lscala/collection/immutable/VectorIterator;)endLo$u0020;
  }
  
  private V; endLo_$eq(I; x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)endLo$u0020 = x$1;
  }
  
  public Z; hasNext() {
    return this.(Lscala/collection/immutable/VectorIterator;::_hasNext()Z;)();
  }
  
  private Z; _hasNext$u0020;
  
  private Z; _hasNext() {
    return this.(Lscala/collection/immutable/VectorIterator;)_hasNext$u0020;
  }
  
  private V; _hasNext_$eq(Z; x$1) {
    this.(Lscala/collection/immutable/VectorIterator;)_hasNext$u0020 = x$1;
  }
  
  public Ljava/lang/Object; next() {
    if (!(this.(Lscala/collection/immutable/VectorIterator;::_hasNext()Z;)()))
      {
        throw (new (Ljava/util/NoSuchElementException;::this(Ljava/lang/String;)V;)("reached iterator end"));
      }
    else
      {
        
      }
    Ljava/lang/Object; res = this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[this.(Lscala/collection/immutable/VectorIterator;::lo()I;)()];
    this.(Lscala/collection/immutable/VectorIterator;::lo_$eq(I;)V;)((this.(Lscala/collection/immutable/VectorIterator;::lo()I;)() + 1));
    if ((this.(Lscala/collection/immutable/VectorIterator;::lo()I;)() == this.(Lscala/collection/immutable/VectorIterator;::endLo()I;)()))
      {
        if (((this.(Lscala/collection/immutable/VectorIterator;::blockIndex()I;)() + this.(Lscala/collection/immutable/VectorIterator;::lo()I;)()) < this.(Lscala/collection/immutable/VectorIterator;::endIndex()I;)()))
          {
            I; newBlockIndex = (this.(Lscala/collection/immutable/VectorIterator;::blockIndex()I;)() + 32);
            this.(Lscala/collection/immutable/VectorPointer;::gotoNextBlockStart(I;I;)V;)(newBlockIndex, (this.(Lscala/collection/immutable/VectorIterator;::blockIndex()I;)() ^ newBlockIndex));
            this.(Lscala/collection/immutable/VectorIterator;::blockIndex_$eq(I;)V;)(newBlockIndex);
            this.(Lscala/collection/immutable/VectorIterator;::endLo_$eq(I;)V;)(Lscala/math/package$;.MODULE$.(Lscala/MathCommon;::min(I;I;)I;)((this.(Lscala/collection/immutable/VectorIterator;::endIndex()I;)() - this.(Lscala/collection/immutable/VectorIterator;::blockIndex()I;)()), 32));
            this.(Lscala/collection/immutable/VectorIterator;::lo_$eq(I;)V;)(0);
          }
        else
          {
            this.(Lscala/collection/immutable/VectorIterator;::_hasNext_$eq(Z;)V;)(false);
          }
      }
    else
      {
        
      }
    return res;
  }
  
  public I; remainingElementCount() {
    return Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::intWrapper(I;)Lscala/runtime/RichInt;)((this.(Lscala/collection/immutable/VectorIterator;)_endIndex - (this.(Lscala/collection/immutable/VectorIterator;::blockIndex()I;)() + this.(Lscala/collection/immutable/VectorIterator;::lo()I;)()))).(Lscala/runtime/RichInt;::max(I;)I;)(0);
  }
  
  public Lscala/collection/immutable/Vector; remainingVector() {
    Lscala/collection/immutable/Vector; v = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)((this.(Lscala/collection/immutable/VectorIterator;::blockIndex()I;)() + this.(Lscala/collection/immutable/VectorIterator;::lo()I;)()), this.(Lscala/collection/immutable/VectorIterator;)_endIndex, (this.(Lscala/collection/immutable/VectorIterator;::blockIndex()I;)() + this.(Lscala/collection/immutable/VectorIterator;::lo()I;)())));
    v.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
    return v;
  }
  
  public V; foreachFast(Lscala/Function1; f) {
    while$3: while(true) {
      if (this.(Lscala/collection/immutable/VectorIterator;::hasNext()Z;)())
        {
          f.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/collection/immutable/VectorIterator;::next()Ljava/lang/Object;)());
          continue while$3;
        }
      else
        {
          
        }
      break;
    }
  }
  
  public Lscala/collection/GenMap; toMap(Lscala/Predef$$less$colon$less; ev) {
    return this.(Lscala/collection/TraversableOnce;::toMap(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(ev);
  }
  
  public Lscala/collection/GenSet; toSet() {
    return this.(Lscala/collection/TraversableOnce;::toSet()Lscala/collection/immutable/Set;)();
  }
  
  public Lscala/collection/GenSeq; toSeq() {
    return this.(Lscala/collection/TraversableOnce;::toSeq()Lscala/collection/Seq;)();
  }
  
  public Lscala/collection/GenIterable; toIterable() {
    return this.(Lscala/collection/TraversableOnce;::toIterable()Lscala/collection/Iterable;)();
  }
  
  public Lscala/collection/GenTraversable; toTraversable() {
    return this.(Lscala/collection/Iterator;::toTraversable()Lscala/collection/Traversable;)();
  }
  
  public Lscala/collection/TraversableOnce; seq() {
    return this.(Lscala/collection/Iterator;::seq()Lscala/collection/Iterator;)();
  }
  
  public this(I; _startIndex, I; _endIndex) {
    this.(Lscala/collection/immutable/VectorIterator;)_endIndex = _endIndex;
    (Ljava/lang/Object;::super()V;)();
    Lscala/collection/GenTraversableOnce$class;.(Lscala/collection/GenTraversableOnce$class;::$init$(Lscala/collection/GenTraversableOnce;)V;)(this);
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$init$(Lscala/collection/TraversableOnce;)V;)(this);
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::$init$(Lscala/collection/Iterator;)V;)(this);
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::$init$(Lscala/collection/immutable/VectorPointer;)V;)(this);
    this.(Lscala/collection/immutable/VectorIterator;)blockIndex$u0020 = (_startIndex & ~(31));
    this.(Lscala/collection/immutable/VectorIterator;)lo$u0020 = (_startIndex & 31);
    this.(Lscala/collection/immutable/VectorIterator;)endIndex$u0020 = _endIndex;
    this.(Lscala/collection/immutable/VectorIterator;)endLo$u0020 = Lscala/math/package$;.MODULE$.(Lscala/MathCommon;::min(I;I;)I;)((this.(Lscala/collection/immutable/VectorIterator;::endIndex()I;)() - this.(Lscala/collection/immutable/VectorIterator;::blockIndex()I;)()), 32);
    this.(Lscala/collection/immutable/VectorIterator;)_hasNext$u0020 = ((this.(Lscala/collection/immutable/VectorIterator;::blockIndex()I;)() + this.(Lscala/collection/immutable/VectorIterator;::lo()I;)()) < this.(Lscala/collection/immutable/VectorIterator;::endIndex()I;)());
  }
}
