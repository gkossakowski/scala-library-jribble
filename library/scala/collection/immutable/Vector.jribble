public final class Lscala/collection/immutable/Vector; extends Ljava/lang/Object; implements Lscala/collection/immutable/IndexedSeq;, Lscala/collection/generic/GenericTraversableTemplate;, Lscala/collection/IndexedSeqLike;, Lscala/collection/immutable/VectorPointer;, Lscala/ScalaObject; {
  
  public I; depth() {
    return this.(I;)depth$u0020;
  }
  
  private I; depth$u0020;
  
  public V; depth_$eq(I; x$1) {
    this.(I;)depth$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display0() {
    return this.(Ljava/lang/Object;[)display0$u0020;
  }
  
  private Ljava/lang/Object;[ display0$u0020;
  
  public V; display0_$eq(Ljava/lang/Object;[ x$1) {
    this.(Ljava/lang/Object;[)display0$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display1() {
    return this.(Ljava/lang/Object;[)display1$u0020;
  }
  
  private Ljava/lang/Object;[ display1$u0020;
  
  public V; display1_$eq(Ljava/lang/Object;[ x$1) {
    this.(Ljava/lang/Object;[)display1$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display2() {
    return this.(Ljava/lang/Object;[)display2$u0020;
  }
  
  private Ljava/lang/Object;[ display2$u0020;
  
  public V; display2_$eq(Ljava/lang/Object;[ x$1) {
    this.(Ljava/lang/Object;[)display2$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display3() {
    return this.(Ljava/lang/Object;[)display3$u0020;
  }
  
  private Ljava/lang/Object;[ display3$u0020;
  
  public V; display3_$eq(Ljava/lang/Object;[ x$1) {
    this.(Ljava/lang/Object;[)display3$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display4() {
    return this.(Ljava/lang/Object;[)display4$u0020;
  }
  
  private Ljava/lang/Object;[ display4$u0020;
  
  public V; display4_$eq(Ljava/lang/Object;[ x$1) {
    this.(Ljava/lang/Object;[)display4$u0020 = x$1;
  }
  
  public Ljava/lang/Object;[ display5() {
    return this.(Ljava/lang/Object;[)display5$u0020;
  }
  
  private Ljava/lang/Object;[ display5$u0020;
  
  public V; display5_$eq(Ljava/lang/Object;[ x$1) {
    this.(Ljava/lang/Object;[)display5$u0020 = x$1;
  }
  
  public final V; initFrom(Lscala/collection/immutable/VectorPointer; that) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::initFrom(Lscala/collection/immutable/VectorPointer;Lscala/collection/immutable/VectorPointer;)V;)(this, that);
  }
  
  public final V; initFrom(Lscala/collection/immutable/VectorPointer; that, I; depth) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::initFrom(Lscala/collection/immutable/VectorPointer;Lscala/collection/immutable/VectorPointer;I;)V;)(this, that, depth);
  }
  
  public final Ljava/lang/Object; getElem(I; index, I; xor) {
    return Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::getElem(Lscala/collection/immutable/VectorPointer;I;I;)Ljava/lang/Object;)(this, index, xor);
  }
  
  public final V; gotoPos(I; index, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoPos(Lscala/collection/immutable/VectorPointer;I;I;)V;)(this, index, xor);
  }
  
  public final V; gotoNextBlockStart(I; index, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoNextBlockStart(Lscala/collection/immutable/VectorPointer;I;I;)V;)(this, index, xor);
  }
  
  public final V; gotoNextBlockStartWritable(I; index, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoNextBlockStartWritable(Lscala/collection/immutable/VectorPointer;I;I;)V;)(this, index, xor);
  }
  
  public final Ljava/lang/Object;[ copyOf(Ljava/lang/Object;[ a) {
    return Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::copyOf(Lscala/collection/immutable/VectorPointer;Ljava/lang/Object;[)Ljava/lang/Object;[)(this, a);
  }
  
  public final Ljava/lang/Object;[ nullSlotAndCopy(Ljava/lang/Object;[ array, I; index) {
    return Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::nullSlotAndCopy(Lscala/collection/immutable/VectorPointer;Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this, array, index);
  }
  
  public final V; stabilize(I; index) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::stabilize(Lscala/collection/immutable/VectorPointer;I;)V;)(this, index);
  }
  
  public final V; gotoPosWritable0(I; newIndex, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoPosWritable0(Lscala/collection/immutable/VectorPointer;I;I;)V;)(this, newIndex, xor);
  }
  
  public final V; gotoPosWritable1(I; oldIndex, I; newIndex, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoPosWritable1(Lscala/collection/immutable/VectorPointer;I;I;I;)V;)(this, oldIndex, newIndex, xor);
  }
  
  public final Ljava/lang/Object;[ copyRange(Ljava/lang/Object;[ array, I; oldLeft, I; newLeft) {
    return Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::copyRange(Lscala/collection/immutable/VectorPointer;Ljava/lang/Object;[I;I;)Ljava/lang/Object;[)(this, array, oldLeft, newLeft);
  }
  
  public final V; gotoFreshPosWritable0(I; oldIndex, I; newIndex, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoFreshPosWritable0(Lscala/collection/immutable/VectorPointer;I;I;I;)V;)(this, oldIndex, newIndex, xor);
  }
  
  public final V; gotoFreshPosWritable1(I; oldIndex, I; newIndex, I; xor) {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::gotoFreshPosWritable1(Lscala/collection/immutable/VectorPointer;I;I;I;)V;)(this, oldIndex, newIndex, xor);
  }
  
  public V; debug() {
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::debug(Lscala/collection/immutable/VectorPointer;)V;)(this);
  }
  
  public Lscala/collection/IndexedSeq; thisCollection() {
    return Lscala/collection/IndexedSeqLike$class;.(Lscala/collection/IndexedSeqLike$class;::thisCollection(Lscala/collection/IndexedSeqLike;)Lscala/collection/IndexedSeq;)(this);
  }
  
  public Lscala/collection/IndexedSeq; toCollection(Ljava/lang/Object; repr) {
    return Lscala/collection/IndexedSeqLike$class;.(Lscala/collection/IndexedSeqLike$class;::toCollection(Lscala/collection/IndexedSeqLike;Ljava/lang/Object;)Lscala/collection/IndexedSeq;)(this, repr);
  }
  
  public I; size() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::size(Lscala/collection/SeqLike;)I;)(this);
  }
  
  public Z; isDefinedAt(I; idx) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::isDefinedAt(Lscala/collection/SeqLike;I;)Z;)(this, idx);
  }
  
  public I; segmentLength(Lscala/Function1; p, I; from) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::segmentLength(Lscala/collection/SeqLike;Lscala/Function1;I;)I;)(this, p, from);
  }
  
  public I; prefixLength(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::prefixLength(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexWhere(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexWhere(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexWhere(Lscala/Function1; p, I; from) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexWhere(Lscala/collection/SeqLike;Lscala/Function1;I;)I;)(this, p, from);
  }
  
  public I; findIndexOf(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::findIndexOf(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexOf(Ljava/lang/Object; elem) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexOf(Lscala/collection/SeqLike;Ljava/lang/Object;)I;)(this, elem);
  }
  
  public I; indexOf(Ljava/lang/Object; elem, I; from) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexOf(Lscala/collection/SeqLike;Ljava/lang/Object;I;)I;)(this, elem, from);
  }
  
  public I; lastIndexOf(Ljava/lang/Object; elem) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexOf(Lscala/collection/SeqLike;Ljava/lang/Object;)I;)(this, elem);
  }
  
  public I; lastIndexOf(Ljava/lang/Object; elem, I; end) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexOf(Lscala/collection/SeqLike;Ljava/lang/Object;I;)I;)(this, elem, end);
  }
  
  public I; lastIndexWhere(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexWhere(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public I; lastIndexWhere(Lscala/Function1; p, I; end) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexWhere(Lscala/collection/SeqLike;Lscala/Function1;I;)I;)(this, p, end);
  }
  
  public Ljava/lang/Object; reverse() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::reverse(Lscala/collection/SeqLike;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; reverseMap(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::reverseMap(Lscala/collection/SeqLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Lscala/collection/Iterator; reversedElements() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::reversedElements(Lscala/collection/SeqLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Z; startsWith(Lscala/collection/Seq; that, I; offset) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::startsWith(Lscala/collection/SeqLike;Lscala/collection/Seq;I;)Z;)(this, that, offset);
  }
  
  public Z; startsWith(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::startsWith(Lscala/collection/SeqLike;Lscala/collection/Seq;)Z;)(this, that);
  }
  
  public Z; endsWith(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::endsWith(Lscala/collection/SeqLike;Lscala/collection/Seq;)Z;)(this, that);
  }
  
  public I; indexOfSlice(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexOfSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;)I;)(this, that);
  }
  
  public I; indexOfSlice(Lscala/collection/Seq; that, I; from) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indexOfSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;I;)I;)(this, that, from);
  }
  
  public I; lastIndexOfSlice(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexOfSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;)I;)(this, that);
  }
  
  public I; lastIndexOfSlice(Lscala/collection/Seq; that, I; end) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::lastIndexOfSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;I;)I;)(this, that, end);
  }
  
  public Z; containsSlice(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::containsSlice(Lscala/collection/SeqLike;Lscala/collection/Seq;)Z;)(this, that);
  }
  
  public Z; contains(Ljava/lang/Object; elem) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::contains(Lscala/collection/SeqLike;Ljava/lang/Object;)Z;)(this, elem);
  }
  
  public Ljava/lang/Object; union(Lscala/collection/Seq; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::union(Lscala/collection/SeqLike;Lscala/collection/Seq;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; diff(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::diff(Lscala/collection/SeqLike;Lscala/collection/Seq;)Ljava/lang/Object;)(this, that);
  }
  
  public Ljava/lang/Object; intersect(Lscala/collection/Seq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::intersect(Lscala/collection/SeqLike;Lscala/collection/Seq;)Ljava/lang/Object;)(this, that);
  }
  
  public Ljava/lang/Object; distinct() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::distinct(Lscala/collection/SeqLike;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; patch(I; from, Lscala/collection/Seq; patch, I; replaced, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::patch(Lscala/collection/SeqLike;I;Lscala/collection/Seq;I;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, from, patch, replaced, bf);
  }
  
  public Ljava/lang/Object; padTo(I; len, Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::padTo(Lscala/collection/SeqLike;I;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, len, elem, bf);
  }
  
  public Z; corresponds(Lscala/collection/Seq; that, Lscala/Function2; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::corresponds(Lscala/collection/SeqLike;Lscala/collection/Seq;Lscala/Function2;)Z;)(this, that, p);
  }
  
  public Ljava/lang/Object; sortWith(Lscala/Function2; lt) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::sortWith(Lscala/collection/SeqLike;Lscala/Function2;)Ljava/lang/Object;)(this, lt);
  }
  
  public Ljava/lang/Object; sortBy(Lscala/Function1; f, Lscala/math/Ordering; ord) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::sortBy(Lscala/collection/SeqLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;)(this, f, ord);
  }
  
  public Ljava/lang/Object; sorted(Lscala/math/Ordering; ord) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::sorted(Lscala/collection/SeqLike;Lscala/math/Ordering;)Ljava/lang/Object;)(this, ord);
  }
  
  public Lscala/collection/Seq; toSeq() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::toSeq(Lscala/collection/SeqLike;)Lscala/collection/Seq;)(this);
  }
  
  public Lscala/collection/immutable/Range; indices() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::indices(Lscala/collection/SeqLike;)Lscala/collection/immutable/Range;)(this);
  }
  
  public Lscala/collection/SeqView; view() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::view(Lscala/collection/SeqLike;)Lscala/collection/SeqView;)(this);
  }
  
  public Lscala/collection/SeqView; view(I; from, I; until) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::view(Lscala/collection/SeqLike;I;I;)Lscala/collection/SeqView;)(this, from, until);
  }
  
  public I; hashCode() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::hashCode(Lscala/collection/SeqLike;)I;)(this);
  }
  
  public Z; equals(Ljava/lang/Object; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::equals(Lscala/collection/SeqLike;Ljava/lang/Object;)Z;)(this, that);
  }
  
  public Ljava/lang/String; toString() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::toString(Lscala/collection/SeqLike;)Ljava/lang/String;)(this);
  }
  
  public I; findLastIndexOf(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::findLastIndexOf(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public Z; equalsWith(Lscala/collection/Seq; that, Lscala/Function2; f) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::equalsWith(Lscala/collection/SeqLike;Lscala/collection/Seq;Lscala/Function2;)Z;)(this, that, f);
  }
  
  public Lscala/collection/SeqView; projection() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::projection(Lscala/collection/SeqLike;)Lscala/collection/SeqView;)(this);
  }
  
  public Lscala/PartialFunction; orElse(Lscala/PartialFunction; that) {
    return Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::orElse(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;)(this, that);
  }
  
  public Lscala/PartialFunction; andThen(Lscala/Function1; k) {
    return Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::andThen(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;)(this, k);
  }
  
  public Lscala/Function1; lift() {
    return Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::lift(Lscala/PartialFunction;)Lscala/Function1;)(this);
  }
  
  public Lscala/Function1; compose(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public V; foreach(Lscala/Function1; f) {
    Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::foreach(Lscala/collection/IterableLike;Lscala/Function1;)V;)(this, f);
  }
  
  public Z; forall(Lscala/Function1; p) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::forall(Lscala/collection/IterableLike;Lscala/Function1;)Z;)(this, p);
  }
  
  public Z; exists(Lscala/Function1; p) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::exists(Lscala/collection/IterableLike;Lscala/Function1;)Z;)(this, p);
  }
  
  public Lscala/Option; find(Lscala/Function1; p) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::find(Lscala/collection/IterableLike;Lscala/Function1;)Lscala/Option;)(this, p);
  }
  
  public Z; isEmpty() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::isEmpty(Lscala/collection/IterableLike;)Z;)(this);
  }
  
  public Ljava/lang/Object; foldRight(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::foldRight(Lscala/collection/IterableLike;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; reduceRight(Lscala/Function2; op) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::reduceRight(Lscala/collection/IterableLike;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Lscala/collection/Iterable; toIterable() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::toIterable(Lscala/collection/IterableLike;)Lscala/collection/Iterable;)(this);
  }
  
  public Ljava/lang/Object; takeWhile(Lscala/Function1; p) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::takeWhile(Lscala/collection/IterableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Lscala/collection/Iterator; grouped(I; size) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::grouped(Lscala/collection/IterableLike;I;)Lscala/collection/Iterator;)(this, size);
  }
  
  public Lscala/collection/Iterator; sliding(I; size) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::sliding(Lscala/collection/IterableLike;I;)Lscala/collection/Iterator;)(this, size);
  }
  
  public Lscala/collection/Iterator; sliding(I; size, I; step) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::sliding(Lscala/collection/IterableLike;I;I;)Lscala/collection/Iterator;)(this, size, step);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start, I; len) {
    Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::copyToArray(Lscala/collection/IterableLike;Ljava/lang/Object;I;I;)V;)(this, xs, start, len);
  }
  
  public Ljava/lang/Object; zip(Lscala/collection/Iterable; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::zip(Lscala/collection/IterableLike;Lscala/collection/Iterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; zipAll(Lscala/collection/Iterable; that, Ljava/lang/Object; thisElem, Ljava/lang/Object; thatElem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::zipAll(Lscala/collection/IterableLike;Lscala/collection/Iterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, thisElem, thatElem, bf);
  }
  
  public Ljava/lang/Object; zipWithIndex(Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::zipWithIndex(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, bf);
  }
  
  public Z; sameElements(Lscala/collection/Iterable; that) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::sameElements(Lscala/collection/IterableLike;Lscala/collection/Iterable;)Z;)(this, that);
  }
  
  public Lscala/collection/immutable/Stream; toStream() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::toStream(Lscala/collection/IterableLike;)Lscala/collection/immutable/Stream;)(this);
  }
  
  public Z; canEqual(Ljava/lang/Object; that) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::canEqual(Lscala/collection/IterableLike;Ljava/lang/Object;)Z;)(this, that);
  }
  
  public Lscala/collection/Iterator; elements() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::elements(Lscala/collection/IterableLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Ljava/lang/Object; first() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::first(Lscala/collection/IterableLike;)Ljava/lang/Object;)(this);
  }
  
  public Lscala/Option; firstOption() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::firstOption(Lscala/collection/IterableLike;)Lscala/Option;)(this);
  }
  
  public Lscala/collection/mutable/Builder; newBuilder() {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::newBuilder(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;)(this);
  }
  
  public Lscala/collection/mutable/Builder; genericBuilder() {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::genericBuilder(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;)(this);
  }
  
  public Lscala/Tuple2; unzip(Lscala/Function1; asPair) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::unzip(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;)(this, asPair);
  }
  
  public Lscala/collection/Traversable; flatten(Lscala/Function1; asTraversable) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::flatten(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/Traversable;)(this, asTraversable);
  }
  
  public Lscala/collection/Traversable; transpose(Lscala/Function1; asTraversable) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::transpose(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/Traversable;)(this, asTraversable);
  }
  
  public Ljava/lang/Object; repr() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::repr(Lscala/collection/TraversableLike;)Ljava/lang/Object;)(this);
  }
  
  public final Z; isTraversableAgain() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::isTraversableAgain(Lscala/collection/TraversableLike;)Z;)(this);
  }
  
  public Z; hasDefiniteSize() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::hasDefiniteSize(Lscala/collection/TraversableLike;)Z;)(this);
  }
  
  public Ljava/lang/Object; $plus$plus(Lscala/collection/TraversableOnce; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::$plus$plus(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; map(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::map(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Ljava/lang/Object; flatMap(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::flatMap(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Ljava/lang/Object; filter(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::filter(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Ljava/lang/Object; filterNot(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::filterNot(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Ljava/lang/Object; collect(Lscala/PartialFunction; pf, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::collect(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, pf, bf);
  }
  
  public Lscala/Tuple2; partition(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::partition(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;)(this, p);
  }
  
  public Lscala/collection/immutable/Map; groupBy(Lscala/Function1; f) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::groupBy(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;)(this, f);
  }
  
  public Ljava/lang/Object; scanLeft(Ljava/lang/Object; z, Lscala/Function2; op, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::scanLeft(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, z, op, bf);
  }
  
  public Ljava/lang/Object; scanRight(Ljava/lang/Object; z, Lscala/Function2; op, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::scanRight(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, z, op, bf);
  }
  
  public Lscala/Option; headOption() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::headOption(Lscala/collection/TraversableLike;)Lscala/Option;)(this);
  }
  
  public Lscala/Option; lastOption() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::lastOption(Lscala/collection/TraversableLike;)Lscala/Option;)(this);
  }
  
  public Ljava/lang/Object; dropWhile(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::dropWhile(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Lscala/Tuple2; span(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::span(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;)(this, p);
  }
  
  public Lscala/collection/Traversable; toTraversable() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::toTraversable(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;)(this);
  }
  
  public Lscala/collection/Iterator; toIterator() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::toIterator(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Ljava/lang/String; stringPrefix() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::stringPrefix(Lscala/collection/TraversableLike;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/generic/FilterMonadic; withFilter(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::withFilter(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;)(this, p);
  }
  
  public Lscala/collection/immutable/List; reversed() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reversed(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;)(this);
  }
  
  public Z; nonEmpty() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::nonEmpty(Lscala/collection/TraversableOnce;)Z;)(this);
  }
  
  public I; count(Lscala/Function1; p) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::count(Lscala/collection/TraversableOnce;Lscala/Function1;)I;)(this, p);
  }
  
  public Ljava/lang/Object; $div$colon(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$div$colon(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; $colon$bslash(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$colon$bslash(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; foldLeft(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::foldLeft(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; reduceLeft(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceLeft(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Lscala/Option; reduceLeftOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceLeftOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Lscala/Option; reduceRightOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceRightOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Ljava/lang/Object; sum(Lscala/math/Numeric; num) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::sum(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; product(Lscala/math/Numeric; num) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::product(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; min(Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::min(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public Ljava/lang/Object; max(Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::max(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public V; copyToBuffer(Lscala/collection/mutable/Buffer; dest) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToBuffer(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V;)(this, dest);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToArray(Lscala/collection/TraversableOnce;Ljava/lang/Object;I;)V;)(this, xs, start);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToArray(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V;)(this, xs);
  }
  
  public Ljava/lang/Object; toArray(Lscala/reflect/ClassManifest; evidence$1) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toArray(Lscala/collection/TraversableOnce;Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(this, evidence$1);
  }
  
  public Lscala/collection/immutable/List; toList() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toList(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;)(this);
  }
  
  public Lscala/collection/immutable/IndexedSeq; toIndexedSeq() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toIndexedSeq(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;)(this);
  }
  
  public Lscala/collection/mutable/Buffer; toBuffer() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toBuffer(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;)(this);
  }
  
  public Lscala/collection/immutable/Set; toSet() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toSet(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;)(this);
  }
  
  public Lscala/collection/immutable/Map; toMap(Lscala/Predef$$less$colon$less; ev) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toMap(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(this, ev);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)(this, start, sep, end);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; sep) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;)(this, sep);
  }
  
  public Ljava/lang/String; mkString() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, start, sep, end);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; sep) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, sep);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(this, b);
  }
  
  private I; startIndex;
  
  private I; endIndex;
  
  private I; focus;
  
  public Lscala/collection/generic/GenericCompanion; companion() {
    return Lscala/collection/immutable/Vector$;.MODULE$;
  }
  
  private Z; dirty$u0020;
  
  public Z; dirty() {
    return this.(Z;)dirty$u0020;
  }
  
  public V; dirty_$eq(Z; x$1) {
    this.(Z;)dirty$u0020 = x$1;
  }
  
  public I; length() {
    return (this.(I;)endIndex - this.(I;)startIndex);
  }
  
  public I; lengthCompare(I; len) {
    return (this.(Lscala/collection/immutable/Vector;::length()I;)() - len);
  }
  
  public Lscala/collection/immutable/VectorIterator; iterator() {
    Lscala/collection/immutable/VectorIterator; s = (new (Lscala/collection/immutable/VectorIterator;::this(I;I;)V;)(this.(I;)startIndex, this.(I;)endIndex));
    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
    if (this.(Lscala/collection/immutable/Vector;::dirty()Z;)())
      {
        s.(Lscala/collection/immutable/VectorPointer;::stabilize(I;)V;)(this.(I;)focus);
      }
    else
      {
        
      }
    if ((s.(Lscala/collection/immutable/VectorPointer;::depth()I;)() > 1))
      {
        s.(Lscala/collection/immutable/VectorPointer;::gotoPos(I;I;)V;)(this.(I;)startIndex, (this.(I;)startIndex ^ this.(I;)focus));
      }
    else
      {
        
      }
    return s;
  }
  
  public Lscala/collection/Iterator; reverseIterator() {
    return (new (Lscala/collection/immutable/Vector$$anon$2;::this(Lscala/collection/immutable/Vector;)V;)(this));
  }
  
  public V; foreachFast(Lscala/Function1; f) {
    this.(Lscala/collection/immutable/Vector;::iterator()Lscala/collection/immutable/VectorIterator;)().(Lscala/collection/immutable/VectorIterator;::foreachFast(Lscala/Function1;)V;)(f);
  }
  
  public Ljava/lang/Object; mapFast(Lscala/Function1; f$1, Lscala/collection/generic/CanBuildFrom; bf) {
    Lscala/collection/mutable/Builder; b$1 = bf.(Lscala/collection/generic/CanBuildFrom;::apply(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(this.(Lscala/collection/TraversableLike;::repr()Ljava/lang/Object;)());
    this.(Lscala/collection/immutable/Vector;::foreachFast(Lscala/Function1;)V;)((new (Lscala/collection/immutable/Vector$$anonfun$mapFast$1;::this(Lscala/collection/immutable/Vector;Lscala/Function1;Lscala/collection/mutable/Builder;)V;)(this, f$1, b$1)));
    return b$1.(Lscala/collection/mutable/Builder;::result()Ljava/lang/Object;)();
  }
  
  public Ljava/lang/Object; apply(I; index) {
    I; idx = this.(Lscala/collection/immutable/Vector;::checkRangeConvert(I;)I;)(index);
    return this.(Lscala/collection/immutable/VectorPointer;::getElem(I;I;)Ljava/lang/Object;)(idx, (idx ^ this.(I;)focus));
  }
  
  private I; checkRangeConvert(I; index) {
    I; idx = (index + this.(I;)startIndex);
    I; $1$;
    if (((0 <= index) && (idx < this.(I;)endIndex)))
      {
        $1$ = idx;
      }
    else
      {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(index).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
      }
    return $1$;
  }
  
  public Ljava/lang/Object; updated(I; index, Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return this.(Lscala/collection/immutable/Vector;::updateAt(I;Ljava/lang/Object;)Lscala/collection/immutable/Vector;)(index, elem);
  }
  
  public Ljava/lang/Object; $plus$colon(Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return this.(Lscala/collection/immutable/Vector;::appendFront(Ljava/lang/Object;)Lscala/collection/immutable/Vector;)(elem);
  }
  
  public Ljava/lang/Object; $colon$plus(Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return this.(Lscala/collection/immutable/Vector;::appendBack(Ljava/lang/Object;)Lscala/collection/immutable/Vector;)(elem);
  }
  
  public Lscala/collection/immutable/Vector; take(I; n) {
    Lscala/collection/immutable/Vector; $2$;
    if ((n <= 0))
      {
        $2$ = Lscala/collection/immutable/Vector$;.MODULE$.(Lscala/collection/immutable/Vector$;::empty()Lscala/collection/immutable/Vector;)();
      }
    else
      {
        Lscala/collection/immutable/Vector; $3$;
        if (((this.(I;)startIndex + n) < this.(I;)endIndex))
          {
            $3$ = this.(Lscala/collection/immutable/Vector;::dropBack0(I;)Lscala/collection/immutable/Vector;)((this.(I;)startIndex + n));
          }
        else
          {
            $3$ = this;
          }
        $2$ = $3$;
      }
    return $2$;
  }
  
  public Lscala/collection/immutable/Vector; drop(I; n) {
    Lscala/collection/immutable/Vector; $4$;
    if ((n <= 0))
      {
        $4$ = this;
      }
    else
      {
        Lscala/collection/immutable/Vector; $5$;
        if (((this.(I;)startIndex + n) < this.(I;)endIndex))
          {
            $5$ = this.(Lscala/collection/immutable/Vector;::dropFront0(I;)Lscala/collection/immutable/Vector;)((this.(I;)startIndex + n));
          }
        else
          {
            $5$ = Lscala/collection/immutable/Vector$;.MODULE$.(Lscala/collection/immutable/Vector$;::empty()Lscala/collection/immutable/Vector;)();
          }
        $4$ = $5$;
      }
    return $4$;
  }
  
  public Lscala/collection/immutable/Vector; takeRight(I; n) {
    Lscala/collection/immutable/Vector; $6$;
    if ((n <= 0))
      {
        $6$ = Lscala/collection/immutable/Vector$;.MODULE$.(Lscala/collection/immutable/Vector$;::empty()Lscala/collection/immutable/Vector;)();
      }
    else
      {
        Lscala/collection/immutable/Vector; $7$;
        if (((this.(I;)endIndex - n) > this.(I;)startIndex))
          {
            $7$ = this.(Lscala/collection/immutable/Vector;::dropFront0(I;)Lscala/collection/immutable/Vector;)((this.(I;)endIndex - n));
          }
        else
          {
            $7$ = this;
          }
        $6$ = $7$;
      }
    return $6$;
  }
  
  public Lscala/collection/immutable/Vector; dropRight(I; n) {
    Lscala/collection/immutable/Vector; $8$;
    if ((n <= 0))
      {
        $8$ = this;
      }
    else
      {
        Lscala/collection/immutable/Vector; $9$;
        if (((this.(I;)endIndex - n) > this.(I;)startIndex))
          {
            $9$ = this.(Lscala/collection/immutable/Vector;::dropBack0(I;)Lscala/collection/immutable/Vector;)((this.(I;)endIndex - n));
          }
        else
          {
            $9$ = Lscala/collection/immutable/Vector$;.MODULE$.(Lscala/collection/immutable/Vector$;::empty()Lscala/collection/immutable/Vector;)();
          }
        $8$ = $9$;
      }
    return $8$;
  }
  
  public Ljava/lang/Object; head() {
    if (this.(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)("empty.head"));
      }
    else
      {
        
      }
    return this.(Lscala/collection/immutable/Vector;::apply(I;)Ljava/lang/Object;)(0);
  }
  
  public Lscala/collection/immutable/Vector; tail() {
    if (this.(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)("empty.tail"));
      }
    else
      {
        
      }
    return this.(Lscala/collection/immutable/Vector;::drop(I;)Lscala/collection/immutable/Vector;)(1);
  }
  
  public Ljava/lang/Object; last() {
    if (this.(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)("empty.last"));
      }
    else
      {
        
      }
    return this.(Lscala/collection/immutable/Vector;::apply(I;)Ljava/lang/Object;)((this.(Lscala/collection/immutable/Vector;::length()I;)() - 1));
  }
  
  public Lscala/collection/immutable/Vector; init() {
    if (this.(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)("empty.init"));
      }
    else
      {
        
      }
    return this.(Lscala/collection/immutable/Vector;::dropRight(I;)Lscala/collection/immutable/Vector;)(1);
  }
  
  public Lscala/collection/immutable/Vector; slice(I; from, I; until) {
    return this.(Lscala/collection/immutable/Vector;::take(I;)Lscala/collection/immutable/Vector;)(until).(Lscala/collection/immutable/Vector;::drop(I;)Lscala/collection/immutable/Vector;)(from);
  }
  
  public Lscala/Tuple2; splitAt(I; n) {
    return (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(this.(Lscala/collection/immutable/Vector;::take(I;)Lscala/collection/immutable/Vector;)(n), this.(Lscala/collection/immutable/Vector;::drop(I;)Lscala/collection/immutable/Vector;)(n)));
  }
  
  public Lscala/collection/immutable/Vector; updateAt(I; index, Ljava/lang/Object; elem) {
    I; idx = this.(Lscala/collection/immutable/Vector;::checkRangeConvert(I;)I;)(index);
    Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)(this.(I;)startIndex, this.(I;)endIndex, idx));
    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
    s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
    s.(Lscala/collection/immutable/Vector;::gotoPosWritable(I;I;I;)V;)(this.(I;)focus, idx, (this.(I;)focus ^ idx));
    s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[(idx & 31)] = elem;
    return s;
  }
  
  private V; gotoPosWritable(I; oldIndex, I; newIndex, I; xor) {
    if (this.(Lscala/collection/immutable/Vector;::dirty()Z;)())
      {
        this.(Lscala/collection/immutable/VectorPointer;::gotoPosWritable1(I;I;I;)V;)(oldIndex, newIndex, xor);
      }
    else
      {
        this.(Lscala/collection/immutable/VectorPointer;::gotoPosWritable0(I;I;)V;)(newIndex, xor);
        this.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(true);
      }
  }
  
  private V; gotoFreshPosWritable(I; oldIndex, I; newIndex, I; xor) {
    if (this.(Lscala/collection/immutable/Vector;::dirty()Z;)())
      {
        this.(Lscala/collection/immutable/VectorPointer;::gotoFreshPosWritable1(I;I;I;)V;)(oldIndex, newIndex, xor);
      }
    else
      {
        this.(Lscala/collection/immutable/VectorPointer;::gotoFreshPosWritable0(I;I;I;)V;)(oldIndex, newIndex, xor);
        this.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(true);
      }
  }
  
  public Lscala/collection/immutable/Vector; appendFront(Ljava/lang/Object; value) {
    Lscala/collection/immutable/Vector; $10$;
    if ((this.(I;)endIndex != this.(I;)startIndex))
      {
        I; blockIndex = ((this.(I;)startIndex - 1) & ~(31));
        I; lo = ((this.(I;)startIndex - 1) & 31);
        Lscala/collection/immutable/Vector; $11$;
        if ((this.(I;)startIndex != (blockIndex + 32)))
          {
            Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)((this.(I;)startIndex - 1), this.(I;)endIndex, blockIndex));
            s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
            s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
            s.(Lscala/collection/immutable/Vector;::gotoPosWritable(I;I;I;)V;)(this.(I;)focus, blockIndex, (this.(I;)focus ^ blockIndex));
            s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[lo] = value;
            $11$ = s;
          }
        else
          {
            I; freeSpace = ((1 << (5 * this.(Lscala/collection/immutable/VectorPointer;::depth()I;)())) - this.(I;)endIndex);
            I; shift = (freeSpace & ~(((1 << (5 * (this.(Lscala/collection/immutable/VectorPointer;::depth()I;)() - 1))) - 1)));
            I; shiftBlocks = (freeSpace >> (5 * (this.(Lscala/collection/immutable/VectorPointer;::depth()I;)() - 1)));
            Lscala/collection/immutable/Vector; $12$;
            if ((shift != 0))
              {
                this.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                Lscala/collection/immutable/Vector; $13$;
                if ((this.(Lscala/collection/immutable/VectorPointer;::depth()I;)() > 1))
                  {
                    I; newBlockIndex = (blockIndex + shift);
                    I; newFocus = (this.(I;)focus + shift);
                    Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)(((this.(I;)startIndex - 1) + shift), (this.(I;)endIndex + shift), newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
                    s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
                    s.(Lscala/collection/immutable/Vector;::shiftTopLevel(I;I;)V;)(0, shiftBlocks);
                    s.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                    s.(Lscala/collection/immutable/Vector;::gotoFreshPosWritable(I;I;I;)V;)(newFocus, newBlockIndex, (newFocus ^ newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[lo] = value;
                    $13$ = s;
                  }
                else
                  {
                    I; newBlockIndex = (blockIndex + 32);
                    I; newFocus = this.(I;)focus;
                    Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)(((this.(I;)startIndex - 1) + shift), (this.(I;)endIndex + shift), newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
                    s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
                    s.(Lscala/collection/immutable/Vector;::shiftTopLevel(I;I;)V;)(0, shiftBlocks);
                    s.(Lscala/collection/immutable/Vector;::gotoPosWritable(I;I;I;)V;)(newFocus, newBlockIndex, (newFocus ^ newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[(shift - 1)] = value;
                    s.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                    $13$ = s;
                  }
                $12$ = $13$;
              }
            else
              {
                Lscala/collection/immutable/Vector; $14$;
                if ((blockIndex < 0))
                  {
                    I; move = ((1 << (5 * (this.(Lscala/collection/immutable/VectorPointer;::depth()I;)() + 1))) - (1 << (5 * this.(Lscala/collection/immutable/VectorPointer;::depth()I;)())));
                    I; newBlockIndex = (blockIndex + move);
                    I; newFocus = (this.(I;)focus + move);
                    Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)(((this.(I;)startIndex - 1) + move), (this.(I;)endIndex + move), newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
                    s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
                    s.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                    s.(Lscala/collection/immutable/Vector;::gotoFreshPosWritable(I;I;I;)V;)(newFocus, newBlockIndex, (newFocus ^ newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[lo] = value;
                    s.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                    $14$ = s;
                  }
                else
                  {
                    I; newBlockIndex = blockIndex;
                    I; newFocus = this.(I;)focus;
                    Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)((this.(I;)startIndex - 1), this.(I;)endIndex, newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
                    s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
                    s.(Lscala/collection/immutable/Vector;::gotoFreshPosWritable(I;I;I;)V;)(newFocus, newBlockIndex, (newFocus ^ newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[lo] = value;
                    $14$ = s;
                  }
                $12$ = $14$;
              }
            $11$ = $12$;
          }
        $10$ = $11$;
      }
    else
      {
        Ljava/lang/Object;[ elems = new Ljava/lang/Object;[32];
        elems[31] = value;
        Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)(31, 32, 0));
        s.(Lscala/collection/immutable/VectorPointer;::depth_$eq(I;)V;)(1);
        s.(Lscala/collection/immutable/VectorPointer;::display0_$eq(Ljava/lang/Object;[)V;)(elems);
        $10$ = s;
      }
    return $10$;
  }
  
  public Lscala/collection/immutable/Vector; appendBack(Ljava/lang/Object; value) {
    Lscala/collection/immutable/Vector; $15$;
    if ((this.(I;)endIndex != this.(I;)startIndex))
      {
        I; blockIndex = (this.(I;)endIndex & ~(31));
        I; lo = (this.(I;)endIndex & 31);
        Lscala/collection/immutable/Vector; $16$;
        if ((this.(I;)endIndex != blockIndex))
          {
            Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)(this.(I;)startIndex, (this.(I;)endIndex + 1), blockIndex));
            s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
            s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
            s.(Lscala/collection/immutable/Vector;::gotoPosWritable(I;I;I;)V;)(this.(I;)focus, blockIndex, (this.(I;)focus ^ blockIndex));
            s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[lo] = value;
            $16$ = s;
          }
        else
          {
            I; shift = (this.(I;)startIndex & ~(((1 << (5 * (this.(Lscala/collection/immutable/VectorPointer;::depth()I;)() - 1))) - 1)));
            I; shiftBlocks = (this.(I;)startIndex >> (5 * (this.(Lscala/collection/immutable/VectorPointer;::depth()I;)() - 1)));
            Lscala/collection/immutable/Vector; $17$;
            if ((shift != 0))
              {
                this.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                Lscala/collection/immutable/Vector; $18$;
                if ((this.(Lscala/collection/immutable/VectorPointer;::depth()I;)() > 1))
                  {
                    I; newBlockIndex = (blockIndex - shift);
                    I; newFocus = (this.(I;)focus - shift);
                    Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)((this.(I;)startIndex - shift), ((this.(I;)endIndex + 1) - shift), newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
                    s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
                    s.(Lscala/collection/immutable/Vector;::shiftTopLevel(I;I;)V;)(shiftBlocks, 0);
                    s.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                    s.(Lscala/collection/immutable/Vector;::gotoFreshPosWritable(I;I;I;)V;)(newFocus, newBlockIndex, (newFocus ^ newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[lo] = value;
                    s.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                    $18$ = s;
                  }
                else
                  {
                    I; newBlockIndex = (blockIndex - 32);
                    I; newFocus = this.(I;)focus;
                    Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)((this.(I;)startIndex - shift), ((this.(I;)endIndex + 1) - shift), newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
                    s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
                    s.(Lscala/collection/immutable/Vector;::shiftTopLevel(I;I;)V;)(shiftBlocks, 0);
                    s.(Lscala/collection/immutable/Vector;::gotoPosWritable(I;I;I;)V;)(newFocus, newBlockIndex, (newFocus ^ newBlockIndex));
                    s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[(32 - shift)] = value;
                    s.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                    $18$ = s;
                  }
                $17$ = $18$;
              }
            else
              {
                I; newBlockIndex = blockIndex;
                I; newFocus = this.(I;)focus;
                Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)(this.(I;)startIndex, (this.(I;)endIndex + 1), newBlockIndex));
                s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
                s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
                s.(Lscala/collection/immutable/Vector;::gotoFreshPosWritable(I;I;I;)V;)(newFocus, newBlockIndex, (newFocus ^ newBlockIndex));
                s.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)()[lo] = value;
                if ((s.(Lscala/collection/immutable/VectorPointer;::depth()I;)() == (this.(Lscala/collection/immutable/VectorPointer;::depth()I;)() + 1)))
                  {
                    s.(Lscala/collection/immutable/VectorPointer;::debug()V;)();
                  }
                else
                  {
                    
                  }
                $17$ = s;
              }
            $16$ = $17$;
          }
        $15$ = $16$;
      }
    else
      {
        Ljava/lang/Object;[ elems = new Ljava/lang/Object;[32];
        elems[0] = value;
        Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)(0, 1, 0));
        s.(Lscala/collection/immutable/VectorPointer;::depth_$eq(I;)V;)(1);
        s.(Lscala/collection/immutable/VectorPointer;::display0_$eq(Ljava/lang/Object;[)V;)(elems);
        $15$ = s;
      }
    return $15$;
  }
  
  private V; shiftTopLevel(I; oldLeft, I; newLeft) {
    I; temp1 = (this.(Lscala/collection/immutable/VectorPointer;::depth()I;)() - 1);
    I; $19$ = temp1;
    switch ($19$) {
      0: {
        this.(Lscala/collection/immutable/VectorPointer;::display0_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/VectorPointer;::copyRange(Ljava/lang/Object;[I;I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), oldLeft, newLeft));
        break;
      }
      
      1: {
        this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/VectorPointer;::copyRange(Ljava/lang/Object;[I;I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), oldLeft, newLeft));
        break;
      }
      
      2: {
        this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/VectorPointer;::copyRange(Ljava/lang/Object;[I;I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display2()Ljava/lang/Object;[)(), oldLeft, newLeft));
        break;
      }
      
      3: {
        this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/VectorPointer;::copyRange(Ljava/lang/Object;[I;I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display3()Ljava/lang/Object;[)(), oldLeft, newLeft));
        break;
      }
      
      4: {
        this.(Lscala/collection/immutable/VectorPointer;::display4_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/VectorPointer;::copyRange(Ljava/lang/Object;[I;I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display4()Ljava/lang/Object;[)(), oldLeft, newLeft));
        break;
      }
      
      5: {
        this.(Lscala/collection/immutable/VectorPointer;::display5_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/VectorPointer;::copyRange(Ljava/lang/Object;[I;I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display5()Ljava/lang/Object;[)(), oldLeft, newLeft));
        break;
      }
      
      default: {
        throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(temp1)));
        break;
      }
      
    }
  }
  
  private V; zeroLeft(Ljava/lang/Object;[ array, I; index) {
    I; i = 0;
    while$1: while(true) {
      if ((i < index))
        {
          {
            array[i] = null;
            i = (i + 1);
          }
          continue while$1;
        }
      else
        {
          
        }
      break;
    }
  }
  
  private V; zeroRight(Ljava/lang/Object;[ array, I; index) {
    I; i = index;
    while$2: while(true) {
      if ((i < array.<length>))
        {
          {
            array[i] = null;
            i = (i + 1);
          }
          continue while$2;
        }
      else
        {
          
        }
      break;
    }
  }
  
  private Ljava/lang/Object;[ copyLeft(Ljava/lang/Object;[ array, I; right) {
    Ljava/lang/Object;[ a2 = new Ljava/lang/Object;[array.<length>];
    Lscala/compat/Platform$;.MODULE$.(Lscala/compat/Platform$;::arraycopy(Ljava/lang/Object;I;Ljava/lang/Object;I;I;)V;)(array, 0, a2, 0, right);
    return a2;
  }
  
  private Ljava/lang/Object;[ copyRight(Ljava/lang/Object;[ array, I; left) {
    Ljava/lang/Object;[ a2 = new Ljava/lang/Object;[array.<length>];
    Lscala/compat/Platform$;.MODULE$.(Lscala/compat/Platform$;::arraycopy(Ljava/lang/Object;I;Ljava/lang/Object;I;I;)V;)(array, left, a2, left, (a2.<length> - left));
    return a2;
  }
  
  private V; preClean(I; depth) {
    this.(Lscala/collection/immutable/VectorPointer;::depth_$eq(I;)V;)(depth);
    I; temp2 = (depth - 1);
    I; $20$ = temp2;
    switch ($20$) {
      0: {
        this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display4_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display5_$eq(Ljava/lang/Object;[)V;)(null);
        break;
      }
      
      1: {
        this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display4_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display5_$eq(Ljava/lang/Object;[)V;)(null);
        break;
      }
      
      2: {
        this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display4_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display5_$eq(Ljava/lang/Object;[)V;)(null);
        break;
      }
      
      3: {
        this.(Lscala/collection/immutable/VectorPointer;::display4_$eq(Ljava/lang/Object;[)V;)(null);
        this.(Lscala/collection/immutable/VectorPointer;::display5_$eq(Ljava/lang/Object;[)V;)(null);
        break;
      }
      
      4: {
        this.(Lscala/collection/immutable/VectorPointer;::display5_$eq(Ljava/lang/Object;[)V;)(null);
        break;
      }
      
      5: {
        
        break;
      }
      
      default: {
        throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(temp2)));
        break;
      }
      
    }
  }
  
  private V; cleanLeftEdge(I; cutIndex) {
    if ((cutIndex < 32))
      {
        this.(Lscala/collection/immutable/Vector;::zeroLeft(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), cutIndex);
      }
    else
      {
        if ((cutIndex < 1024))
          {
            this.(Lscala/collection/immutable/Vector;::zeroLeft(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (cutIndex & 31));
            this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), (cutIndex >> 5)));
          }
        else
          {
            if ((cutIndex < 32768))
              {
                this.(Lscala/collection/immutable/Vector;::zeroLeft(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (cutIndex & 31));
                this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), ((cutIndex >> 5) & 31)));
                this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display2()Ljava/lang/Object;[)(), (cutIndex >> 10)));
              }
            else
              {
                if ((cutIndex < 1048576))
                  {
                    this.(Lscala/collection/immutable/Vector;::zeroLeft(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (cutIndex & 31));
                    this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), ((cutIndex >> 5) & 31)));
                    this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display2()Ljava/lang/Object;[)(), ((cutIndex >> 10) & 31)));
                    this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display3()Ljava/lang/Object;[)(), (cutIndex >> 15)));
                  }
                else
                  {
                    if ((cutIndex < 33554432))
                      {
                        this.(Lscala/collection/immutable/Vector;::zeroLeft(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (cutIndex & 31));
                        this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), ((cutIndex >> 5) & 31)));
                        this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display2()Ljava/lang/Object;[)(), ((cutIndex >> 10) & 31)));
                        this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display3()Ljava/lang/Object;[)(), ((cutIndex >> 15) & 31)));
                        this.(Lscala/collection/immutable/VectorPointer;::display4_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display4()Ljava/lang/Object;[)(), (cutIndex >> 20)));
                      }
                    else
                      {
                        if ((cutIndex < 1073741824))
                          {
                            this.(Lscala/collection/immutable/Vector;::zeroLeft(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (cutIndex & 31));
                            this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), ((cutIndex >> 5) & 31)));
                            this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display2()Ljava/lang/Object;[)(), ((cutIndex >> 10) & 31)));
                            this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display3()Ljava/lang/Object;[)(), ((cutIndex >> 15) & 31)));
                            this.(Lscala/collection/immutable/VectorPointer;::display4_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display4()Ljava/lang/Object;[)(), ((cutIndex >> 20) & 31)));
                            this.(Lscala/collection/immutable/VectorPointer;::display5_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyRight(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display5()Ljava/lang/Object;[)(), (cutIndex >> 25)));
                          }
                        else
                          {
                            throw (new (Ljava/lang/IllegalArgumentException;::this()V;)());
                          }
                      }
                  }
              }
          }
      }
  }
  
  private V; cleanRightEdge(I; cutIndex) {
    if ((cutIndex <= 32))
      {
        this.(Lscala/collection/immutable/Vector;::zeroRight(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), cutIndex);
      }
    else
      {
        if ((cutIndex <= 1024))
          {
            this.(Lscala/collection/immutable/Vector;::zeroRight(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (((cutIndex - 1) & 31) + 1));
            this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), (cutIndex >> 5)));
          }
        else
          {
            if ((cutIndex <= 32768))
              {
                this.(Lscala/collection/immutable/Vector;::zeroRight(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (((cutIndex - 1) & 31) + 1));
                this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 5) & 31) + 1)));
                this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display2()Ljava/lang/Object;[)(), (cutIndex >> 10)));
              }
            else
              {
                if ((cutIndex <= 1048576))
                  {
                    this.(Lscala/collection/immutable/Vector;::zeroRight(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (((cutIndex - 1) & 31) + 1));
                    this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 5) & 31) + 1)));
                    this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display2()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 10) & 31) + 1)));
                    this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display3()Ljava/lang/Object;[)(), (cutIndex >> 15)));
                  }
                else
                  {
                    if ((cutIndex <= 33554432))
                      {
                        this.(Lscala/collection/immutable/Vector;::zeroRight(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (((cutIndex - 1) & 31) + 1));
                        this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 5) & 31) + 1)));
                        this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display2()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 10) & 31) + 1)));
                        this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display3()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 15) & 31) + 1)));
                        this.(Lscala/collection/immutable/VectorPointer;::display4_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display4()Ljava/lang/Object;[)(), (cutIndex >> 20)));
                      }
                    else
                      {
                        if ((cutIndex <= 1073741824))
                          {
                            this.(Lscala/collection/immutable/Vector;::zeroRight(Ljava/lang/Object;[I;)V;)(this.(Lscala/collection/immutable/VectorPointer;::display0()Ljava/lang/Object;[)(), (((cutIndex - 1) & 31) + 1));
                            this.(Lscala/collection/immutable/VectorPointer;::display1_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display1()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 5) & 31) + 1)));
                            this.(Lscala/collection/immutable/VectorPointer;::display2_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display2()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 10) & 31) + 1)));
                            this.(Lscala/collection/immutable/VectorPointer;::display3_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display3()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 15) & 31) + 1)));
                            this.(Lscala/collection/immutable/VectorPointer;::display4_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display4()Ljava/lang/Object;[)(), ((((cutIndex - 1) >> 20) & 31) + 1)));
                            this.(Lscala/collection/immutable/VectorPointer;::display5_$eq(Ljava/lang/Object;[)V;)(this.(Lscala/collection/immutable/Vector;::copyLeft(Ljava/lang/Object;[I;)Ljava/lang/Object;[)(this.(Lscala/collection/immutable/VectorPointer;::display5()Ljava/lang/Object;[)(), (cutIndex >> 25)));
                          }
                        else
                          {
                            throw (new (Ljava/lang/IllegalArgumentException;::this()V;)());
                          }
                      }
                  }
              }
          }
      }
  }
  
  private I; requiredDepth(I; xor) {
    I; $21$;
    if ((xor < 32))
      {
        $21$ = 1;
      }
    else
      {
        I; $22$;
        if ((xor < 1024))
          {
            $22$ = 2;
          }
        else
          {
            I; $23$;
            if ((xor < 32768))
              {
                $23$ = 3;
              }
            else
              {
                I; $24$;
                if ((xor < 1048576))
                  {
                    $24$ = 4;
                  }
                else
                  {
                    I; $25$;
                    if ((xor < 33554432))
                      {
                        $25$ = 5;
                      }
                    else
                      {
                        I; $26$;
                        if ((xor < 1073741824))
                          {
                            $26$ = 6;
                          }
                        else
                          {
                            throw (new (Ljava/lang/IllegalArgumentException;::this()V;)());
                          }
                        $25$ = $26$;
                      }
                    $24$ = $25$;
                  }
                $23$ = $24$;
              }
            $22$ = $23$;
          }
        $21$ = $22$;
      }
    return $21$;
  }
  
  private Lscala/collection/immutable/Vector; dropFront0(I; cutIndex) {
    I; blockIndex = (cutIndex & ~(31));
    I; lo = (cutIndex & 31);
    I; xor = (cutIndex ^ (this.(I;)endIndex - 1));
    I; d = this.(Lscala/collection/immutable/Vector;::requiredDepth(I;)I;)(xor);
    I; shift = (cutIndex & ~(((1 << (5 * d)) - 1)));
    Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)((cutIndex - shift), (this.(I;)endIndex - shift), (blockIndex - shift)));
    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
    s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
    s.(Lscala/collection/immutable/Vector;::gotoPosWritable(I;I;I;)V;)(this.(I;)focus, blockIndex, (this.(I;)focus ^ blockIndex));
    s.(Lscala/collection/immutable/Vector;::preClean(I;)V;)(d);
    s.(Lscala/collection/immutable/Vector;::cleanLeftEdge(I;)V;)((cutIndex - shift));
    return s;
  }
  
  private Lscala/collection/immutable/Vector; dropBack0(I; cutIndex) {
    I; blockIndex = ((cutIndex - 1) & ~(31));
    I; lo = (((cutIndex - 1) & 31) + 1);
    I; xor = (this.(I;)startIndex ^ (cutIndex - 1));
    I; d = this.(Lscala/collection/immutable/Vector;::requiredDepth(I;)I;)(xor);
    I; shift = (this.(I;)startIndex & ~(((1 << (5 * d)) - 1)));
    Lscala/collection/immutable/Vector; s = (new (Lscala/collection/immutable/Vector;::this(I;I;I;)V;)((this.(I;)startIndex - shift), (cutIndex - shift), (blockIndex - shift)));
    s.(Lscala/collection/immutable/VectorPointer;::initFrom(Lscala/collection/immutable/VectorPointer;)V;)(this);
    s.(Lscala/collection/immutable/Vector;::dirty_$eq(Z;)V;)(this.(Lscala/collection/immutable/Vector;::dirty()Z;)());
    s.(Lscala/collection/immutable/Vector;::gotoPosWritable(I;I;I;)V;)(this.(I;)focus, blockIndex, (this.(I;)focus ^ blockIndex));
    s.(Lscala/collection/immutable/Vector;::preClean(I;)V;)(d);
    s.(Lscala/collection/immutable/Vector;::cleanRightEdge(I;)V;)((cutIndex - shift));
    return s;
  }
  
  public Lscala/Function1; andThen(Lscala/Function1; g) {
    return this.(Lscala/PartialFunction;::andThen(Lscala/Function1;)Lscala/PartialFunction;)(g);
  }
  
  public Lscala/collection/IterableView; projection() {
    return this.(Lscala/collection/SeqLike;::projection()Lscala/collection/SeqView;)();
  }
  
  public Lscala/collection/TraversableView; view(I; from, I; until) {
    return this.(Lscala/collection/SeqLike;::view(I;I;)Lscala/collection/SeqView;)(from, until);
  }
  
  public Lscala/collection/IterableView; view(I; from, I; until) {
    return this.(Lscala/collection/SeqLike;::view(I;I;)Lscala/collection/SeqView;)(from, until);
  }
  
  public Lscala/collection/TraversableView; view() {
    return this.(Lscala/collection/SeqLike;::view()Lscala/collection/SeqView;)();
  }
  
  public Lscala/collection/IterableView; view() {
    return this.(Lscala/collection/SeqLike;::view()Lscala/collection/SeqView;)();
  }
  
  public Z; isDefinedAt(Ljava/lang/Object; x) {
    return this.(Lscala/collection/SeqLike;::isDefinedAt(I;)Z;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(x));
  }
  
  public Lscala/collection/Traversable; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/IndexedSeqLike;::toCollection(Ljava/lang/Object;)Lscala/collection/IndexedSeq;)(repr);
  }
  
  public Lscala/collection/Iterable; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/IndexedSeqLike;::toCollection(Ljava/lang/Object;)Lscala/collection/IndexedSeq;)(repr);
  }
  
  public Lscala/collection/Seq; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/IndexedSeqLike;::toCollection(Ljava/lang/Object;)Lscala/collection/IndexedSeq;)(repr);
  }
  
  public Lscala/collection/Traversable; thisCollection() {
    return this.(Lscala/collection/IndexedSeqLike;::thisCollection()Lscala/collection/IndexedSeq;)();
  }
  
  public Lscala/collection/Iterable; thisCollection() {
    return this.(Lscala/collection/IndexedSeqLike;::thisCollection()Lscala/collection/IndexedSeq;)();
  }
  
  public Lscala/collection/Seq; thisCollection() {
    return this.(Lscala/collection/IndexedSeqLike;::thisCollection()Lscala/collection/IndexedSeq;)();
  }
  
  public Ljava/lang/Object; slice(I; from, I; until) {
    return this.(Lscala/collection/immutable/Vector;::slice(I;I;)Lscala/collection/immutable/Vector;)(from, until);
  }
  
  public Ljava/lang/Object; init() {
    return this.(Lscala/collection/immutable/Vector;::init()Lscala/collection/immutable/Vector;)();
  }
  
  public Ljava/lang/Object; tail() {
    return this.(Lscala/collection/immutable/Vector;::tail()Lscala/collection/immutable/Vector;)();
  }
  
  public Ljava/lang/Object; dropRight(I; n) {
    return this.(Lscala/collection/immutable/Vector;::dropRight(I;)Lscala/collection/immutable/Vector;)(n);
  }
  
  public Ljava/lang/Object; takeRight(I; n) {
    return this.(Lscala/collection/immutable/Vector;::takeRight(I;)Lscala/collection/immutable/Vector;)(n);
  }
  
  public Ljava/lang/Object; drop(I; n) {
    return this.(Lscala/collection/immutable/Vector;::drop(I;)Lscala/collection/immutable/Vector;)(n);
  }
  
  public Ljava/lang/Object; take(I; n) {
    return this.(Lscala/collection/immutable/Vector;::take(I;)Lscala/collection/immutable/Vector;)(n);
  }
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/collection/immutable/Vector;::apply(I;)Ljava/lang/Object;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v1));
  }
  
  public Lscala/collection/Iterator; iterator() {
    return this.(Lscala/collection/immutable/Vector;::iterator()Lscala/collection/immutable/VectorIterator;)();
  }
  
  public this(I; startIndex, I; endIndex, I; focus) {
    this.(I;)startIndex = startIndex;
    this.(I;)endIndex = endIndex;
    this.(I;)focus = focus;
    (Ljava/lang/Object;::super()V;)();
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$init$(Lscala/collection/TraversableOnce;)V;)(this);
    Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::$init$(Lscala/collection/TraversableLike;)V;)(this);
    Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::$init$(Lscala/collection/generic/GenericTraversableTemplate;)V;)(this);
    Lscala/collection/Traversable$class;.(Lscala/collection/Traversable$class;::$init$(Lscala/collection/Traversable;)V;)(this);
    Lscala/collection/immutable/Traversable$class;.(Lscala/collection/immutable/Traversable$class;::$init$(Lscala/collection/immutable/Traversable;)V;)(this);
    Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::$init$(Lscala/collection/IterableLike;)V;)(this);
    Lscala/collection/Iterable$class;.(Lscala/collection/Iterable$class;::$init$(Lscala/collection/Iterable;)V;)(this);
    Lscala/collection/immutable/Iterable$class;.(Lscala/collection/immutable/Iterable$class;::$init$(Lscala/collection/immutable/Iterable;)V;)(this);
    Lscala/Function1$class;.(Lscala/Function1$class;::$init$(Lscala/Function1;)V;)(this);
    Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::$init$(Lscala/PartialFunction;)V;)(this);
    Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::$init$(Lscala/collection/SeqLike;)V;)(this);
    Lscala/collection/Seq$class;.(Lscala/collection/Seq$class;::$init$(Lscala/collection/Seq;)V;)(this);
    Lscala/collection/immutable/Seq$class;.(Lscala/collection/immutable/Seq$class;::$init$(Lscala/collection/immutable/Seq;)V;)(this);
    Lscala/collection/IndexedSeqLike$class;.(Lscala/collection/IndexedSeqLike$class;::$init$(Lscala/collection/IndexedSeqLike;)V;)(this);
    Lscala/collection/IndexedSeq$class;.(Lscala/collection/IndexedSeq$class;::$init$(Lscala/collection/IndexedSeq;)V;)(this);
    Lscala/collection/immutable/IndexedSeq$class;.(Lscala/collection/immutable/IndexedSeq$class;::$init$(Lscala/collection/immutable/IndexedSeq;)V;)(this);
    Lscala/collection/immutable/VectorPointer$class;.(Lscala/collection/immutable/VectorPointer$class;::$init$(Lscala/collection/immutable/VectorPointer;)V;)(this);
    this.(Z;)dirty$u0020 = false;
  }
}
