public final class Lscala/collection/immutable/LongMapUtils$; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  public static Lscala/collection/immutable/LongMapUtils$; MODULE$ = new (Lscala/collection/immutable/LongMapUtils$;::this()V;)();
  
  public Z; zero(J; i, J; mask) {
    return ((i & mask) == 0L);
  }
  
  public J; mask(J; i, J; mask) {
    return (i & (this.(Lscala/collection/immutable/LongMapUtils$;::complement(J;)J;)((mask - 1)) ^ mask));
  }
  
  public Z; hasMatch(J; key, J; prefix, J; m) {
    return (this.(Lscala/collection/immutable/LongMapUtils$;::mask(J;J;)J;)(key, m) == prefix);
  }
  
  public Z; unsignedCompare(J; i, J; j) {
    return (((i < j) ^ (i < 0)) ^ (j < 0));
  }
  
  public Z; shorter(J; m1, J; m2) {
    return this.(Lscala/collection/immutable/LongMapUtils$;::unsignedCompare(J;J;)Z;)(m2, m1);
  }
  
  public J; complement(J; i) {
    return (-1 ^ i);
  }
  
  public J; branchMask(J; i, J; j) {
    return this.(Lscala/collection/immutable/LongMapUtils$;::highestOneBit(J;)J;)((i ^ j));
  }
  
  public J; highestOneBit(J; j) {
    J; i = j;
    i = (i | (i >>> 1));
    i = (i | (i >>> 2));
    i = (i | (i >>> 4));
    i = (i | (i >>> 8));
    i = (i | (i >>> 16));
    i = (i | (i >>> 32));
    return (i - (i >> 1));
  }
  
  public Lscala/collection/immutable/LongMap; join(J; p1, Lscala/collection/immutable/LongMap; t1, J; p2, Lscala/collection/immutable/LongMap; t2) {
    J; m = this.(Lscala/collection/immutable/LongMapUtils$;::branchMask(J;J;)J;)(p1, p2);
    J; p = this.(Lscala/collection/immutable/LongMapUtils$;::mask(J;J;)J;)(p1, m);
    Lscala/collection/immutable/LongMap; $1$;
    if (this.(Lscala/collection/immutable/LongMapUtils$;::zero(J;J;)Z;)(p1, m))
      {
        $1$ = (new (Lscala/collection/immutable/LongMap$Bin;::this(J;J;Lscala/collection/immutable/LongMap;Lscala/collection/immutable/LongMap;)V;)(p, m, t1, t2));
      }
    else
      {
        $1$ = (new (Lscala/collection/immutable/LongMap$Bin;::this(J;J;Lscala/collection/immutable/LongMap;Lscala/collection/immutable/LongMap;)V;)(p, m, t2, t1));
      }
    return $1$;
  }
  
  public Lscala/collection/immutable/LongMap; bin(J; prefix, J; mask, Lscala/collection/immutable/LongMap; left, Lscala/collection/immutable/LongMap; right) {
    Lscala/collection/immutable/LongMap; tp1 = left;
    Lscala/collection/immutable/LongMap; tp2 = right;
    Lscala/collection/immutable/LongMap; $2$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/collection/immutable/LongMap$Nil$;.MODULE$, tp2))
      {
        $2$ = tp1;
      }
    else
      {
        Lscala/collection/immutable/LongMap; $3$;
        if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/collection/immutable/LongMap$Nil$;.MODULE$, tp1))
          {
            $3$ = tp2;
          }
        else
          {
            $3$ = (new (Lscala/collection/immutable/LongMap$Bin;::this(J;J;Lscala/collection/immutable/LongMap;Lscala/collection/immutable/LongMap;)V;)(prefix, mask, tp1, tp2));
          }
        $2$ = $3$;
      }
    return $2$;
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
