public final class Lscala/collection/immutable/PagedSeq$$anonfun$fromIterator$1; extends Lscala/runtime/AbstractFunction3; {
  
  public final I; apply(Ljava/lang/Object; data, I; start, I; len) {
    I; i = 0;
    while$1: while(true) {
      if (((i < len) && this.(Lscala/collection/Iterator;)source$1.(Lscala/collection/Iterator;::hasNext()Z;)()))
        {
          {
            Lscala/runtime/ScalaRunTime$;.MODULE$.(Lscala/runtime/ScalaRunTime$;::array_update(Ljava/lang/Object;I;Ljava/lang/Object;)V;)(data, (start + i), this.(Lscala/collection/Iterator;)source$1.(Lscala/collection/Iterator;::next()Ljava/lang/Object;)());
            i = (i + 1);
          }
          continue while$1;
        }
      else
        {
          
        }
      break;
    }
    I; $7$;
    if ((i == 0))
      {
        $7$ = -1;
      }
    else
      {
        $7$ = i;
      }
    return $7$;
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1, Ljava/lang/Object; v2, Ljava/lang/Object; v3) {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(this.(Lscala/collection/immutable/PagedSeq$$anonfun$fromIterator$1;::apply(Ljava/lang/Object;I;I;)I;)(v1, Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v2), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v3)));
  }
  
  private Lscala/collection/Iterator; source$1;
  
  public this(Lscala/collection/Iterator; source$1) {
    this.(Lscala/collection/Iterator;)source$1 = source$1;
    (Lscala/runtime/AbstractFunction3;::super()V;)();
  }
}
