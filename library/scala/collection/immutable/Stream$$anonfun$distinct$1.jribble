public final class Lscala/collection/immutable/Stream$$anonfun$distinct$1; extends Lscala/runtime/AbstractFunction0; {
  
  public final Lscala/collection/immutable/Stream; apply() {
    Ljava/lang/Object; eta$0$1$1 = this.(Lscala/collection/immutable/Stream;)$outer$u0020.(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)();
    return this.(Lscala/collection/immutable/Stream;)$outer$u0020.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/Stream;).(Lscala/collection/immutable/Stream;::filter(Lscala/Function1;)Lscala/collection/immutable/Stream;)((new (Lscala/collection/immutable/Stream$$anonfun$distinct$1$$anonfun$apply$1;::this(Lscala/collection/immutable/Stream$$anonfun$distinct$1;Ljava/lang/Object;)V;)(this, eta$0$1$1))).(Lscala/collection/immutable/Stream;::distinct()Lscala/collection/immutable/Stream;)();
  }
  
  private Lscala/collection/immutable/Stream; $outer$u0020;
  
  public final Ljava/lang/Object; apply() {
    return this.(Lscala/collection/immutable/Stream$$anonfun$distinct$1;::apply()Lscala/collection/immutable/Stream;)();
  }
  
  public this(Lscala/collection/immutable/Stream; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/immutable/Stream;)$outer$u0020 = $outer;
      }
    (Lscala/runtime/AbstractFunction0;::super()V;)();
  }
}
