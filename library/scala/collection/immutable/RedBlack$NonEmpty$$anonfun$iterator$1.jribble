public final class Lscala/collection/immutable/RedBlack$NonEmpty$$anonfun$iterator$1; extends Lscala/runtime/AbstractFunction0; {
  
  public final Lscala/collection/Iterator; apply() {
    return Lscala/collection/Iterator$;.MODULE$.(Lscala/collection/Iterator$;::single(Ljava/lang/Object;)Lscala/collection/Iterator;)(Lscala/Predef$Pair$;.MODULE$.(Lscala/Predef$Pair$;::apply(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;)(this.(Lscala/collection/immutable/RedBlack$NonEmpty$$anonfun$iterator$1;)$outer$u0020.(Lscala/collection/immutable/RedBlack$NonEmpty;::key()Ljava/lang/Object;)(), this.(Lscala/collection/immutable/RedBlack$NonEmpty$$anonfun$iterator$1;)$outer$u0020.(Lscala/collection/immutable/RedBlack$NonEmpty;::value()Ljava/lang/Object;)()));
  }
  
  private Lscala/collection/immutable/RedBlack$NonEmpty; $outer$u0020;
  
  public final Ljava/lang/Object; apply() {
    return this.(Lscala/collection/immutable/RedBlack$NonEmpty$$anonfun$iterator$1;::apply()Lscala/collection/Iterator;)();
  }
  
  public this(Lscala/collection/immutable/RedBlack$NonEmpty; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/immutable/RedBlack$NonEmpty$$anonfun$iterator$1;)$outer$u0020 = $outer;
      }
    (Lscala/runtime/AbstractFunction0;::super()V;)();
  }
}
