public class Lscala/collection/JavaConversions$MutableSetWrapper; extends Lscala/collection/JavaConversions$SetWrapper; implements Lscala/ScalaObject;, Lscala/Product;, Lscala/Serializable; {
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  private Lscala/collection/mutable/Set; underlying$u0020;
  
  public Lscala/collection/mutable/Set; underlying() {
    return this.(Lscala/collection/JavaConversions$MutableSetWrapper;)underlying$u0020;
  }
  
  public Z; add(Ljava/lang/Object; elem) {
    I; sz = this.(Lscala/collection/JavaConversions$MutableSetWrapper;::underlying()Lscala/collection/mutable/Set;)().(Lscala/collection/TraversableOnce;::size()I;)();
    this.(Lscala/collection/JavaConversions$MutableSetWrapper;::underlying()Lscala/collection/mutable/Set;)().(Lscala/collection/mutable/SetLike;::$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/SetLike;)(elem);
    return (sz < this.(Lscala/collection/JavaConversions$MutableSetWrapper;::underlying()Lscala/collection/mutable/Set;)().(Lscala/collection/TraversableOnce;::size()I;)());
  }
  
  public Z; remove(Ljava/lang/Object; elem) {
    Z; exceptionResult1;
    try {
      exceptionResult1 = this.(Lscala/collection/JavaConversions$MutableSetWrapper;::underlying()Lscala/collection/mutable/Set;)().(Lscala/collection/mutable/SetLike;::remove(Ljava/lang/Object;)Z;)(elem);
    } catch(Ljava/lang/ClassCastException; ex) {
      exceptionResult1 = false;
    }
    return exceptionResult1;
  }
  
  public V; clear() {
    this.(Lscala/collection/JavaConversions$MutableSetWrapper;::underlying()Lscala/collection/mutable/Set;)().(Lscala/collection/mutable/SetLike;::clear()V;)();
  }
  
  public Lscala/collection/JavaConversions$MutableSetWrapper; copy(Lscala/collection/mutable/Set; underlying) {
    return (new (Lscala/collection/JavaConversions$MutableSetWrapper;::this(Lscala/collection/mutable/Set;)V;)(underlying));
  }
  
  public Lscala/collection/mutable/Set; copy$default$1() {
    return this.(Lscala/collection/JavaConversions$MutableSetWrapper;::underlying()Lscala/collection/mutable/Set;)();
  }
  
  public Ljava/lang/String; productPrefix() {
    return "MutableSetWrapper";
  }
  
  public I; productArity() {
    return 1;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp100 = x$1;
    Ljava/lang/Object; $67$;
    if ((temp100 == 0))
      {
        $67$ = this.(Lscala/collection/JavaConversions$MutableSetWrapper;::underlying()Lscala/collection/mutable/Set;)();
      }
    else
      {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
      }
    return $67$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/collection/JavaConversions$MutableSetWrapper;);
  }
  
  public this(Lscala/collection/mutable/Set; underlying) {
    this.(Lscala/collection/JavaConversions$MutableSetWrapper;)underlying$u0020 = underlying;
    (Lscala/collection/JavaConversions$SetWrapper;::super(Lscala/collection/Set;)V;)(underlying);
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
  }
}
