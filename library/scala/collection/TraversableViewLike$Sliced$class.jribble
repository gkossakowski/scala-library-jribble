public abstract class Lscala/collection/TraversableViewLike$Sliced$class; {
  
  public static V; foreach(Lscala/collection/TraversableViewLike$Sliced; $this, Lscala/Function1; f$3) {
    Ljava/lang/Object; nonLocalReturnKey1$1 = (new (Ljava/lang/Object;::this()V;)());
    try {
      Lscala/runtime/IntRef; index$1 = (new (Lscala/runtime/IntRef;::this(I;)V;)(0));
      $this.(Lscala/collection/TraversableViewLike$Sliced;::scala$collection$TraversableViewLike$Sliced$$$outer()Lscala/collection/TraversableViewLike;)().(Lscala/collection/generic/GenericTraversableTemplate;::foreach(Lscala/Function1;)V;)((new (Lscala/collection/TraversableViewLike$Sliced$$anonfun$foreach$1;::this(Lscala/collection/TraversableViewLike$Sliced;Lscala/Function1;Lscala/runtime/IntRef;Ljava/lang/Object;)V;)($this, f$3, index$1, nonLocalReturnKey1$1)));
    } catch(Lscala/runtime/NonLocalReturnControl; ex) {
      if ((ex.(Lscala/runtime/NonLocalReturnControl;::key()Ljava/lang/Object;)() == nonLocalReturnKey1$1))
        {
          ex.(Lscala/runtime/NonLocalReturnControl;::value()Ljava/lang/Object;)().<cast>(Lscala/runtime/BoxedUnit;);
        }
      else
        {
          throw ex;
        }
    }
  }
  
  public static Ljava/lang/String; stringPrefix(Lscala/collection/TraversableViewLike$Sliced; $this) {
    return ($this.(Lscala/collection/TraversableViewLike$Sliced;::scala$collection$TraversableViewLike$Sliced$$$outer()Lscala/collection/TraversableViewLike;)().(Lscala/collection/TraversableViewLike;::stringPrefix()Ljava/lang/String;)() + "S");
  }
  
  public static Lscala/collection/TraversableView; slice(Lscala/collection/TraversableViewLike$Sliced; $this, I; from1, I; until1) {
    return $this.(Lscala/collection/TraversableViewLike;::newSliced(I;I;)Lscala/collection/TraversableViewLike$Transformed;)(Lscala/Predef$;.MODULE$.(Lscala/Predef$;::intWrapper(I;)Lscala/runtime/RichInt;)(from1).(Lscala/runtime/RichInt;::max(I;)I;)(0), Lscala/Predef$;.MODULE$.(Lscala/Predef$;::intWrapper(I;)Lscala/runtime/RichInt;)(until1).(Lscala/runtime/RichInt;::max(I;)I;)(0));
  }
  
  public static V; $init$(Lscala/collection/TraversableViewLike$Sliced; $this) {
    
  }
}
