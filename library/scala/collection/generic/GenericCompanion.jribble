public abstract class Lscala/collection/generic/GenericCompanion; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  
  public abstract Lscala/collection/mutable/Builder; newBuilder();
  
  public Lscala/collection/GenTraversable; empty() {
    return this.(Lscala/collection/generic/GenericCompanion;::newBuilder()Lscala/collection/mutable/Builder;)().(Lscala/collection/mutable/Builder;::result()Ljava/lang/Object;)().<cast>(Lscala/collection/GenTraversable;);
  }
  
  public Lscala/collection/GenTraversable; apply(Lscala/collection/Seq; elems) {
    Lscala/collection/GenTraversable; $1$;
    if (elems.(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        $1$ = this.(Lscala/collection/generic/GenericCompanion;::empty()Lscala/collection/GenTraversable;)();
      }
    else
      {
        Lscala/collection/mutable/Builder; b = this.(Lscala/collection/generic/GenericCompanion;::newBuilder()Lscala/collection/mutable/Builder;)();
        b.(Lscala/collection/generic/Growable;::$plus$plus$eq(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;)(elems);
        $1$ = b.(Lscala/collection/mutable/Builder;::result()Ljava/lang/Object;)().<cast>(Lscala/collection/GenTraversable;);
      }
    return $1$;
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
