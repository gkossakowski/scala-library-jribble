public abstract class Lscala/collection/generic/TraversableForwarder$class; {
  
  public static V; foreach(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Function1; f) {
    $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/generic/GenericTraversableTemplate;::foreach(Lscala/Function1;)V;)(f);
  }
  
  public static Z; isEmpty(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::isEmpty()Z;)();
  }
  
  public static Z; nonEmpty(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::nonEmpty()Z;)();
  }
  
  public static I; size(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::size()I;)();
  }
  
  public static Z; hasDefiniteSize(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::hasDefiniteSize()Z;)();
  }
  
  public static Z; forall(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Function1; p) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::forall(Lscala/Function1;)Z;)(p);
  }
  
  public static Z; exists(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Function1; p) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::exists(Lscala/Function1;)Z;)(p);
  }
  
  public static I; count(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Function1; p) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::count(Lscala/Function1;)I;)(p);
  }
  
  public static Lscala/Option; find(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Function1; p) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::find(Lscala/Function1;)Lscala/Option;)(p);
  }
  
  public static Ljava/lang/Object; foldLeft(Lscala/collection/generic/TraversableForwarder; $this, Ljava/lang/Object; z, Lscala/Function2; op) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::foldLeft(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(z, op);
  }
  
  public static Ljava/lang/Object; $div$colon(Lscala/collection/generic/TraversableForwarder; $this, Ljava/lang/Object; z, Lscala/Function2; op) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::$div$colon(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(z, op);
  }
  
  public static Ljava/lang/Object; foldRight(Lscala/collection/generic/TraversableForwarder; $this, Ljava/lang/Object; z, Lscala/Function2; op) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::foldRight(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(z, op);
  }
  
  public static Ljava/lang/Object; $colon$bslash(Lscala/collection/generic/TraversableForwarder; $this, Ljava/lang/Object; z, Lscala/Function2; op) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::$colon$bslash(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(z, op);
  }
  
  public static Ljava/lang/Object; reduceLeft(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Function2; op) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::reduceLeft(Lscala/Function2;)Ljava/lang/Object;)(op);
  }
  
  public static Lscala/Option; reduceLeftOption(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Function2; op) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::reduceLeftOption(Lscala/Function2;)Lscala/Option;)(op);
  }
  
  public static Ljava/lang/Object; reduceRight(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Function2; op) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::reduceRight(Lscala/Function2;)Ljava/lang/Object;)(op);
  }
  
  public static Lscala/Option; reduceRightOption(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Function2; op) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::reduceRightOption(Lscala/Function2;)Lscala/Option;)(op);
  }
  
  public static Ljava/lang/Object; sum(Lscala/collection/generic/TraversableForwarder; $this, Lscala/math/Numeric; num) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::sum(Lscala/math/Numeric;)Ljava/lang/Object;)(num);
  }
  
  public static Ljava/lang/Object; product(Lscala/collection/generic/TraversableForwarder; $this, Lscala/math/Numeric; num) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::product(Lscala/math/Numeric;)Ljava/lang/Object;)(num);
  }
  
  public static Ljava/lang/Object; min(Lscala/collection/generic/TraversableForwarder; $this, Lscala/math/Ordering; cmp) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::min(Lscala/math/Ordering;)Ljava/lang/Object;)(cmp);
  }
  
  public static Ljava/lang/Object; max(Lscala/collection/generic/TraversableForwarder; $this, Lscala/math/Ordering; cmp) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::max(Lscala/math/Ordering;)Ljava/lang/Object;)(cmp);
  }
  
  public static Ljava/lang/Object; head(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::head()Ljava/lang/Object;)();
  }
  
  public static Lscala/Option; headOption(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::headOption()Lscala/Option;)();
  }
  
  public static Ljava/lang/Object; last(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::last()Ljava/lang/Object;)();
  }
  
  public static Lscala/Option; lastOption(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::lastOption()Lscala/Option;)();
  }
  
  public static V; copyToBuffer(Lscala/collection/generic/TraversableForwarder; $this, Lscala/collection/mutable/Buffer; dest) {
    $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::copyToBuffer(Lscala/collection/mutable/Buffer;)V;)(dest);
  }
  
  public static V; copyToArray(Lscala/collection/generic/TraversableForwarder; $this, Ljava/lang/Object; xs, I; start, I; len) {
    $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::copyToArray(Ljava/lang/Object;I;I;)V;)(xs, start, len);
  }
  
  public static V; copyToArray(Lscala/collection/generic/TraversableForwarder; $this, Ljava/lang/Object; xs, I; start) {
    $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::copyToArray(Ljava/lang/Object;I;)V;)(xs, start);
  }
  
  public static V; copyToArray(Lscala/collection/generic/TraversableForwarder; $this, Ljava/lang/Object; xs) {
    $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::copyToArray(Ljava/lang/Object;)V;)(xs);
  }
  
  public static Ljava/lang/Object; toArray(Lscala/collection/generic/TraversableForwarder; $this, Lscala/reflect/ClassManifest; evidence$1) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::toArray(Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(evidence$1);
  }
  
  public static Lscala/collection/immutable/List; toList(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::toList()Lscala/collection/immutable/List;)();
  }
  
  public static Lscala/collection/Iterable; toIterable(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::toIterable()Lscala/collection/Iterable;)();
  }
  
  public static Lscala/collection/Seq; toSeq(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::toSeq()Lscala/collection/Seq;)();
  }
  
  public static Lscala/collection/immutable/IndexedSeq; toIndexedSeq(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::toIndexedSeq()Lscala/collection/immutable/IndexedSeq;)();
  }
  
  public static Lscala/collection/mutable/Buffer; toBuffer(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::toBuffer()Lscala/collection/mutable/Buffer;)();
  }
  
  public static Lscala/collection/immutable/Stream; toStream(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableLike;::toStream()Lscala/collection/immutable/Stream;)();
  }
  
  public static Lscala/collection/immutable/Set; toSet(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::toSet()Lscala/collection/immutable/Set;)();
  }
  
  public static Lscala/collection/immutable/Map; toMap(Lscala/collection/generic/TraversableForwarder; $this, Lscala/Predef$$less$colon$less; ev) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::toMap(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(ev);
  }
  
  public static Ljava/lang/String; mkString(Lscala/collection/generic/TraversableForwarder; $this, Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)(start, sep, end);
  }
  
  public static Ljava/lang/String; mkString(Lscala/collection/generic/TraversableForwarder; $this, Ljava/lang/String; sep) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::mkString(Ljava/lang/String;)Ljava/lang/String;)(sep);
  }
  
  public static Ljava/lang/String; mkString(Lscala/collection/generic/TraversableForwarder; $this) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::mkString()Ljava/lang/String;)();
  }
  
  public static Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/generic/TraversableForwarder; $this, Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::addString(Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(b, start, sep, end);
  }
  
  public static Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/generic/TraversableForwarder; $this, Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; sep) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::addString(Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(b, sep);
  }
  
  public static Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/generic/TraversableForwarder; $this, Lscala/collection/mutable/StringBuilder; b) {
    return $this.(Lscala/collection/generic/TraversableForwarder;::underlying()Lscala/collection/Traversable;)().(Lscala/collection/TraversableOnce;::addString(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(b);
  }
  
  public static V; $init$(Lscala/collection/generic/TraversableForwarder; $this) {
    
  }
}
