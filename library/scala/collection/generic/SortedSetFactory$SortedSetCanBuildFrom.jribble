public class Lscala/collection/generic/SortedSetFactory$SortedSetCanBuildFrom; extends Ljava/lang/Object; implements Lscala/collection/generic/CanBuildFrom;, Lscala/ScalaObject; {
  
  private Lscala/math/Ordering; ord;
  
  public Lscala/collection/mutable/Builder; apply(Lscala/collection/SortedSet; from) {
    return this.(Lscala/collection/generic/SortedSetFactory$SortedSetCanBuildFrom;::scala$collection$generic$SortedSetFactory$SortedSetCanBuildFrom$$$outer()Lscala/collection/generic/SortedSetFactory;)().(Lscala/collection/generic/SortedSetFactory;::newBuilder(Lscala/math/Ordering;)Lscala/collection/mutable/Builder;)(this.(Lscala/math/Ordering;)ord);
  }
  
  public Lscala/collection/mutable/Builder; apply() {
    return this.(Lscala/collection/generic/SortedSetFactory$SortedSetCanBuildFrom;::scala$collection$generic$SortedSetFactory$SortedSetCanBuildFrom$$$outer()Lscala/collection/generic/SortedSetFactory;)().(Lscala/collection/generic/SortedSetFactory;::newBuilder(Lscala/math/Ordering;)Lscala/collection/mutable/Builder;)(this.(Lscala/math/Ordering;)ord);
  }
  
  protected Lscala/collection/generic/SortedSetFactory; $outer$u0020;
  
  public Lscala/collection/generic/SortedSetFactory; scala$collection$generic$SortedSetFactory$SortedSetCanBuildFrom$$$outer() {
    return this.(Lscala/collection/generic/SortedSetFactory;)$outer$u0020;
  }
  
  public Lscala/collection/mutable/Builder; apply(Ljava/lang/Object; from) {
    return this.(Lscala/collection/generic/SortedSetFactory$SortedSetCanBuildFrom;::apply(Lscala/collection/SortedSet;)Lscala/collection/mutable/Builder;)(from.<cast>(Lscala/collection/SortedSet;));
  }
  
  public this(Lscala/collection/generic/SortedSetFactory; $outer, Lscala/math/Ordering; ord) {
    this.(Lscala/math/Ordering;)ord = ord;
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/generic/SortedSetFactory;)$outer$u0020 = $outer;
      }
    (Ljava/lang/Object;::super()V;)();
  }
}
