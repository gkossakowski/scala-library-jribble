public abstract class Lscala/collection/generic/Subtractable$class; {
  
  public static Lscala/collection/generic/Subtractable; $minus(Lscala/collection/generic/Subtractable; $this, Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return $this.(Lscala/collection/generic/Subtractable;::$minus(Ljava/lang/Object;)Lscala/collection/generic/Subtractable;)(elem1).(Lscala/collection/generic/Subtractable;::$minus(Ljava/lang/Object;)Lscala/collection/generic/Subtractable;)(elem2).(Lscala/collection/generic/Subtractable;::$minus$minus(Lscala/collection/GenTraversableOnce;)Lscala/collection/generic/Subtractable;)(elems);
  }
  
  public static Lscala/collection/generic/Subtractable; $minus$minus(Lscala/collection/generic/Subtractable; $this, Lscala/collection/GenTraversableOnce; xs) {
    Lscala/collection/generic/Subtractable; x$1 = $this.(Lscala/collection/generic/Subtractable;::repr()Lscala/collection/generic/Subtractable;)();
    return xs.(Lscala/collection/GenTraversableOnce;::seq()Lscala/collection/TraversableOnce;)().(Lscala/collection/TraversableOnce;::$div$colon(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(x$1, (new (Lscala/collection/generic/Subtractable$$anonfun$$minus$minus$1;::this(Lscala/collection/generic/Subtractable;)V;)($this))).<cast>(Lscala/collection/generic/Subtractable;);
  }
  
  public static V; $init$(Lscala/collection/generic/Subtractable; $this) {
    
  }
}
