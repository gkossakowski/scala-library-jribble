public interface Lscala/collection/GenSetLike; extends Lscala/collection/GenIterableLike;, Lscala/Function1;, Lscala/Equals;, Lscala/collection/Parallelizable;, Lscala/ScalaObject; {
  
  public Lscala/collection/Iterator; iterator();
  
  public Z; contains(Ljava/lang/Object; elem);
  
  public Ljava/lang/Object; $plus(Ljava/lang/Object; elem);
  
  public Ljava/lang/Object; $minus(Ljava/lang/Object; elem);
  
  public Lscala/collection/Set; seq();
  
  public Z; apply(Ljava/lang/Object; elem);
  
  public Ljava/lang/Object; intersect(Lscala/collection/GenSet; that);
  
  public Ljava/lang/Object; intersect(Lscala/collection/Set; that);
  
  public Ljava/lang/Object; $amp(Lscala/collection/GenSet; that);
  
  public Ljava/lang/Object; $amp(Lscala/collection/Set; that);
  
  public Ljava/lang/Object; union(Lscala/collection/GenSet; that);
  
  public Ljava/lang/Object; $bar(Lscala/collection/GenSet; that);
  
  public Ljava/lang/Object; $bar(Lscala/collection/Set; that);
  
  public Ljava/lang/Object; diff(Lscala/collection/GenSet; that);
  
  public Ljava/lang/Object; $amp$tilde(Lscala/collection/GenSet; that);
  
  public Ljava/lang/Object; $amp$tilde(Lscala/collection/Set; that);
  
  public Z; subsetOf(Lscala/collection/GenSet; that);
  
  public Z; subsetOf(Lscala/collection/Set; that);
  
  public Z; equals(Ljava/lang/Object; that);
  
  public I; hashCode();
}
