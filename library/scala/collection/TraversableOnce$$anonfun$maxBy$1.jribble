public final class Lscala/collection/TraversableOnce$$anonfun$maxBy$1; extends Lscala/runtime/AbstractFunction2; implements Lscala/Serializable; {
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; x, Ljava/lang/Object; y) {
    Ljava/lang/Object; $7$;
    if (this.(Lscala/collection/TraversableOnce$$anonfun$maxBy$1;)cmp$2.(Lscala/math/Ordering;::gteq(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/collection/TraversableOnce$$anonfun$maxBy$1;)f$2.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(x), this.(Lscala/collection/TraversableOnce$$anonfun$maxBy$1;)f$2.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(y)))
      {
        $7$ = x;
      }
    else
      {
        $7$ = y;
      }
    return $7$;
  }
  
  private Lscala/Function1; f$2;
  
  private Lscala/math/Ordering; cmp$2;
  
  public this(Lscala/collection/TraversableOnce; $outer, Lscala/Function1; f$2, Lscala/math/Ordering; cmp$2) {
    this.(Lscala/collection/TraversableOnce$$anonfun$maxBy$1;)f$2 = f$2;
    this.(Lscala/collection/TraversableOnce$$anonfun$maxBy$1;)cmp$2 = cmp$2;
    (Lscala/runtime/AbstractFunction2;::super()V;)();
  }
}
