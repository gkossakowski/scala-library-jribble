public abstract class Lscala/collection/Traversable$class; {
  
  public static Lscala/collection/generic/GenericCompanion; companion(Lscala/collection/Traversable; $this) {
    return Lscala/collection/Traversable$;.MODULE$;
  }
  
  public static Lscala/collection/Traversable; seq(Lscala/collection/Traversable; $this) {
    return $this;
  }
  
  public static Lscala/collection/Traversable; flatten(Lscala/collection/Traversable; $this, Lscala/Function1; asTraversable) {
    return $this.(Lscala/collection/Traversable;::scala$collection$Traversable$$super$flatten(Lscala/Function1;)Lscala/collection/Traversable;)(asTraversable);
  }
  
  public static Lscala/collection/Traversable; transpose(Lscala/collection/Traversable; $this, Lscala/Function1; asTraversable) {
    return $this.(Lscala/collection/Traversable;::scala$collection$Traversable$$super$transpose(Lscala/Function1;)Lscala/collection/Traversable;)(asTraversable);
  }
  
  public static V; $init$(Lscala/collection/Traversable; $this) {
    
  }
}
