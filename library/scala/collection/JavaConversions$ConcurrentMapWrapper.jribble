public class Lscala/collection/JavaConversions$ConcurrentMapWrapper; extends Lscala/collection/JavaConversions$MutableMapWrapper; implements Ljava/util/concurrent/ConcurrentMap;, Lscala/ScalaObject; {
  
  public Lscala/collection/mutable/ConcurrentMap; underlying() {
    return super.(Lscala/collection/JavaConversions$MutableMapWrapper;::underlying()Lscala/collection/mutable/Map;)().<cast>(Lscala/collection/mutable/ConcurrentMap;);
  }
  
  public Ljava/lang/Object; putIfAbsent(Ljava/lang/Object; k, Ljava/lang/Object; v) {
    Lscala/Option; temp126 = this.(Lscala/collection/JavaConversions$ConcurrentMapWrapper;::underlying()Lscala/collection/mutable/ConcurrentMap;)().(Lscala/collection/mutable/ConcurrentMap;::putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;)(k, v);
    Ljava/lang/Object; $83$;
    if (temp126.<instanceof>(Lscala/Some;))
      {
        $83$ = temp126.<cast>(Lscala/Some;).(Lscala/Some;::x()Ljava/lang/Object;)();
      }
    else
      {
        Ljava/lang/Object; $84$;
        if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/None$;.MODULE$, temp126))
          {
            $84$ = null;
          }
        else
          {
            throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp126));
          }
        $83$ = $84$;
      }
    return $83$;
  }
  
  public Z; remove(Ljava/lang/Object; k, Ljava/lang/Object; v) {
    Z; exceptionResult4;
    try {
      exceptionResult4 = this.(Lscala/collection/JavaConversions$ConcurrentMapWrapper;::underlying()Lscala/collection/mutable/ConcurrentMap;)().(Lscala/collection/mutable/ConcurrentMap;::remove(Ljava/lang/Object;Ljava/lang/Object;)Z;)(k, v);
    } catch(Ljava/lang/ClassCastException; ex) {
      exceptionResult4 = false;
    }
    return exceptionResult4;
  }
  
  public Ljava/lang/Object; replace(Ljava/lang/Object; k, Ljava/lang/Object; v) {
    Lscala/Option; temp130 = this.(Lscala/collection/JavaConversions$ConcurrentMapWrapper;::underlying()Lscala/collection/mutable/ConcurrentMap;)().(Lscala/collection/mutable/ConcurrentMap;::replace(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;)(k, v);
    Ljava/lang/Object; $85$;
    if (temp130.<instanceof>(Lscala/Some;))
      {
        $85$ = temp130.<cast>(Lscala/Some;).(Lscala/Some;::x()Ljava/lang/Object;)();
      }
    else
      {
        Ljava/lang/Object; $86$;
        if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/None$;.MODULE$, temp130))
          {
            $86$ = null;
          }
        else
          {
            throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp130));
          }
        $85$ = $86$;
      }
    return $85$;
  }
  
  public Z; replace(Ljava/lang/Object; k, Ljava/lang/Object; oldval, Ljava/lang/Object; newval) {
    return this.(Lscala/collection/JavaConversions$ConcurrentMapWrapper;::underlying()Lscala/collection/mutable/ConcurrentMap;)().(Lscala/collection/mutable/ConcurrentMap;::replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z;)(k, oldval, newval);
  }
  
  public Lscala/collection/mutable/Map; underlying() {
    return this.(Lscala/collection/JavaConversions$ConcurrentMapWrapper;::underlying()Lscala/collection/mutable/ConcurrentMap;)();
  }
  
  public this(Lscala/collection/mutable/ConcurrentMap; underlying) {
    (Lscala/collection/JavaConversions$MutableMapWrapper;::super(Lscala/collection/mutable/Map;)V;)(underlying);
  }
}
