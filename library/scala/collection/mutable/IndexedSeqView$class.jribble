public abstract class Lscala/collection/mutable/IndexedSeqView$class; {
  
  public static Lscala/collection/mutable/IndexedSeqView$Transformed; newFiltered(Lscala/collection/mutable/IndexedSeqView; $this, Lscala/Function1; p$1) {
    return (new (Lscala/collection/mutable/IndexedSeqView$$anon$1;::this(Lscala/collection/mutable/IndexedSeqView;Lscala/Function1;)V;)($this, p$1));
  }
  
  public static Lscala/collection/mutable/IndexedSeqView$Transformed; newSliced(Lscala/collection/mutable/IndexedSeqView; $this, Lscala/collection/generic/SliceInterval; _endpoints$1) {
    return (new (Lscala/collection/mutable/IndexedSeqView$$anon$2;::this(Lscala/collection/mutable/IndexedSeqView;Lscala/collection/generic/SliceInterval;)V;)($this, _endpoints$1));
  }
  
  public static Lscala/collection/mutable/IndexedSeqView$Transformed; newDroppedWhile(Lscala/collection/mutable/IndexedSeqView; $this, Lscala/Function1; p$3) {
    return (new (Lscala/collection/mutable/IndexedSeqView$$anon$3;::this(Lscala/collection/mutable/IndexedSeqView;Lscala/Function1;)V;)($this, p$3));
  }
  
  public static Lscala/collection/mutable/IndexedSeqView$Transformed; newTakenWhile(Lscala/collection/mutable/IndexedSeqView; $this, Lscala/Function1; p$2) {
    return (new (Lscala/collection/mutable/IndexedSeqView$$anon$4;::this(Lscala/collection/mutable/IndexedSeqView;Lscala/Function1;)V;)($this, p$2));
  }
  
  public static Lscala/collection/mutable/IndexedSeqView$Transformed; newReversed(Lscala/collection/mutable/IndexedSeqView; $this) {
    return (new (Lscala/collection/mutable/IndexedSeqView$$anon$5;::this(Lscala/collection/mutable/IndexedSeqView;)V;)($this));
  }
  
  private static Lscala/collection/mutable/IndexedSeqView; asThis(Lscala/collection/mutable/IndexedSeqView; $this, Lscala/collection/mutable/IndexedSeqView$Transformed; xs) {
    return xs;
  }
  
  public static Lscala/collection/mutable/IndexedSeqView; filter(Lscala/collection/mutable/IndexedSeqView; $this, Lscala/Function1; p) {
    return $this.(Lscala/collection/mutable/IndexedSeqView;::newFiltered(Lscala/Function1;)Lscala/collection/mutable/IndexedSeqView$Transformed;)(p);
  }
  
  public static Lscala/collection/mutable/IndexedSeqView; init(Lscala/collection/mutable/IndexedSeqView; $this) {
    return $this.(Lscala/collection/mutable/IndexedSeqView;::newSliced(Lscala/collection/generic/SliceInterval;)Lscala/collection/mutable/IndexedSeqView$Transformed;)(Lscala/collection/generic/SliceInterval$;.MODULE$.(Lscala/collection/generic/SliceInterval$;::apply(I;I;)Lscala/collection/generic/SliceInterval;)(0, ($this.(Lscala/collection/SeqLike;::length()I;)() - 1)));
  }
  
  public static Lscala/collection/mutable/IndexedSeqView; drop(Lscala/collection/mutable/IndexedSeqView; $this, I; n) {
    return $this.(Lscala/collection/mutable/IndexedSeqView;::newSliced(Lscala/collection/generic/SliceInterval;)Lscala/collection/mutable/IndexedSeqView$Transformed;)(Lscala/collection/generic/SliceInterval$;.MODULE$.(Lscala/collection/generic/SliceInterval$;::apply(I;I;)Lscala/collection/generic/SliceInterval;)(n, $this.(Lscala/collection/SeqLike;::length()I;)()));
  }
  
  public static Lscala/collection/mutable/IndexedSeqView; take(Lscala/collection/mutable/IndexedSeqView; $this, I; n) {
    return $this.(Lscala/collection/mutable/IndexedSeqView;::newSliced(Lscala/collection/generic/SliceInterval;)Lscala/collection/mutable/IndexedSeqView$Transformed;)(Lscala/collection/generic/SliceInterval$;.MODULE$.(Lscala/collection/generic/SliceInterval$;::apply(I;I;)Lscala/collection/generic/SliceInterval;)(0, Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::intWrapper(I;)Lscala/runtime/RichInt;)(n).(Lscala/runtime/RichInt;::min(I;)I;)($this.(Lscala/collection/SeqLike;::length()I;)())));
  }
  
  public static Lscala/collection/mutable/IndexedSeqView; slice(Lscala/collection/mutable/IndexedSeqView; $this, I; from, I; until) {
    return $this.(Lscala/collection/mutable/IndexedSeqView;::newSliced(Lscala/collection/generic/SliceInterval;)Lscala/collection/mutable/IndexedSeqView$Transformed;)(Lscala/collection/generic/SliceInterval$;.MODULE$.(Lscala/collection/generic/SliceInterval$;::apply(I;I;)Lscala/collection/generic/SliceInterval;)(from, Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::intWrapper(I;)Lscala/runtime/RichInt;)(until).(Lscala/runtime/RichInt;::min(I;)I;)($this.(Lscala/collection/SeqLike;::length()I;)())));
  }
  
  public static Lscala/collection/mutable/IndexedSeqView; dropWhile(Lscala/collection/mutable/IndexedSeqView; $this, Lscala/Function1; p) {
    return $this.(Lscala/collection/mutable/IndexedSeqView;::newDroppedWhile(Lscala/Function1;)Lscala/collection/mutable/IndexedSeqView$Transformed;)(p);
  }
  
  public static Lscala/collection/mutable/IndexedSeqView; takeWhile(Lscala/collection/mutable/IndexedSeqView; $this, Lscala/Function1; p) {
    return $this.(Lscala/collection/mutable/IndexedSeqView;::newTakenWhile(Lscala/Function1;)Lscala/collection/mutable/IndexedSeqView$Transformed;)(p);
  }
  
  public static Lscala/Tuple2; span(Lscala/collection/mutable/IndexedSeqView; $this, Lscala/Function1; p) {
    return (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)($this.(Lscala/collection/mutable/IndexedSeqView;::newTakenWhile(Lscala/Function1;)Lscala/collection/mutable/IndexedSeqView$Transformed;)(p), $this.(Lscala/collection/mutable/IndexedSeqView;::newDroppedWhile(Lscala/Function1;)Lscala/collection/mutable/IndexedSeqView$Transformed;)(p)));
  }
  
  public static Lscala/Tuple2; splitAt(Lscala/collection/mutable/IndexedSeqView; $this, I; n) {
    return (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)($this.(Lscala/collection/mutable/IndexedSeqView;::take(I;)Lscala/collection/mutable/IndexedSeqView;)(n), $this.(Lscala/collection/mutable/IndexedSeqView;::drop(I;)Lscala/collection/mutable/IndexedSeqView;)(n)));
  }
  
  public static Lscala/collection/mutable/IndexedSeqView; reverse(Lscala/collection/mutable/IndexedSeqView; $this) {
    return $this.(Lscala/collection/mutable/IndexedSeqView;::newReversed()Lscala/collection/mutable/IndexedSeqView$Transformed;)();
  }
  
  public static V; $init$(Lscala/collection/mutable/IndexedSeqView; $this) {
    
  }
}
