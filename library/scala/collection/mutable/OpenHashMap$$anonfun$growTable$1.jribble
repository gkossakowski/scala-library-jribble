public final class Lscala/collection/mutable/OpenHashMap$$anonfun$growTable$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final V; apply(Lscala/collection/mutable/OpenHashMap$OpenEntry; entry) {
    if (((entry != null) && (entry.(Lscala/collection/mutable/OpenHashMap$OpenEntry;::value()Lscala/Option;)() != Lscala/None$;.MODULE$)))
      {
        this.(Lscala/collection/mutable/OpenHashMap$$anonfun$growTable$1;)$outer$u0020.(Lscala/collection/mutable/OpenHashMap;::scala$collection$mutable$OpenHashMap$$addEntry(Lscala/collection/mutable/OpenHashMap$OpenEntry;)V;)(entry);
      }
    else
      {
        
      }
  }
  
  private Lscala/collection/mutable/OpenHashMap; $outer$u0020;
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    this.(Lscala/collection/mutable/OpenHashMap$$anonfun$growTable$1;::apply(Lscala/collection/mutable/OpenHashMap$OpenEntry;)V;)(v1.<cast>(Lscala/collection/mutable/OpenHashMap$OpenEntry;));
    return Lscala/runtime/BoxedUnit;.UNIT;
  }
  
  public this(Lscala/collection/mutable/OpenHashMap; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/mutable/OpenHashMap$$anonfun$growTable$1;)$outer$u0020 = $outer;
      }
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
