public final class Lscala/collection/mutable/OpenHashMap$; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  public static Lscala/collection/mutable/OpenHashMap$; MODULE$ = new (Lscala/collection/mutable/OpenHashMap$;::this()V;)();
  
  public Lscala/collection/mutable/OpenHashMap; apply(Lscala/collection/Seq; elems) {
    return (new (Lscala/collection/mutable/OpenHashMap;::this()V;)()).(Lscala/collection/generic/Growable;::$plus$plus$eq(Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;)(elems).<cast>(Lscala/collection/mutable/OpenHashMap;);
  }
  
  public Lscala/collection/mutable/OpenHashMap; empty() {
    return (new (Lscala/collection/mutable/OpenHashMap;::this()V;)());
  }
  
  public I; nextPowerOfTwo(I; i) {
    return (Lscala/collection/generic/BitOperations$Int$;.MODULE$.(Lscala/collection/generic/BitOperations$Int;::highestOneBit(I;)I;)(i) << 1);
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
