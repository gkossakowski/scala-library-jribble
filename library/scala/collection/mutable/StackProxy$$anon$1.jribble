public final class Lscala/collection/mutable/StackProxy$$anon$1; extends Lscala/collection/mutable/Stack; implements Lscala/collection/mutable/StackProxy; {
  
  public Ljava/lang/Object; apply(I; n) {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::apply(Lscala/collection/mutable/StackProxy;I;)Ljava/lang/Object;)(this, n);
  }
  
  public I; length() {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::length(Lscala/collection/mutable/StackProxy;)I;)(this);
  }
  
  public Z; isEmpty() {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::isEmpty(Lscala/collection/mutable/StackProxy;)Z;)(this);
  }
  
  public Lscala/collection/mutable/StackProxy; $plus$eq(Ljava/lang/Object; elem) {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::$plus$eq(Lscala/collection/mutable/StackProxy;Ljava/lang/Object;)Lscala/collection/mutable/StackProxy;)(this, elem);
  }
  
  public Lscala/collection/mutable/StackProxy; pushAll(Lscala/collection/TraversableOnce; xs) {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::pushAll(Lscala/collection/mutable/StackProxy;Lscala/collection/TraversableOnce;)Lscala/collection/mutable/StackProxy;)(this, xs);
  }
  
  public Lscala/collection/mutable/StackProxy; $plus$plus$eq(Lscala/collection/TraversableOnce; xs) {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::$plus$plus$eq(Lscala/collection/mutable/StackProxy;Lscala/collection/TraversableOnce;)Lscala/collection/mutable/StackProxy;)(this, xs);
  }
  
  public Lscala/collection/mutable/StackProxy; push(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::push(Lscala/collection/mutable/StackProxy;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/StackProxy;)(this, elem1, elem2, elems);
  }
  
  public Ljava/lang/Object; top() {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::top(Lscala/collection/mutable/StackProxy;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; pop() {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::pop(Lscala/collection/mutable/StackProxy;)Ljava/lang/Object;)(this);
  }
  
  public V; clear() {
    Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::clear(Lscala/collection/mutable/StackProxy;)V;)(this);
  }
  
  public Lscala/collection/Iterator; iterator() {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::iterator(Lscala/collection/mutable/StackProxy;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/immutable/List; toList() {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::toList(Lscala/collection/mutable/StackProxy;)Lscala/collection/immutable/List;)(this);
  }
  
  public Lscala/collection/mutable/Stack; clone() {
    return Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::clone(Lscala/collection/mutable/StackProxy;)Lscala/collection/mutable/Stack;)(this);
  }
  
  public I; hashCode() {
    return Lscala/Proxy$class;.(Lscala/Proxy$class;::hashCode(Lscala/Proxy;)I;)(this);
  }
  
  public Z; equals(Ljava/lang/Object; that) {
    return Lscala/Proxy$class;.(Lscala/Proxy$class;::equals(Lscala/Proxy;Ljava/lang/Object;)Z;)(this, that);
  }
  
  public Ljava/lang/String; toString() {
    return Lscala/Proxy$class;.(Lscala/Proxy$class;::toString(Lscala/Proxy;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/mutable/Stack; self() {
    return this.(Lscala/collection/mutable/StackProxy;)$outer$u0020.(Lscala/collection/mutable/StackProxy;::self()Lscala/collection/mutable/Stack;)().(Lscala/collection/mutable/Stack;::clone()Lscala/collection/mutable/Stack;)();
  }
  
  private Lscala/collection/mutable/StackProxy; $outer$u0020;
  
  public Ljava/lang/Object; clone() {
    return this.(Lscala/collection/mutable/StackProxy;::clone()Lscala/collection/mutable/Stack;)();
  }
  
  public Lscala/collection/mutable/Stack; push(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return this.(Lscala/collection/mutable/StackProxy;::push(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/StackProxy;)(elem1, elem2, elems).<cast>(Lscala/collection/mutable/Stack;);
  }
  
  public Lscala/collection/mutable/Stack; $plus$plus$eq(Lscala/collection/TraversableOnce; xs) {
    return this.(Lscala/collection/mutable/StackProxy;::$plus$plus$eq(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/StackProxy;)(xs).<cast>(Lscala/collection/mutable/Stack;);
  }
  
  public Lscala/collection/mutable/Stack; pushAll(Lscala/collection/TraversableOnce; xs) {
    return this.(Lscala/collection/mutable/StackProxy;::pushAll(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/StackProxy;)(xs).<cast>(Lscala/collection/mutable/Stack;);
  }
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/collection/mutable/StackProxy;::apply(I;)Ljava/lang/Object;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v1));
  }
  
  public Ljava/lang/Object; self() {
    return this.(Lscala/collection/mutable/StackProxy$$anon$1;::self()Lscala/collection/mutable/Stack;)();
  }
  
  public this(Lscala/collection/mutable/StackProxy; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/mutable/StackProxy;)$outer$u0020 = $outer;
      }
    (Lscala/collection/mutable/Stack;::super()V;)();
    Lscala/Proxy$class;.(Lscala/Proxy$class;::$init$(Lscala/Proxy;)V;)(this);
    Lscala/collection/mutable/StackProxy$class;.(Lscala/collection/mutable/StackProxy$class;::$init$(Lscala/collection/mutable/StackProxy;)V;)(this);
  }
}
