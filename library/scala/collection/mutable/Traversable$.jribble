public final class Lscala/collection/mutable/Traversable$; extends Lscala/collection/generic/GenTraversableFactory; implements Lscala/collection/generic/TraversableFactory;, Lscala/ScalaObject; {
  public static Lscala/collection/mutable/Traversable$; MODULE$ = new (Lscala/collection/mutable/Traversable$;::this()V;)();
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$concat(Lscala/collection/Seq; xss) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::concat(Lscala/collection/Seq;)Lscala/collection/GenTraversable;)(xss).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$fill(I; n, Lscala/Function0; elem) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::fill(I;Lscala/Function0;)Lscala/collection/GenTraversable;)(n, elem).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$fill(I; n1, I; n2, Lscala/Function0; elem) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::fill(I;I;Lscala/Function0;)Lscala/collection/GenTraversable;)(n1, n2, elem).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$fill(I; n1, I; n2, I; n3, Lscala/Function0; elem) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::fill(I;I;I;Lscala/Function0;)Lscala/collection/GenTraversable;)(n1, n2, n3, elem).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$fill(I; n1, I; n2, I; n3, I; n4, Lscala/Function0; elem) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::fill(I;I;I;I;Lscala/Function0;)Lscala/collection/GenTraversable;)(n1, n2, n3, n4, elem).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$fill(I; n1, I; n2, I; n3, I; n4, I; n5, Lscala/Function0; elem) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::fill(I;I;I;I;I;Lscala/Function0;)Lscala/collection/GenTraversable;)(n1, n2, n3, n4, n5, elem).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$tabulate(I; n, Lscala/Function1; f) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;Lscala/Function1;)Lscala/collection/GenTraversable;)(n, f).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$tabulate(I; n1, I; n2, Lscala/Function2; f) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;I;Lscala/Function2;)Lscala/collection/GenTraversable;)(n1, n2, f).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$tabulate(I; n1, I; n2, I; n3, Lscala/Function3; f) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;I;I;Lscala/Function3;)Lscala/collection/GenTraversable;)(n1, n2, n3, f).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$tabulate(I; n1, I; n2, I; n3, I; n4, Lscala/Function4; f) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;I;I;I;Lscala/Function4;)Lscala/collection/GenTraversable;)(n1, n2, n3, n4, f).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$tabulate(I; n1, I; n2, I; n3, I; n4, I; n5, Lscala/Function5; f) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;I;I;I;I;Lscala/Function5;)Lscala/collection/GenTraversable;)(n1, n2, n3, n4, n5, f).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$range(Ljava/lang/Object; start, Ljava/lang/Object; end, Lscala/math/Integral; evidence$1) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::range(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/GenTraversable;)(start, end, evidence$1).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$range(Ljava/lang/Object; start, Ljava/lang/Object; end, Ljava/lang/Object; step, Lscala/math/Integral; evidence$2) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::range(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/GenTraversable;)(start, end, step, evidence$2).<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$TraversableFactory$$super$iterate(Ljava/lang/Object; start, I; len, Lscala/Function1; f) {
    return super.(Lscala/collection/generic/GenTraversableFactory;::iterate(Ljava/lang/Object;I;Lscala/Function1;)Lscala/collection/GenTraversable;)(start, len, f).<cast>(Lscala/collection/Traversable;);
  }
  
  public Lscala/collection/Traversable; concat(Lscala/collection/Seq; xss) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::concat(Lscala/collection/generic/TraversableFactory;Lscala/collection/Seq;)Lscala/collection/Traversable;)(this, xss);
  }
  
  public Lscala/collection/Traversable; fill(I; n, Lscala/Function0; elem) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::fill(Lscala/collection/generic/TraversableFactory;I;Lscala/Function0;)Lscala/collection/Traversable;)(this, n, elem);
  }
  
  public Lscala/collection/Traversable; fill(I; n1, I; n2, Lscala/Function0; elem) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::fill(Lscala/collection/generic/TraversableFactory;I;I;Lscala/Function0;)Lscala/collection/Traversable;)(this, n1, n2, elem);
  }
  
  public Lscala/collection/Traversable; fill(I; n1, I; n2, I; n3, Lscala/Function0; elem) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::fill(Lscala/collection/generic/TraversableFactory;I;I;I;Lscala/Function0;)Lscala/collection/Traversable;)(this, n1, n2, n3, elem);
  }
  
  public Lscala/collection/Traversable; fill(I; n1, I; n2, I; n3, I; n4, Lscala/Function0; elem) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::fill(Lscala/collection/generic/TraversableFactory;I;I;I;I;Lscala/Function0;)Lscala/collection/Traversable;)(this, n1, n2, n3, n4, elem);
  }
  
  public Lscala/collection/Traversable; fill(I; n1, I; n2, I; n3, I; n4, I; n5, Lscala/Function0; elem) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::fill(Lscala/collection/generic/TraversableFactory;I;I;I;I;I;Lscala/Function0;)Lscala/collection/Traversable;)(this, n1, n2, n3, n4, n5, elem);
  }
  
  public Lscala/collection/Traversable; tabulate(I; n, Lscala/Function1; f) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::tabulate(Lscala/collection/generic/TraversableFactory;I;Lscala/Function1;)Lscala/collection/Traversable;)(this, n, f);
  }
  
  public Lscala/collection/Traversable; tabulate(I; n1, I; n2, Lscala/Function2; f) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::tabulate(Lscala/collection/generic/TraversableFactory;I;I;Lscala/Function2;)Lscala/collection/Traversable;)(this, n1, n2, f);
  }
  
  public Lscala/collection/Traversable; tabulate(I; n1, I; n2, I; n3, Lscala/Function3; f) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::tabulate(Lscala/collection/generic/TraversableFactory;I;I;I;Lscala/Function3;)Lscala/collection/Traversable;)(this, n1, n2, n3, f);
  }
  
  public Lscala/collection/Traversable; tabulate(I; n1, I; n2, I; n3, I; n4, Lscala/Function4; f) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::tabulate(Lscala/collection/generic/TraversableFactory;I;I;I;I;Lscala/Function4;)Lscala/collection/Traversable;)(this, n1, n2, n3, n4, f);
  }
  
  public Lscala/collection/Traversable; tabulate(I; n1, I; n2, I; n3, I; n4, I; n5, Lscala/Function5; f) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::tabulate(Lscala/collection/generic/TraversableFactory;I;I;I;I;I;Lscala/Function5;)Lscala/collection/Traversable;)(this, n1, n2, n3, n4, n5, f);
  }
  
  public Lscala/collection/Traversable; range(Ljava/lang/Object; start, Ljava/lang/Object; end, Lscala/math/Integral; evidence$1) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::range(Lscala/collection/generic/TraversableFactory;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/Traversable;)(this, start, end, evidence$1);
  }
  
  public Lscala/collection/Traversable; range(Ljava/lang/Object; start, Ljava/lang/Object; end, Ljava/lang/Object; step, Lscala/math/Integral; evidence$2) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::range(Lscala/collection/generic/TraversableFactory;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/Traversable;)(this, start, end, step, evidence$2);
  }
  
  public Lscala/collection/Traversable; iterate(Ljava/lang/Object; start, I; len, Lscala/Function1; f) {
    return Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::iterate(Lscala/collection/generic/TraversableFactory;Ljava/lang/Object;I;Lscala/Function1;)Lscala/collection/Traversable;)(this, start, len, f);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$GenericSeqCompanion$$super$empty() {
    return super.(Lscala/collection/generic/GenericCompanion;::empty()Lscala/collection/GenTraversable;)().<cast>(Lscala/collection/Traversable;);
  }
  
  public final Lscala/collection/Traversable; scala$collection$generic$GenericSeqCompanion$$super$apply(Lscala/collection/Seq; elems) {
    return super.(Lscala/collection/generic/GenericCompanion;::apply(Lscala/collection/Seq;)Lscala/collection/GenTraversable;)(elems).<cast>(Lscala/collection/Traversable;);
  }
  
  public Lscala/collection/Traversable; empty() {
    return Lscala/collection/generic/GenericSeqCompanion$class;.(Lscala/collection/generic/GenericSeqCompanion$class;::empty(Lscala/collection/generic/GenericSeqCompanion;)Lscala/collection/Traversable;)(this);
  }
  
  public Lscala/collection/Traversable; apply(Lscala/collection/Seq; elems) {
    return Lscala/collection/generic/GenericSeqCompanion$class;.(Lscala/collection/generic/GenericSeqCompanion$class;::apply(Lscala/collection/generic/GenericSeqCompanion;Lscala/collection/Seq;)Lscala/collection/Traversable;)(this, elems);
  }
  
  public Lscala/collection/generic/CanBuildFrom; canBuildFrom() {
    return this.(Lscala/collection/generic/GenTraversableFactory;::ReusableCBF()Lscala/collection/generic/GenTraversableFactory$ReusableCBF$;)();
  }
  
  public Lscala/collection/mutable/Builder; newBuilder() {
    return (new (Lscala/collection/mutable/ArrayBuffer;::this()V;)());
  }
  
  public this() {
    (Lscala/collection/generic/GenTraversableFactory;::super()V;)();
    Lscala/collection/generic/GenericSeqCompanion$class;.(Lscala/collection/generic/GenericSeqCompanion$class;::$init$(Lscala/collection/generic/GenericSeqCompanion;)V;)(this);
    Lscala/collection/generic/TraversableFactory$class;.(Lscala/collection/generic/TraversableFactory$class;::$init$(Lscala/collection/generic/TraversableFactory;)V;)(this);
  }
}
