public final class Lscala/collection/mutable/ListBuffer; extends Ljava/lang/Object; implements Lscala/collection/mutable/Buffer;, Lscala/collection/generic/GenericTraversableTemplate;, Lscala/collection/mutable/BufferLike;, Lscala/collection/mutable/Builder;, Lscala/collection/generic/SeqForwarder;, Lscala/Serializable;, Lscala/ScalaObject; {
  public final static Lscala/collection/generic/CanBuildFrom; canBuildFrom() { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/mutable/ListBuffer$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)(); }
  public final static Lscala/Some; unapplySeq(Lscala/collection/Seq; x_0) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/SeqFactory;::unapplySeq(Lscala/collection/Seq;)Lscala/Some;)(x_0); }
  public final static Lscala/collection/GenTraversable; iterate(Ljava/lang/Object; x_0, I; x_1, Lscala/Function1; x_2) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::iterate(Ljava/lang/Object;I;Lscala/Function1;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2); }
  public final static Lscala/collection/GenTraversable; range(Ljava/lang/Object; x_0, Ljava/lang/Object; x_1, Ljava/lang/Object; x_2, Lscala/math/Integral; x_3) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::range(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2, x_3); }
  public final static Lscala/collection/GenTraversable; range(Ljava/lang/Object; x_0, Ljava/lang/Object; x_1, Lscala/math/Integral; x_2) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::range(Ljava/lang/Object;Ljava/lang/Object;Lscala/math/Integral;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2); }
  public final static Lscala/collection/GenTraversable; tabulate(I; x_0, I; x_1, I; x_2, I; x_3, I; x_4, Lscala/Function5; x_5) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;I;I;I;I;Lscala/Function5;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2, x_3, x_4, x_5); }
  public final static Lscala/collection/GenTraversable; tabulate(I; x_0, I; x_1, I; x_2, I; x_3, Lscala/Function4; x_4) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;I;I;I;Lscala/Function4;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2, x_3, x_4); }
  public final static Lscala/collection/GenTraversable; tabulate(I; x_0, I; x_1, I; x_2, Lscala/Function3; x_3) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;I;I;Lscala/Function3;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2, x_3); }
  public final static Lscala/collection/GenTraversable; tabulate(I; x_0, I; x_1, Lscala/Function2; x_2) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;I;Lscala/Function2;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2); }
  public final static Lscala/collection/GenTraversable; tabulate(I; x_0, Lscala/Function1; x_1) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::tabulate(I;Lscala/Function1;)Lscala/collection/GenTraversable;)(x_0, x_1); }
  public final static Lscala/collection/GenTraversable; fill(I; x_0, I; x_1, I; x_2, I; x_3, I; x_4, Lscala/Function0; x_5) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::fill(I;I;I;I;I;Lscala/Function0;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2, x_3, x_4, x_5); }
  public final static Lscala/collection/GenTraversable; fill(I; x_0, I; x_1, I; x_2, I; x_3, Lscala/Function0; x_4) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::fill(I;I;I;I;Lscala/Function0;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2, x_3, x_4); }
  public final static Lscala/collection/GenTraversable; fill(I; x_0, I; x_1, I; x_2, Lscala/Function0; x_3) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::fill(I;I;I;Lscala/Function0;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2, x_3); }
  public final static Lscala/collection/GenTraversable; fill(I; x_0, I; x_1, Lscala/Function0; x_2) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::fill(I;I;Lscala/Function0;)Lscala/collection/GenTraversable;)(x_0, x_1, x_2); }
  public final static Lscala/collection/GenTraversable; fill(I; x_0, Lscala/Function0; x_1) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::fill(I;Lscala/Function0;)Lscala/collection/GenTraversable;)(x_0, x_1); }
  public final static Lscala/collection/GenTraversable; concat(Lscala/collection/Seq; x_0) { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::concat(Lscala/collection/Seq;)Lscala/collection/GenTraversable;)(x_0); }
  public final static Lscala/collection/generic/GenTraversableFactory$reusableCBF; ReusableCBF() { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenTraversableFactory;::ReusableCBF()Lscala/collection/generic/GenTraversableFactory$reusableCBF;)(); }
  public final static Lscala/collection/GenTraversable; empty() { return Lscala/collection/mutable/ListBuffer$;.MODULE$.(Lscala/collection/generic/GenericCompanion;::empty()Lscala/collection/GenTraversable;)(); }
  
  
  public I; lengthCompare(I; len) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::lengthCompare(Lscala/collection/generic/SeqForwarder;I;)I;)(this, len);
  }
  
  public Z; isDefinedAt(I; x) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::isDefinedAt(Lscala/collection/generic/SeqForwarder;I;)Z;)(this, x);
  }
  
  public I; segmentLength(Lscala/Function1; p, I; from) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::segmentLength(Lscala/collection/generic/SeqForwarder;Lscala/Function1;I;)I;)(this, p, from);
  }
  
  public I; prefixLength(Lscala/Function1; p) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::prefixLength(Lscala/collection/generic/SeqForwarder;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexWhere(Lscala/Function1; p) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::indexWhere(Lscala/collection/generic/SeqForwarder;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexWhere(Lscala/Function1; p, I; from) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::indexWhere(Lscala/collection/generic/SeqForwarder;Lscala/Function1;I;)I;)(this, p, from);
  }
  
  public I; findIndexOf(Lscala/Function1; p) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::findIndexOf(Lscala/collection/generic/SeqForwarder;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexOf(Ljava/lang/Object; elem) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::indexOf(Lscala/collection/generic/SeqForwarder;Ljava/lang/Object;)I;)(this, elem);
  }
  
  public I; indexOf(Ljava/lang/Object; elem, I; from) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::indexOf(Lscala/collection/generic/SeqForwarder;Ljava/lang/Object;I;)I;)(this, elem, from);
  }
  
  public I; lastIndexOf(Ljava/lang/Object; elem) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::lastIndexOf(Lscala/collection/generic/SeqForwarder;Ljava/lang/Object;)I;)(this, elem);
  }
  
  public I; lastIndexOf(Ljava/lang/Object; elem, I; end) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::lastIndexOf(Lscala/collection/generic/SeqForwarder;Ljava/lang/Object;I;)I;)(this, elem, end);
  }
  
  public I; lastIndexWhere(Lscala/Function1; p) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::lastIndexWhere(Lscala/collection/generic/SeqForwarder;Lscala/Function1;)I;)(this, p);
  }
  
  public I; lastIndexWhere(Lscala/Function1; p, I; end) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::lastIndexWhere(Lscala/collection/generic/SeqForwarder;Lscala/Function1;I;)I;)(this, p, end);
  }
  
  public Lscala/collection/Iterator; reverseIterator() {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::reverseIterator(Lscala/collection/generic/SeqForwarder;)Lscala/collection/Iterator;)(this);
  }
  
  public Z; startsWith(Lscala/collection/GenSeq; that, I; offset) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::startsWith(Lscala/collection/generic/SeqForwarder;Lscala/collection/GenSeq;I;)Z;)(this, that, offset);
  }
  
  public Z; startsWith(Lscala/collection/GenSeq; that) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::startsWith(Lscala/collection/generic/SeqForwarder;Lscala/collection/GenSeq;)Z;)(this, that);
  }
  
  public Z; endsWith(Lscala/collection/GenSeq; that) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::endsWith(Lscala/collection/generic/SeqForwarder;Lscala/collection/GenSeq;)Z;)(this, that);
  }
  
  public I; indexOfSlice(Lscala/collection/GenSeq; that) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::indexOfSlice(Lscala/collection/generic/SeqForwarder;Lscala/collection/GenSeq;)I;)(this, that);
  }
  
  public I; indexOfSlice(Lscala/collection/GenSeq; that, I; from) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::indexOfSlice(Lscala/collection/generic/SeqForwarder;Lscala/collection/GenSeq;I;)I;)(this, that, from);
  }
  
  public I; lastIndexOfSlice(Lscala/collection/GenSeq; that) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::lastIndexOfSlice(Lscala/collection/generic/SeqForwarder;Lscala/collection/GenSeq;)I;)(this, that);
  }
  
  public I; lastIndexOfSlice(Lscala/collection/GenSeq; that, I; end) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::lastIndexOfSlice(Lscala/collection/generic/SeqForwarder;Lscala/collection/GenSeq;I;)I;)(this, that, end);
  }
  
  public Z; containsSlice(Lscala/collection/GenSeq; that) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::containsSlice(Lscala/collection/generic/SeqForwarder;Lscala/collection/GenSeq;)Z;)(this, that);
  }
  
  public Z; contains(Ljava/lang/Object; elem) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::contains(Lscala/collection/generic/SeqForwarder;Ljava/lang/Object;)Z;)(this, elem);
  }
  
  public Z; corresponds(Lscala/collection/GenSeq; that, Lscala/Function2; p) {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::corresponds(Lscala/collection/generic/SeqForwarder;Lscala/collection/GenSeq;Lscala/Function2;)Z;)(this, that, p);
  }
  
  public Lscala/collection/immutable/Range; indices() {
    return Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::indices(Lscala/collection/generic/SeqForwarder;)Lscala/collection/immutable/Range;)(this);
  }
  
  public Z; sameElements(Lscala/collection/GenIterable; that) {
    return Lscala/collection/generic/IterableForwarder$class;.(Lscala/collection/generic/IterableForwarder$class;::sameElements(Lscala/collection/generic/IterableForwarder;Lscala/collection/GenIterable;)Z;)(this, that);
  }
  
  public V; foreach(Lscala/Function1; f) {
    Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::foreach(Lscala/collection/generic/TraversableForwarder;Lscala/Function1;)V;)(this, f);
  }
  
  public Z; isEmpty() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::isEmpty(Lscala/collection/generic/TraversableForwarder;)Z;)(this);
  }
  
  public Z; nonEmpty() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::nonEmpty(Lscala/collection/generic/TraversableForwarder;)Z;)(this);
  }
  
  public I; size() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::size(Lscala/collection/generic/TraversableForwarder;)I;)(this);
  }
  
  public Z; hasDefiniteSize() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::hasDefiniteSize(Lscala/collection/generic/TraversableForwarder;)Z;)(this);
  }
  
  public Z; forall(Lscala/Function1; p) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::forall(Lscala/collection/generic/TraversableForwarder;Lscala/Function1;)Z;)(this, p);
  }
  
  public Z; exists(Lscala/Function1; p) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::exists(Lscala/collection/generic/TraversableForwarder;Lscala/Function1;)Z;)(this, p);
  }
  
  public I; count(Lscala/Function1; p) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::count(Lscala/collection/generic/TraversableForwarder;Lscala/Function1;)I;)(this, p);
  }
  
  public Lscala/Option; find(Lscala/Function1; p) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::find(Lscala/collection/generic/TraversableForwarder;Lscala/Function1;)Lscala/Option;)(this, p);
  }
  
  public Ljava/lang/Object; foldLeft(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::foldLeft(Lscala/collection/generic/TraversableForwarder;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; $div$colon(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::$div$colon(Lscala/collection/generic/TraversableForwarder;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; foldRight(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::foldRight(Lscala/collection/generic/TraversableForwarder;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; $colon$bslash(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::$colon$bslash(Lscala/collection/generic/TraversableForwarder;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; reduceLeft(Lscala/Function2; op) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::reduceLeft(Lscala/collection/generic/TraversableForwarder;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Lscala/Option; reduceLeftOption(Lscala/Function2; op) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::reduceLeftOption(Lscala/collection/generic/TraversableForwarder;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Ljava/lang/Object; reduceRight(Lscala/Function2; op) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::reduceRight(Lscala/collection/generic/TraversableForwarder;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Lscala/Option; reduceRightOption(Lscala/Function2; op) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::reduceRightOption(Lscala/collection/generic/TraversableForwarder;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Ljava/lang/Object; sum(Lscala/math/Numeric; num) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::sum(Lscala/collection/generic/TraversableForwarder;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; product(Lscala/math/Numeric; num) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::product(Lscala/collection/generic/TraversableForwarder;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; min(Lscala/math/Ordering; cmp) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::min(Lscala/collection/generic/TraversableForwarder;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public Ljava/lang/Object; max(Lscala/math/Ordering; cmp) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::max(Lscala/collection/generic/TraversableForwarder;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public Ljava/lang/Object; head() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::head(Lscala/collection/generic/TraversableForwarder;)Ljava/lang/Object;)(this);
  }
  
  public Lscala/Option; headOption() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::headOption(Lscala/collection/generic/TraversableForwarder;)Lscala/Option;)(this);
  }
  
  public Ljava/lang/Object; last() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::last(Lscala/collection/generic/TraversableForwarder;)Ljava/lang/Object;)(this);
  }
  
  public Lscala/Option; lastOption() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::lastOption(Lscala/collection/generic/TraversableForwarder;)Lscala/Option;)(this);
  }
  
  public V; copyToBuffer(Lscala/collection/mutable/Buffer; dest) {
    Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::copyToBuffer(Lscala/collection/generic/TraversableForwarder;Lscala/collection/mutable/Buffer;)V;)(this, dest);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start, I; len) {
    Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::copyToArray(Lscala/collection/generic/TraversableForwarder;Ljava/lang/Object;I;I;)V;)(this, xs, start, len);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start) {
    Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::copyToArray(Lscala/collection/generic/TraversableForwarder;Ljava/lang/Object;I;)V;)(this, xs, start);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs) {
    Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::copyToArray(Lscala/collection/generic/TraversableForwarder;Ljava/lang/Object;)V;)(this, xs);
  }
  
  public Ljava/lang/Object; toArray(Lscala/reflect/ClassManifest; evidence$1) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::toArray(Lscala/collection/generic/TraversableForwarder;Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(this, evidence$1);
  }
  
  public Lscala/collection/Iterable; toIterable() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::toIterable(Lscala/collection/generic/TraversableForwarder;)Lscala/collection/Iterable;)(this);
  }
  
  public Lscala/collection/Seq; toSeq() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::toSeq(Lscala/collection/generic/TraversableForwarder;)Lscala/collection/Seq;)(this);
  }
  
  public Lscala/collection/immutable/IndexedSeq; toIndexedSeq() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::toIndexedSeq(Lscala/collection/generic/TraversableForwarder;)Lscala/collection/immutable/IndexedSeq;)(this);
  }
  
  public Lscala/collection/mutable/Buffer; toBuffer() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::toBuffer(Lscala/collection/generic/TraversableForwarder;)Lscala/collection/mutable/Buffer;)(this);
  }
  
  public Lscala/collection/immutable/Stream; toStream() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::toStream(Lscala/collection/generic/TraversableForwarder;)Lscala/collection/immutable/Stream;)(this);
  }
  
  public Lscala/collection/immutable/Set; toSet() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::toSet(Lscala/collection/generic/TraversableForwarder;)Lscala/collection/immutable/Set;)(this);
  }
  
  public Lscala/collection/immutable/Map; toMap(Lscala/Predef$$less$colon$less; ev) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::toMap(Lscala/collection/generic/TraversableForwarder;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(this, ev);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::mkString(Lscala/collection/generic/TraversableForwarder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)(this, start, sep, end);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; sep) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::mkString(Lscala/collection/generic/TraversableForwarder;Ljava/lang/String;)Ljava/lang/String;)(this, sep);
  }
  
  public Ljava/lang/String; mkString() {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::mkString(Lscala/collection/generic/TraversableForwarder;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::addString(Lscala/collection/generic/TraversableForwarder;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, start, sep, end);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; sep) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::addString(Lscala/collection/generic/TraversableForwarder;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, sep);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b) {
    return Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::addString(Lscala/collection/generic/TraversableForwarder;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(this, b);
  }
  
  public V; sizeHint(I; size) {
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHint(Lscala/collection/mutable/Builder;I;)V;)(this, size);
  }
  
  public V; sizeHint(Lscala/collection/TraversableLike; coll, I; delta) {
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHint(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I;)V;)(this, coll, delta);
  }
  
  public V; sizeHintBounded(I; size, Lscala/collection/TraversableLike; boundingColl) {
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHintBounded(Lscala/collection/mutable/Builder;I;Lscala/collection/TraversableLike;)V;)(this, size, boundingColl);
  }
  
  public Lscala/collection/mutable/Builder; mapResult(Lscala/Function1; f) {
    return Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::mapResult(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;)(this, f);
  }
  
  public I; sizeHint$default$2() {
    return Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHint$default$2(Lscala/collection/mutable/Builder;)I;)(this);
  }
  
  public V; append(Lscala/collection/Seq; elems) {
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::append(Lscala/collection/mutable/Buffer;Lscala/collection/Seq;)V;)(this, elems);
  }
  
  public V; appendAll(Lscala/collection/TraversableOnce; xs) {
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::appendAll(Lscala/collection/mutable/Buffer;Lscala/collection/TraversableOnce;)V;)(this, xs);
  }
  
  public V; prepend(Lscala/collection/Seq; elems) {
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::prepend(Lscala/collection/mutable/Buffer;Lscala/collection/Seq;)V;)(this, elems);
  }
  
  public V; prependAll(Lscala/collection/TraversableOnce; xs) {
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::prependAll(Lscala/collection/mutable/Buffer;Lscala/collection/TraversableOnce;)V;)(this, xs);
  }
  
  public V; insert(I; n, Lscala/collection/Seq; elems) {
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::insert(Lscala/collection/mutable/Buffer;I;Lscala/collection/Seq;)V;)(this, n, elems);
  }
  
  public V; trimStart(I; n) {
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::trimStart(Lscala/collection/mutable/Buffer;I;)V;)(this, n);
  }
  
  public V; trimEnd(I; n) {
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::trimEnd(Lscala/collection/mutable/Buffer;I;)V;)(this, n);
  }
  
  public V; $less$less(Lscala/collection/script/Message; cmd) {
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$less$less(Lscala/collection/mutable/Buffer;Lscala/collection/script/Message;)V;)(this, cmd);
  }
  
  public V; $plus$plus$eq(Ljava/lang/Object; src, I; start, I; len) {
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$plus$plus$eq(Lscala/collection/mutable/Buffer;Ljava/lang/Object;I;I;)V;)(this, src, start, len);
  }
  
  public Lscala/collection/mutable/Buffer; $plus(Ljava/lang/Object; elem) {
    return Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$plus(Lscala/collection/mutable/Buffer;Ljava/lang/Object;)Lscala/collection/mutable/Buffer;)(this, elem);
  }
  
  public Lscala/collection/mutable/Buffer; $plus(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$plus(Lscala/collection/mutable/Buffer;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Buffer;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/mutable/Buffer; $plus$plus(Lscala/collection/GenTraversableOnce; xs) {
    return Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$plus$plus(Lscala/collection/mutable/Buffer;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Buffer;)(this, xs);
  }
  
  public Lscala/collection/mutable/Buffer; $minus(Ljava/lang/Object; elem) {
    return Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$minus(Lscala/collection/mutable/Buffer;Ljava/lang/Object;)Lscala/collection/mutable/Buffer;)(this, elem);
  }
  
  public Lscala/collection/mutable/Buffer; $minus(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$minus(Lscala/collection/mutable/Buffer;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Buffer;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/mutable/Buffer; $minus$minus(Lscala/collection/GenTraversableOnce; xs) {
    return Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$minus$minus(Lscala/collection/mutable/Buffer;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Buffer;)(this, xs);
  }
  
  public Lscala/collection/generic/Shrinkable; $minus$eq(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/generic/Shrinkable$class;.(Lscala/collection/generic/Shrinkable$class;::$minus$eq(Lscala/collection/generic/Shrinkable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Shrinkable;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/generic/Shrinkable; $minus$minus$eq(Lscala/collection/TraversableOnce; xs) {
    return Lscala/collection/generic/Shrinkable$class;.(Lscala/collection/generic/Shrinkable$class;::$minus$minus$eq(Lscala/collection/generic/Shrinkable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Shrinkable;)(this, xs);
  }
  
  public Lscala/collection/generic/Growable; $plus$eq(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/generic/Growable$class;.(Lscala/collection/generic/Growable$class;::$plus$eq(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/mutable/Seq; seq() {
    return Lscala/collection/mutable/Seq$class;.(Lscala/collection/mutable/Seq$class;::seq(Lscala/collection/mutable/Seq;)Lscala/collection/mutable/Seq;)(this);
  }
  
  public Lscala/collection/parallel/Combiner; parCombiner() {
    return Lscala/collection/mutable/SeqLike$class;.(Lscala/collection/mutable/SeqLike$class;::parCombiner(Lscala/collection/mutable/SeqLike;)Lscala/collection/parallel/Combiner;)(this);
  }
  
  public Lscala/collection/mutable/SeqLike; transform(Lscala/Function1; f) {
    return Lscala/collection/mutable/SeqLike$class;.(Lscala/collection/mutable/SeqLike$class;::transform(Lscala/collection/mutable/SeqLike;Lscala/Function1;)Lscala/collection/mutable/SeqLike;)(this, f);
  }
  
  public final Ljava/lang/Object; scala$collection$mutable$Cloneable$$super$clone() {
    return super.(Ljava/lang/Object;::clone()Ljava/lang/Object;)();
  }
  
  public Lscala/collection/Seq; thisCollection() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::thisCollection(Lscala/collection/SeqLike;)Lscala/collection/Seq;)(this);
  }
  
  public Lscala/collection/Seq; toCollection(Ljava/lang/Object; repr) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::toCollection(Lscala/collection/SeqLike;Ljava/lang/Object;)Lscala/collection/Seq;)(this, repr);
  }
  
  public Lscala/collection/Iterator; permutations() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::permutations(Lscala/collection/SeqLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; combinations(I; n) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::combinations(Lscala/collection/SeqLike;I;)Lscala/collection/Iterator;)(this, n);
  }
  
  public Ljava/lang/Object; reverse() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::reverse(Lscala/collection/SeqLike;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; reverseMap(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::reverseMap(Lscala/collection/SeqLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Lscala/collection/Iterator; reversedElements() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::reversedElements(Lscala/collection/SeqLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Ljava/lang/Object; union(Lscala/collection/GenSeq; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::union(Lscala/collection/SeqLike;Lscala/collection/GenSeq;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; diff(Lscala/collection/GenSeq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::diff(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Ljava/lang/Object;)(this, that);
  }
  
  public Ljava/lang/Object; intersect(Lscala/collection/GenSeq; that) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::intersect(Lscala/collection/SeqLike;Lscala/collection/GenSeq;)Ljava/lang/Object;)(this, that);
  }
  
  public Ljava/lang/Object; distinct() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::distinct(Lscala/collection/SeqLike;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; patch(I; from, Lscala/collection/GenSeq; patch, I; replaced, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::patch(Lscala/collection/SeqLike;I;Lscala/collection/GenSeq;I;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, from, patch, replaced, bf);
  }
  
  public Ljava/lang/Object; updated(I; index, Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::updated(Lscala/collection/SeqLike;I;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, index, elem, bf);
  }
  
  public Ljava/lang/Object; $plus$colon(Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::$plus$colon(Lscala/collection/SeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, elem, bf);
  }
  
  public Ljava/lang/Object; $colon$plus(Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::$colon$plus(Lscala/collection/SeqLike;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, elem, bf);
  }
  
  public Ljava/lang/Object; padTo(I; len, Ljava/lang/Object; elem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::padTo(Lscala/collection/SeqLike;I;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, len, elem, bf);
  }
  
  public Ljava/lang/Object; sortWith(Lscala/Function2; lt) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::sortWith(Lscala/collection/SeqLike;Lscala/Function2;)Ljava/lang/Object;)(this, lt);
  }
  
  public Ljava/lang/Object; sortBy(Lscala/Function1; f, Lscala/math/Ordering; ord) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::sortBy(Lscala/collection/SeqLike;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;)(this, f, ord);
  }
  
  public Ljava/lang/Object; sorted(Lscala/math/Ordering; ord) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::sorted(Lscala/collection/SeqLike;Lscala/math/Ordering;)Ljava/lang/Object;)(this, ord);
  }
  
  public Lscala/collection/SeqView; view() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::view(Lscala/collection/SeqLike;)Lscala/collection/SeqView;)(this);
  }
  
  public Lscala/collection/SeqView; view(I; from, I; until) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::view(Lscala/collection/SeqLike;I;I;)Lscala/collection/SeqView;)(this, from, until);
  }
  
  public Ljava/lang/String; toString() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::toString(Lscala/collection/SeqLike;)Ljava/lang/String;)(this);
  }
  
  public I; findLastIndexOf(Lscala/Function1; p) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::findLastIndexOf(Lscala/collection/SeqLike;Lscala/Function1;)I;)(this, p);
  }
  
  public Z; equalsWith(Lscala/collection/Seq; that, Lscala/Function2; f) {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::equalsWith(Lscala/collection/SeqLike;Lscala/collection/Seq;Lscala/Function2;)Z;)(this, that, f);
  }
  
  public Lscala/collection/SeqView; projection() {
    return Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::projection(Lscala/collection/SeqLike;)Lscala/collection/SeqView;)(this);
  }
  
  public I; hashCode() {
    return Lscala/collection/GenSeqLike$class;.(Lscala/collection/GenSeqLike$class;::hashCode(Lscala/collection/GenSeqLike;)I;)(this);
  }
  
  public Lscala/PartialFunction; orElse(Lscala/PartialFunction; that) {
    return Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::orElse(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;)(this, that);
  }
  
  public Lscala/PartialFunction; andThen(Lscala/Function1; k) {
    return Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::andThen(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;)(this, k);
  }
  
  public Lscala/Function1; lift() {
    return Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::lift(Lscala/PartialFunction;)Lscala/Function1;)(this);
  }
  
  public Z; apply$mcZD$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcZD$sp(Lscala/Function1;D;)Z;)(this, v1);
  }
  
  public D; apply$mcDD$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcDD$sp(Lscala/Function1;D;)D;)(this, v1);
  }
  
  public F; apply$mcFD$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcFD$sp(Lscala/Function1;D;)F;)(this, v1);
  }
  
  public I; apply$mcID$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcID$sp(Lscala/Function1;D;)I;)(this, v1);
  }
  
  public J; apply$mcJD$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcJD$sp(Lscala/Function1;D;)J;)(this, v1);
  }
  
  public V; apply$mcVD$sp(D; v1) {
    Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcVD$sp(Lscala/Function1;D;)V;)(this, v1);
  }
  
  public Z; apply$mcZF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcZF$sp(Lscala/Function1;F;)Z;)(this, v1);
  }
  
  public D; apply$mcDF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcDF$sp(Lscala/Function1;F;)D;)(this, v1);
  }
  
  public F; apply$mcFF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcFF$sp(Lscala/Function1;F;)F;)(this, v1);
  }
  
  public I; apply$mcIF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcIF$sp(Lscala/Function1;F;)I;)(this, v1);
  }
  
  public J; apply$mcJF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcJF$sp(Lscala/Function1;F;)J;)(this, v1);
  }
  
  public V; apply$mcVF$sp(F; v1) {
    Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcVF$sp(Lscala/Function1;F;)V;)(this, v1);
  }
  
  public Z; apply$mcZI$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcZI$sp(Lscala/Function1;I;)Z;)(this, v1);
  }
  
  public D; apply$mcDI$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcDI$sp(Lscala/Function1;I;)D;)(this, v1);
  }
  
  public F; apply$mcFI$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcFI$sp(Lscala/Function1;I;)F;)(this, v1);
  }
  
  public I; apply$mcII$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcII$sp(Lscala/Function1;I;)I;)(this, v1);
  }
  
  public J; apply$mcJI$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcJI$sp(Lscala/Function1;I;)J;)(this, v1);
  }
  
  public V; apply$mcVI$sp(I; v1) {
    Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcVI$sp(Lscala/Function1;I;)V;)(this, v1);
  }
  
  public Z; apply$mcZJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcZJ$sp(Lscala/Function1;J;)Z;)(this, v1);
  }
  
  public D; apply$mcDJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcDJ$sp(Lscala/Function1;J;)D;)(this, v1);
  }
  
  public F; apply$mcFJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcFJ$sp(Lscala/Function1;J;)F;)(this, v1);
  }
  
  public I; apply$mcIJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcIJ$sp(Lscala/Function1;J;)I;)(this, v1);
  }
  
  public J; apply$mcJJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcJJ$sp(Lscala/Function1;J;)J;)(this, v1);
  }
  
  public V; apply$mcVJ$sp(J; v1) {
    Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcVJ$sp(Lscala/Function1;J;)V;)(this, v1);
  }
  
  public Lscala/Function1; compose(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcZD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcZD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcDD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcDD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcFD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcFD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcID$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcID$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcJD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcJD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcVD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcVD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcZF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcZF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcDF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcDF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcFF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcFF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcIF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcIF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcJF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcJF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcVF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcVF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcZI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcZI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcDI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcDI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcFI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcFI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcII$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcII$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcJI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcJI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcVI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcVI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcZJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcZJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcDJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcDJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcFJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcFJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcIJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcIJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcJJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcJJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcVJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcVJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcZD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcZD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcDD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcDD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcFD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcFD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcID$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcID$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcJD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcJD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcVD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcVD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcZF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcZF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcDF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcDF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcFF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcFF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcIF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcIF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcJF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcJF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcVF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcVF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcZI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcZI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcDI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcDI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcFI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcFI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcII$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcII$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcJI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcJI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcVI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcVI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcZJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcZJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcDJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcDJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcFJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcFJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcIJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcIJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcJJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcJJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcVJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcVJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Ljava/lang/Object; slice(I; from, I; until) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::slice(Lscala/collection/IterableLike;I;I;)Ljava/lang/Object;)(this, from, until);
  }
  
  public Ljava/lang/Object; take(I; n) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::take(Lscala/collection/IterableLike;I;)Ljava/lang/Object;)(this, n);
  }
  
  public Ljava/lang/Object; drop(I; n) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::drop(Lscala/collection/IterableLike;I;)Ljava/lang/Object;)(this, n);
  }
  
  public Ljava/lang/Object; takeWhile(Lscala/Function1; p) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::takeWhile(Lscala/collection/IterableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Lscala/collection/Iterator; grouped(I; size) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::grouped(Lscala/collection/IterableLike;I;)Lscala/collection/Iterator;)(this, size);
  }
  
  public Lscala/collection/Iterator; sliding(I; size) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::sliding(Lscala/collection/IterableLike;I;)Lscala/collection/Iterator;)(this, size);
  }
  
  public Lscala/collection/Iterator; sliding(I; size, I; step) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::sliding(Lscala/collection/IterableLike;I;I;)Lscala/collection/Iterator;)(this, size, step);
  }
  
  public Ljava/lang/Object; takeRight(I; n) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::takeRight(Lscala/collection/IterableLike;I;)Ljava/lang/Object;)(this, n);
  }
  
  public Ljava/lang/Object; dropRight(I; n) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::dropRight(Lscala/collection/IterableLike;I;)Ljava/lang/Object;)(this, n);
  }
  
  public Ljava/lang/Object; zip(Lscala/collection/GenIterable; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::zip(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; zipAll(Lscala/collection/GenIterable; that, Ljava/lang/Object; thisElem, Ljava/lang/Object; thatElem, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::zipAll(Lscala/collection/IterableLike;Lscala/collection/GenIterable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, thisElem, thatElem, bf);
  }
  
  public Ljava/lang/Object; zipWithIndex(Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::zipWithIndex(Lscala/collection/IterableLike;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, bf);
  }
  
  public Z; canEqual(Ljava/lang/Object; that) {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::canEqual(Lscala/collection/IterableLike;Ljava/lang/Object;)Z;)(this, that);
  }
  
  public Lscala/collection/Iterator; elements() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::elements(Lscala/collection/IterableLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Ljava/lang/Object; first() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::first(Lscala/collection/IterableLike;)Ljava/lang/Object;)(this);
  }
  
  public Lscala/Option; firstOption() {
    return Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::firstOption(Lscala/collection/IterableLike;)Lscala/Option;)(this);
  }
  
  public Lscala/collection/mutable/Builder; newBuilder() {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::newBuilder(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;)(this);
  }
  
  public Lscala/collection/mutable/Builder; genericBuilder() {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::genericBuilder(Lscala/collection/generic/GenericTraversableTemplate;)Lscala/collection/mutable/Builder;)(this);
  }
  
  public Lscala/Tuple2; unzip(Lscala/Function1; asPair) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::unzip(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple2;)(this, asPair);
  }
  
  public Lscala/Tuple3; unzip3(Lscala/Function1; asTriple) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::unzip3(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/Tuple3;)(this, asTriple);
  }
  
  public Lscala/collection/GenTraversable; flatten(Lscala/Function1; asTraversable) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::flatten(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;)(this, asTraversable);
  }
  
  public Lscala/collection/GenTraversable; transpose(Lscala/Function1; asTraversable) {
    return Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::transpose(Lscala/collection/generic/GenericTraversableTemplate;Lscala/Function1;)Lscala/collection/GenTraversable;)(this, asTraversable);
  }
  
  public Ljava/lang/Object; repr() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::repr(Lscala/collection/TraversableLike;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; $plus$plus(Lscala/collection/GenTraversableOnce; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::$plus$plus(Lscala/collection/TraversableLike;Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; $plus$plus$colon(Lscala/collection/TraversableOnce; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::$plus$plus$colon(Lscala/collection/TraversableLike;Lscala/collection/TraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; $plus$plus$colon(Lscala/collection/Traversable; that, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::$plus$plus$colon(Lscala/collection/TraversableLike;Lscala/collection/Traversable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, that, bf);
  }
  
  public Ljava/lang/Object; map(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::map(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Ljava/lang/Object; flatMap(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::flatMap(Lscala/collection/TraversableLike;Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, f, bf);
  }
  
  public Ljava/lang/Object; filter(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::filter(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Ljava/lang/Object; filterNot(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::filterNot(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Ljava/lang/Object; collect(Lscala/PartialFunction; pf, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::collect(Lscala/collection/TraversableLike;Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, pf, bf);
  }
  
  public Lscala/Tuple2; partition(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::partition(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;)(this, p);
  }
  
  public Lscala/collection/immutable/Map; groupBy(Lscala/Function1; f) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::groupBy(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/immutable/Map;)(this, f);
  }
  
  public Ljava/lang/Object; scan(Ljava/lang/Object; z, Lscala/Function2; op, Lscala/collection/generic/CanBuildFrom; cbf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::scan(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, z, op, cbf);
  }
  
  public Ljava/lang/Object; scanLeft(Ljava/lang/Object; z, Lscala/Function2; op, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::scanLeft(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, z, op, bf);
  }
  
  public Ljava/lang/Object; scanRight(Ljava/lang/Object; z, Lscala/Function2; op, Lscala/collection/generic/CanBuildFrom; bf) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::scanRight(Lscala/collection/TraversableLike;Ljava/lang/Object;Lscala/Function2;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(this, z, op, bf);
  }
  
  public Ljava/lang/Object; tail() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::tail(Lscala/collection/TraversableLike;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; init() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::init(Lscala/collection/TraversableLike;)Ljava/lang/Object;)(this);
  }
  
  public Ljava/lang/Object; sliceWithKnownDelta(I; from, I; until, I; delta) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::sliceWithKnownDelta(Lscala/collection/TraversableLike;I;I;I;)Ljava/lang/Object;)(this, from, until, delta);
  }
  
  public Ljava/lang/Object; sliceWithKnownBound(I; from, I; until) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::sliceWithKnownBound(Lscala/collection/TraversableLike;I;I;)Ljava/lang/Object;)(this, from, until);
  }
  
  public Ljava/lang/Object; dropWhile(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::dropWhile(Lscala/collection/TraversableLike;Lscala/Function1;)Ljava/lang/Object;)(this, p);
  }
  
  public Lscala/Tuple2; span(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::span(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/Tuple2;)(this, p);
  }
  
  public Lscala/Tuple2; splitAt(I; n) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::splitAt(Lscala/collection/TraversableLike;I;)Lscala/Tuple2;)(this, n);
  }
  
  public Lscala/collection/Iterator; tails() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::tails(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; inits() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::inits(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Traversable; toTraversable() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::toTraversable(Lscala/collection/TraversableLike;)Lscala/collection/Traversable;)(this);
  }
  
  public Lscala/collection/Iterator; toIterator() {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::toIterator(Lscala/collection/TraversableLike;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/generic/FilterMonadic; withFilter(Lscala/Function1; p) {
    return Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::withFilter(Lscala/collection/TraversableLike;Lscala/Function1;)Lscala/collection/generic/FilterMonadic;)(this, p);
  }
  
  public final Z; isTraversableAgain() {
    return Lscala/collection/GenTraversableLike$class;.(Lscala/collection/GenTraversableLike$class;::isTraversableAgain(Lscala/collection/GenTraversableLike;)Z;)(this);
  }
  
  public Lscala/collection/Parallel; par() {
    return Lscala/collection/Parallelizable$class;.(Lscala/collection/Parallelizable$class;::par(Lscala/collection/Parallelizable;)Lscala/collection/Parallel;)(this);
  }
  
  public Lscala/collection/immutable/List; reversed() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reversed(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;)(this);
  }
  
  public Lscala/Option; collectFirst(Lscala/PartialFunction; pf) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::collectFirst(Lscala/collection/TraversableOnce;Lscala/PartialFunction;)Lscala/Option;)(this, pf);
  }
  
  public Ljava/lang/Object; reduce(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduce(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Lscala/Option; reduceOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Ljava/lang/Object; fold(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::fold(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; aggregate(Ljava/lang/Object; z, Lscala/Function2; seqop, Lscala/Function2; combop) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::aggregate(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;Lscala/Function2;)Ljava/lang/Object;)(this, z, seqop, combop);
  }
  
  public Ljava/lang/Object; maxBy(Lscala/Function1; f, Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::maxBy(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;)(this, f, cmp);
  }
  
  public Ljava/lang/Object; minBy(Lscala/Function1; f, Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::minBy(Lscala/collection/TraversableOnce;Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;)(this, f, cmp);
  }
  
  public Ljava/lang/Object; $div$colon$bslash(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/GenTraversableOnce$class;.(Lscala/collection/GenTraversableOnce$class;::$div$colon$bslash(Lscala/collection/GenTraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Lscala/collection/generic/GenericCompanion; companion() {
    return Lscala/collection/mutable/ListBuffer$;.MODULE$;
  }
  
  private Lscala/collection/immutable/List; scala$collection$mutable$ListBuffer$$start$u0020;
  
  public final Lscala/collection/immutable/List; scala$collection$mutable$ListBuffer$$start() {
    return this.(Lscala/collection/mutable/ListBuffer;)scala$collection$mutable$ListBuffer$$start$u0020;
  }
  
  private V; scala$collection$mutable$ListBuffer$$start_$eq(Lscala/collection/immutable/List; x$1) {
    this.(Lscala/collection/mutable/ListBuffer;)scala$collection$mutable$ListBuffer$$start$u0020 = x$1;
  }
  
  private Lscala/collection/immutable/$colon$colon; last0$u0020;
  
  private Lscala/collection/immutable/$colon$colon; last0() {
    return this.(Lscala/collection/mutable/ListBuffer;)last0$u0020;
  }
  
  private V; last0_$eq(Lscala/collection/immutable/$colon$colon; x$1) {
    this.(Lscala/collection/mutable/ListBuffer;)last0$u0020 = x$1;
  }
  
  private Z; exported$u0020;
  
  private Z; exported() {
    return this.(Lscala/collection/mutable/ListBuffer;)exported$u0020;
  }
  
  private V; exported_$eq(Z; x$1) {
    this.(Lscala/collection/mutable/ListBuffer;)exported$u0020 = x$1;
  }
  
  private I; len$u0020;
  
  private I; len() {
    return this.(Lscala/collection/mutable/ListBuffer;)len$u0020;
  }
  
  private V; len_$eq(I; x$1) {
    this.(Lscala/collection/mutable/ListBuffer;)len$u0020 = x$1;
  }
  
  protected Lscala/collection/immutable/Seq; underlying() {
    return this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)();
  }
  
  public I; length() {
    return this.(Lscala/collection/mutable/ListBuffer;::len()I;)();
  }
  
  public Ljava/lang/Object; apply(I; n) {
    Ljava/lang/Object; $1$;
    if (((n < 0) || (n >= this.(Lscala/collection/mutable/ListBuffer;::len()I;)())))
      {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(n).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
      }
    else
      {
        $1$ = Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::apply(Lscala/collection/generic/SeqForwarder;I;)Ljava/lang/Object;)(this, n);
      }
    return $1$;
  }
  
  public V; update(I; n, Ljava/lang/Object; x) {
    try {
      if (this.(Lscala/collection/mutable/ListBuffer;::exported()Z;)())
        {
          this.(Lscala/collection/mutable/ListBuffer;::copy()V;)();
        }
      else
        {
          
        }
      if ((n == 0))
        {
          Lscala/collection/immutable/$colon$colon; newElem = (new (Lscala/collection/immutable/$colon$colon;::this(Ljava/lang/Object;Lscala/collection/immutable/List;)V;)(x, this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;)));
          if ((this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)() == this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)()))
            {
              this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)(newElem);
            }
          else
            {
              
            }
          this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start_$eq(Lscala/collection/immutable/List;)V;)(newElem);
        }
      else
        {
          Lscala/collection/immutable/List; cursor = this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)();
          I; i = 1;
          while$1: while(true) {
            if ((i < n))
              {
                {
                  cursor = cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
                  i = (i + 1);
                }
                continue while$1;
              }
            else
              {
                
              }
            break;
          }
          Lscala/collection/immutable/$colon$colon; newElem = (new (Lscala/collection/immutable/$colon$colon;::this(Ljava/lang/Object;Lscala/collection/immutable/List;)V;)(x, cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/TraversableLike;).(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;)));
          if ((this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)() == cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)()))
            {
              this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)(newElem);
            }
          else
            {
              
            }
          cursor.<cast>(Lscala/collection/immutable/$colon$colon;).(Lscala/collection/immutable/$colon$colon;::tl_$eq(Lscala/collection/immutable/List;)V;)(newElem);
        }
    } catch(Ljava/lang/Exception; ex) {
      throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(n).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
    }
  }
  
  public Lscala/collection/mutable/ListBuffer; $plus$eq(Ljava/lang/Object; x) {
    if (this.(Lscala/collection/mutable/ListBuffer;::exported()Z;)())
      {
        this.(Lscala/collection/mutable/ListBuffer;::copy()V;)();
      }
    else
      {
        
      }
    if (this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)((new (Lscala/collection/immutable/$colon$colon;::this(Ljava/lang/Object;Lscala/collection/immutable/List;)V;)(x, Lscala/collection/immutable/Nil$;.MODULE$)));
        this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start_$eq(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)());
      }
    else
      {
        Lscala/collection/immutable/$colon$colon; last1 = this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)();
        this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)((new (Lscala/collection/immutable/$colon$colon;::this(Ljava/lang/Object;Lscala/collection/immutable/List;)V;)(x, Lscala/collection/immutable/Nil$;.MODULE$)));
        last1.(Lscala/collection/immutable/$colon$colon;::tl_$eq(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)());
      }
    this.(Lscala/collection/mutable/ListBuffer;::len_$eq(I;)V;)((this.(Lscala/collection/mutable/ListBuffer;::len()I;)() + 1));
    return this;
  }
  
  public Lscala/collection/mutable/ListBuffer; $plus$plus$eq(Lscala/collection/TraversableOnce; xs) {
    Lscala/collection/mutable/ListBuffer; $2$;
    if ((xs == this))
      {
        $2$ = this.(Lscala/collection/mutable/ListBuffer;::$plus$plus$eq(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ListBuffer;)(this.(Lscala/collection/IterableLike;::take(I;)Ljava/lang/Object;)(this.(Lscala/collection/generic/TraversableForwarder;::size()I;)()).<cast>(Lscala/collection/TraversableOnce;));
      }
    else
      {
        $2$ = Lscala/collection/generic/Growable$class;.(Lscala/collection/generic/Growable$class;::$plus$plus$eq(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;)(this, xs).<cast>(Lscala/collection/mutable/ListBuffer;);
      }
    return $2$;
  }
  
  public Lscala/collection/mutable/ListBuffer; $plus$plus$eq$colon(Lscala/collection/TraversableOnce; xs) {
    Lscala/collection/mutable/ListBuffer; $3$;
    if ((xs == this))
      {
        $3$ = this.(Lscala/collection/mutable/ListBuffer;::$plus$plus$eq$colon(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ListBuffer;)(this.(Lscala/collection/IterableLike;::take(I;)Ljava/lang/Object;)(this.(Lscala/collection/generic/TraversableForwarder;::size()I;)()).<cast>(Lscala/collection/TraversableOnce;));
      }
    else
      {
        $3$ = Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$plus$plus$eq$colon(Lscala/collection/mutable/Buffer;Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;)(this, xs).<cast>(Lscala/collection/mutable/ListBuffer;);
      }
    return $3$;
  }
  
  public V; clear() {
    this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start_$eq(Lscala/collection/immutable/List;)V;)(Lscala/collection/immutable/Nil$;.MODULE$);
    this.(Lscala/collection/mutable/ListBuffer;::exported_$eq(Z;)V;)(false);
    this.(Lscala/collection/mutable/ListBuffer;::len_$eq(I;)V;)(0);
  }
  
  public Lscala/collection/mutable/ListBuffer; $plus$eq$colon(Ljava/lang/Object; x) {
    if (this.(Lscala/collection/mutable/ListBuffer;::exported()Z;)())
      {
        this.(Lscala/collection/mutable/ListBuffer;::copy()V;)();
      }
    else
      {
        
      }
    Lscala/collection/immutable/$colon$colon; newElem = (new (Lscala/collection/immutable/$colon$colon;::this(Ljava/lang/Object;Lscala/collection/immutable/List;)V;)(x, this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)()));
    if (this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)(newElem);
      }
    else
      {
        
      }
    this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start_$eq(Lscala/collection/immutable/List;)V;)(newElem);
    this.(Lscala/collection/mutable/ListBuffer;::len_$eq(I;)V;)((this.(Lscala/collection/mutable/ListBuffer;::len()I;)() + 1));
    return this;
  }
  
  public V; insertAll(I; n, Lscala/collection/Traversable; seq) {
    try {
      if (this.(Lscala/collection/mutable/ListBuffer;::exported()Z;)())
        {
          this.(Lscala/collection/mutable/ListBuffer;::copy()V;)();
        }
      else
        {
          
        }
      Lscala/collection/immutable/List; elems = seq.(Lscala/collection/TraversableOnce;::toList()Lscala/collection/immutable/List;)().(Lscala/collection/immutable/List;::reverse()Lscala/collection/immutable/List;)();
      this.(Lscala/collection/mutable/ListBuffer;::len_$eq(I;)V;)((this.(Lscala/collection/mutable/ListBuffer;::len()I;)() + elems.(Lscala/collection/LinearSeqOptimized;::length()I;)()));
      if ((n == 0))
        {
          while$2: while(true) {
            if (!(elems.(Lscala/collection/IterableLike;::isEmpty()Z;)()))
              {
                {
                  Lscala/collection/immutable/$colon$colon; newElem = (new (Lscala/collection/immutable/$colon$colon;::this(Ljava/lang/Object;Lscala/collection/immutable/List;)V;)(elems.(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)(), this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)()));
                  if (this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::isEmpty()Z;)())
                    {
                      this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)(newElem);
                    }
                  else
                    {
                      
                    }
                  this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start_$eq(Lscala/collection/immutable/List;)V;)(newElem);
                  elems = elems.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
                }
                continue while$2;
              }
            else
              {
                
              }
            break;
          }
        }
      else
        {
          Lscala/collection/immutable/List; cursor = this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)();
          I; i = 1;
          while$3: while(true) {
            if ((i < n))
              {
                {
                  cursor = cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
                  i = (i + 1);
                }
                continue while$3;
              }
            else
              {
                
              }
            break;
          }
          while$4: while(true) {
            if (!(elems.(Lscala/collection/IterableLike;::isEmpty()Z;)()))
              {
                {
                  Lscala/collection/immutable/$colon$colon; newElem = (new (Lscala/collection/immutable/$colon$colon;::this(Ljava/lang/Object;Lscala/collection/immutable/List;)V;)(elems.(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)(), cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;)));
                  if (cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/IterableLike;).(Lscala/collection/IterableLike;::isEmpty()Z;)())
                    {
                      this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)(newElem);
                    }
                  else
                    {
                      
                    }
                  cursor.<cast>(Lscala/collection/immutable/$colon$colon;).(Lscala/collection/immutable/$colon$colon;::tl_$eq(Lscala/collection/immutable/List;)V;)(newElem);
                  elems = elems.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
                }
                continue while$4;
              }
            else
              {
                
              }
            break;
          }
        }
    } catch(Ljava/lang/Exception; ex) {
      throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(n).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
    }
  }
  
  public V; remove(I; n, I; count) {
    if (this.(Lscala/collection/mutable/ListBuffer;::exported()Z;)())
      {
        this.(Lscala/collection/mutable/ListBuffer;::copy()V;)();
      }
    else
      {
        
      }
    I; n1 = Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::intWrapper(I;)Lscala/runtime/RichInt;)(n).(Lscala/runtime/RichInt;::max(I;)I;)(0);
    I; count1 = Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::intWrapper(I;)Lscala/runtime/RichInt;)(count).(Lscala/runtime/RichInt;::min(I;)I;)((this.(Lscala/collection/mutable/ListBuffer;::len()I;)() - n1));
    Ljava/lang/Object; old = this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)();
    if ((n1 == 0))
      {
        I; c = count1;
        while$5: while(true) {
          if ((c > 0))
            {
              {
                this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start_$eq(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;));
                c = (c - 1);
              }
              continue while$5;
            }
          else
            {
              
            }
          break;
        }
      }
    else
      {
        Lscala/collection/immutable/List; cursor = this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)();
        I; i = 1;
        while$6: while(true) {
          if ((i < n1))
            {
              {
                cursor = cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
                i = (i + 1);
              }
              continue while$6;
            }
          else
            {
              
            }
          break;
        }
        I; c = count1;
        while$7: while(true) {
          if ((c > 0))
            {
              {
                if ((this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)() == cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)()))
                  {
                    this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)(cursor.<cast>(Lscala/collection/immutable/$colon$colon;));
                  }
                else
                  {
                    
                  }
                cursor.<cast>(Lscala/collection/immutable/$colon$colon;).(Lscala/collection/immutable/$colon$colon;::tl_$eq(Lscala/collection/immutable/List;)V;)(cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/TraversableLike;).(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;));
                c = (c - 1);
              }
              continue while$7;
            }
          else
            {
              
            }
          break;
        }
      }
    this.(Lscala/collection/mutable/ListBuffer;::len_$eq(I;)V;)((this.(Lscala/collection/mutable/ListBuffer;::len()I;)() - count1));
  }
  
  public Lscala/collection/immutable/List; result() {
    return this.(Lscala/collection/mutable/ListBuffer;::toList()Lscala/collection/immutable/List;)();
  }
  
  public Lscala/collection/immutable/List; toList() {
    this.(Lscala/collection/mutable/ListBuffer;::exported_$eq(Z;)V;)(!(this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::isEmpty()Z;)()));
    return this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)();
  }
  
  public Lscala/collection/immutable/List; prependToList(Lscala/collection/immutable/List; xs) {
    Lscala/collection/immutable/List; $4$;
    if (this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        $4$ = xs;
      }
    else
      {
        if (this.(Lscala/collection/mutable/ListBuffer;::exported()Z;)())
          {
            this.(Lscala/collection/mutable/ListBuffer;::copy()V;)();
          }
        else
          {
            
          }
        this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)().(Lscala/collection/immutable/$colon$colon;::tl_$eq(Lscala/collection/immutable/List;)V;)(xs);
        $4$ = this.(Lscala/collection/mutable/ListBuffer;::toList()Lscala/collection/immutable/List;)();
      }
    return $4$;
  }
  
  public Ljava/lang/Object; remove(I; n) {
    if (((n < 0) || (n >= this.(Lscala/collection/mutable/ListBuffer;::len()I;)())))
      {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(n).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
      }
    else
      {
        
      }
    if (this.(Lscala/collection/mutable/ListBuffer;::exported()Z;)())
      {
        this.(Lscala/collection/mutable/ListBuffer;::copy()V;)();
      }
    else
      {
        
      }
    Ljava/lang/Object; old = this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)();
    if ((n == 0))
      {
        this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start_$eq(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;));
      }
    else
      {
        Lscala/collection/immutable/List; cursor = this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)();
        I; i = 1;
        while$8: while(true) {
          if ((i < n))
            {
              {
                cursor = cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
                i = (i + 1);
              }
              continue while$8;
            }
          else
            {
              
            }
          break;
        }
        old = cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/IterableLike;).(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)();
        if ((this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)() == cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)()))
          {
            this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)(cursor.<cast>(Lscala/collection/immutable/$colon$colon;));
          }
        else
          {
            
          }
        cursor.<cast>(Lscala/collection/immutable/$colon$colon;).(Lscala/collection/immutable/$colon$colon;::tl_$eq(Lscala/collection/immutable/List;)V;)(cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/TraversableLike;).(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;));
      }
    this.(Lscala/collection/mutable/ListBuffer;::len_$eq(I;)V;)((this.(Lscala/collection/mutable/ListBuffer;::len()I;)() - 1));
    return old;
  }
  
  public Lscala/collection/mutable/ListBuffer; $minus$eq(Ljava/lang/Object; elem) {
    if (this.(Lscala/collection/mutable/ListBuffer;::exported()Z;)())
      {
        this.(Lscala/collection/mutable/ListBuffer;::copy()V;)();
      }
    else
      {
        
      }
    if (this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::isEmpty()Z;)())
      {
        
      }
    else
      {
        if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)(), elem))
          {
            this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start_$eq(Lscala/collection/immutable/List;)V;)(this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)().(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;));
            this.(Lscala/collection/mutable/ListBuffer;::len_$eq(I;)V;)((this.(Lscala/collection/mutable/ListBuffer;::len()I;)() - 1));
          }
        else
          {
            Lscala/collection/immutable/List; cursor = this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)();
            while$9: while(true) {
              if ((!(cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/IterableLike;).(Lscala/collection/IterableLike;::isEmpty()Z;)()) && (cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/IterableLike;).(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)() != elem)))
                {
                  cursor = cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
                  continue while$9;
                }
              else
                {
                  
                }
              break;
            }
            if (!(cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/IterableLike;).(Lscala/collection/IterableLike;::isEmpty()Z;)()))
              {
                Lscala/collection/immutable/$colon$colon; z = cursor.<cast>(Lscala/collection/immutable/$colon$colon;);
                if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(z.(Lscala/collection/immutable/$colon$colon;::tl()Lscala/collection/immutable/List;)(), this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)()))
                  {
                    this.(Lscala/collection/mutable/ListBuffer;::last0_$eq(Lscala/collection/immutable/$colon$colon;)V;)(z);
                  }
                else
                  {
                    
                  }
                z.(Lscala/collection/immutable/$colon$colon;::tl_$eq(Lscala/collection/immutable/List;)V;)(cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/TraversableLike;).(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;));
                this.(Lscala/collection/mutable/ListBuffer;::len_$eq(I;)V;)((this.(Lscala/collection/mutable/ListBuffer;::len()I;)() - 1));
              }
            else
              {
                
              }
          }
      }
    return this;
  }
  
  public Lscala/collection/Iterator; iterator() {
    return (new (Lscala/collection/mutable/ListBuffer$$anon$1;::this(Lscala/collection/mutable/ListBuffer;)V;)(this));
  }
  
  public Lscala/collection/immutable/List; readOnly() {
    return this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)();
  }
  
  private V; copy() {
    Lscala/collection/immutable/List; cursor = this.(Lscala/collection/mutable/ListBuffer;::scala$collection$mutable$ListBuffer$$start()Lscala/collection/immutable/List;)();
    Lscala/collection/immutable/List; limit = this.(Lscala/collection/mutable/ListBuffer;::last0()Lscala/collection/immutable/$colon$colon;)().(Lscala/collection/immutable/$colon$colon;::tail()Lscala/collection/immutable/List;)();
    this.(Lscala/collection/mutable/ListBuffer;::clear()V;)();
    while$10: while(true) {
      if ((cursor != limit))
        {
          {
            this.(Lscala/collection/mutable/ListBuffer;::$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;)(cursor.(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)());
            cursor = cursor.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
          }
          continue while$10;
        }
      else
        {
          
        }
      break;
    }
  }
  
  public Z; equals(Ljava/lang/Object; that) {
    Ljava/lang/Object; temp1 = that;
    Z; $5$;
    if (temp1.<instanceof>(Lscala/collection/mutable/ListBuffer;))
      {
        $5$ = this.(Lscala/collection/mutable/ListBuffer;::readOnly()Lscala/collection/immutable/List;)().(Lscala/collection/GenSeqLike;::equals(Ljava/lang/Object;)Z;)(temp1.<cast>(Lscala/collection/mutable/ListBuffer;).(Lscala/collection/mutable/ListBuffer;::readOnly()Lscala/collection/immutable/List;)());
      }
    else
      {
        $5$ = Lscala/collection/GenSeqLike$class;.(Lscala/collection/GenSeqLike$class;::equals(Lscala/collection/GenSeqLike;Ljava/lang/Object;)Z;)(this, that);
      }
    return $5$;
  }
  
  public Lscala/collection/mutable/ListBuffer; clone() {
    return (new (Lscala/collection/mutable/ListBuffer;::this()V;)()).(Lscala/collection/mutable/ListBuffer;::$plus$plus$eq(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ListBuffer;)(this);
  }
  
  public Ljava/lang/String; stringPrefix() {
    return "ListBuffer";
  }
  
  public Lscala/collection/GenTraversable; toTraversable() {
    return this.(Lscala/collection/TraversableLike;::toTraversable()Lscala/collection/Traversable;)();
  }
  
  public Lscala/collection/GenMap; groupBy(Lscala/Function1; f) {
    return this.(Lscala/collection/TraversableLike;::groupBy(Lscala/Function1;)Lscala/collection/immutable/Map;)(f);
  }
  
  public Lscala/collection/generic/Subtractable; repr() {
    return this.(Lscala/collection/TraversableLike;::repr()Ljava/lang/Object;)().<cast>(Lscala/collection/generic/Subtractable;);
  }
  
  public Lscala/Function1; andThen(Lscala/Function1; g) {
    return this.(Lscala/PartialFunction;::andThen(Lscala/Function1;)Lscala/PartialFunction;)(g);
  }
  
  public Lscala/collection/IterableView; projection() {
    return this.(Lscala/collection/SeqLike;::projection()Lscala/collection/SeqView;)();
  }
  
  public Lscala/collection/TraversableView; view(I; from, I; until) {
    return this.(Lscala/collection/SeqLike;::view(I;I;)Lscala/collection/SeqView;)(from, until);
  }
  
  public Lscala/collection/IterableView; view(I; from, I; until) {
    return this.(Lscala/collection/SeqLike;::view(I;I;)Lscala/collection/SeqView;)(from, until);
  }
  
  public Lscala/collection/TraversableView; view() {
    return this.(Lscala/collection/SeqLike;::view()Lscala/collection/SeqView;)();
  }
  
  public Lscala/collection/IterableView; view() {
    return this.(Lscala/collection/SeqLike;::view()Lscala/collection/SeqView;)();
  }
  
  public Lscala/collection/Traversable; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/SeqLike;::toCollection(Ljava/lang/Object;)Lscala/collection/Seq;)(repr);
  }
  
  public Lscala/collection/Iterable; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/SeqLike;::toCollection(Ljava/lang/Object;)Lscala/collection/Seq;)(repr);
  }
  
  public Lscala/collection/Traversable; thisCollection() {
    return this.(Lscala/collection/SeqLike;::thisCollection()Lscala/collection/Seq;)();
  }
  
  public Lscala/collection/Iterable; thisCollection() {
    return this.(Lscala/collection/SeqLike;::thisCollection()Lscala/collection/Seq;)();
  }
  
  public Lscala/collection/TraversableOnce; seq() {
    return this.(Lscala/collection/mutable/Seq;::seq()Lscala/collection/mutable/Seq;)();
  }
  
  public Lscala/collection/Traversable; seq() {
    return this.(Lscala/collection/mutable/Seq;::seq()Lscala/collection/mutable/Seq;)();
  }
  
  public Lscala/collection/mutable/Traversable; seq() {
    return this.(Lscala/collection/mutable/Seq;::seq()Lscala/collection/mutable/Seq;)();
  }
  
  public Lscala/collection/Iterable; seq() {
    return this.(Lscala/collection/mutable/Seq;::seq()Lscala/collection/mutable/Seq;)();
  }
  
  public Lscala/collection/mutable/Iterable; seq() {
    return this.(Lscala/collection/mutable/Seq;::seq()Lscala/collection/mutable/Seq;)();
  }
  
  public Lscala/collection/Seq; seq() {
    return this.(Lscala/collection/mutable/Seq;::seq()Lscala/collection/mutable/Seq;)();
  }
  
  public Lscala/collection/generic/Subtractable; $minus$minus(Lscala/collection/GenTraversableOnce; xs) {
    return this.(Lscala/collection/mutable/BufferLike;::$minus$minus(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Buffer;)(xs);
  }
  
  public Lscala/collection/generic/Subtractable; $minus(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return this.(Lscala/collection/mutable/BufferLike;::$minus(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Buffer;)(elem1, elem2, elems);
  }
  
  public Lscala/collection/generic/Subtractable; $minus(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/BufferLike;::$minus(Ljava/lang/Object;)Lscala/collection/mutable/Buffer;)(elem);
  }
  
  public Lscala/collection/GenMap; toMap(Lscala/Predef$$less$colon$less; ev) {
    return this.(Lscala/collection/generic/TraversableForwarder;::toMap(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(ev);
  }
  
  public Lscala/collection/GenSet; toSet() {
    return this.(Lscala/collection/generic/TraversableForwarder;::toSet()Lscala/collection/immutable/Set;)();
  }
  
  public Lscala/collection/GenSeq; toSeq() {
    return this.(Lscala/collection/generic/TraversableForwarder;::toSeq()Lscala/collection/Seq;)();
  }
  
  public Lscala/collection/GenIterable; toIterable() {
    return this.(Lscala/collection/generic/TraversableForwarder;::toIterable()Lscala/collection/Iterable;)();
  }
  
  public Z; isDefinedAt(Ljava/lang/Object; x) {
    return this.(Lscala/collection/generic/SeqForwarder;::isDefinedAt(I;)Z;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(x));
  }
  
  public Ljava/lang/Object; clone() {
    return this.(Lscala/collection/mutable/ListBuffer;::clone()Lscala/collection/mutable/ListBuffer;)();
  }
  
  public Lscala/collection/Seq; readOnly() {
    return this.(Lscala/collection/mutable/ListBuffer;::readOnly()Lscala/collection/immutable/List;)();
  }
  
  public Lscala/collection/generic/Shrinkable; $minus$eq(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/ListBuffer;::$minus$eq(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;)(elem);
  }
  
  public Lscala/collection/mutable/Buffer; $minus$eq(Ljava/lang/Object; x) {
    return this.(Lscala/collection/mutable/ListBuffer;::$minus$eq(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;)(x);
  }
  
  public Ljava/lang/Object; result() {
    return this.(Lscala/collection/mutable/ListBuffer;::result()Lscala/collection/immutable/List;)();
  }
  
  public Lscala/collection/mutable/Buffer; $plus$eq$colon(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/ListBuffer;::$plus$eq$colon(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;)(elem);
  }
  
  public Lscala/collection/mutable/Buffer; $plus$plus$eq$colon(Lscala/collection/TraversableOnce; xs) {
    return this.(Lscala/collection/mutable/ListBuffer;::$plus$plus$eq$colon(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ListBuffer;)(xs);
  }
  
  public Lscala/collection/generic/Growable; $plus$plus$eq(Lscala/collection/TraversableOnce; xs) {
    return this.(Lscala/collection/mutable/ListBuffer;::$plus$plus$eq(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/ListBuffer;)(xs);
  }
  
  public Lscala/collection/generic/Growable; $plus$eq(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/ListBuffer;::$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;)(elem);
  }
  
  public Lscala/collection/mutable/Buffer; $plus$eq(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/ListBuffer;::$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;)(elem);
  }
  
  public Lscala/collection/mutable/Builder; $plus$eq(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/ListBuffer;::$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/ListBuffer;)(elem);
  }
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/collection/mutable/ListBuffer;::apply(I;)Ljava/lang/Object;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v1));
  }
  
  protected Lscala/collection/Traversable; underlying() {
    return this.(Lscala/collection/mutable/ListBuffer;::underlying()Lscala/collection/immutable/Seq;)();
  }
  
  protected Lscala/collection/Iterable; underlying() {
    return this.(Lscala/collection/mutable/ListBuffer;::underlying()Lscala/collection/immutable/Seq;)();
  }
  
  protected Lscala/collection/Seq; underlying() {
    return this.(Lscala/collection/mutable/ListBuffer;::underlying()Lscala/collection/immutable/Seq;)();
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
    Lscala/collection/GenTraversableOnce$class;.(Lscala/collection/GenTraversableOnce$class;::$init$(Lscala/collection/GenTraversableOnce;)V;)(this);
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$init$(Lscala/collection/TraversableOnce;)V;)(this);
    Lscala/collection/Parallelizable$class;.(Lscala/collection/Parallelizable$class;::$init$(Lscala/collection/Parallelizable;)V;)(this);
    Lscala/collection/GenTraversableLike$class;.(Lscala/collection/GenTraversableLike$class;::$init$(Lscala/collection/GenTraversableLike;)V;)(this);
    Lscala/collection/TraversableLike$class;.(Lscala/collection/TraversableLike$class;::$init$(Lscala/collection/TraversableLike;)V;)(this);
    Lscala/collection/generic/GenericTraversableTemplate$class;.(Lscala/collection/generic/GenericTraversableTemplate$class;::$init$(Lscala/collection/generic/GenericTraversableTemplate;)V;)(this);
    Lscala/collection/GenTraversable$class;.(Lscala/collection/GenTraversable$class;::$init$(Lscala/collection/GenTraversable;)V;)(this);
    Lscala/collection/Traversable$class;.(Lscala/collection/Traversable$class;::$init$(Lscala/collection/Traversable;)V;)(this);
    Lscala/collection/mutable/Traversable$class;.(Lscala/collection/mutable/Traversable$class;::$init$(Lscala/collection/mutable/Traversable;)V;)(this);
    Lscala/collection/GenIterableLike$class;.(Lscala/collection/GenIterableLike$class;::$init$(Lscala/collection/GenIterableLike;)V;)(this);
    Lscala/collection/GenIterable$class;.(Lscala/collection/GenIterable$class;::$init$(Lscala/collection/GenIterable;)V;)(this);
    Lscala/collection/IterableLike$class;.(Lscala/collection/IterableLike$class;::$init$(Lscala/collection/IterableLike;)V;)(this);
    Lscala/collection/Iterable$class;.(Lscala/collection/Iterable$class;::$init$(Lscala/collection/Iterable;)V;)(this);
    Lscala/collection/mutable/Iterable$class;.(Lscala/collection/mutable/Iterable$class;::$init$(Lscala/collection/mutable/Iterable;)V;)(this);
    Lscala/Function1$class;.(Lscala/Function1$class;::$init$(Lscala/Function1;)V;)(this);
    Lscala/PartialFunction$class;.(Lscala/PartialFunction$class;::$init$(Lscala/PartialFunction;)V;)(this);
    Lscala/collection/GenSeqLike$class;.(Lscala/collection/GenSeqLike$class;::$init$(Lscala/collection/GenSeqLike;)V;)(this);
    Lscala/collection/GenSeq$class;.(Lscala/collection/GenSeq$class;::$init$(Lscala/collection/GenSeq;)V;)(this);
    Lscala/collection/SeqLike$class;.(Lscala/collection/SeqLike$class;::$init$(Lscala/collection/SeqLike;)V;)(this);
    Lscala/collection/Seq$class;.(Lscala/collection/Seq$class;::$init$(Lscala/collection/Seq;)V;)(this);
    Lscala/collection/mutable/Cloneable$class;.(Lscala/collection/mutable/Cloneable$class;::$init$(Lscala/collection/mutable/Cloneable;)V;)(this);
    Lscala/collection/mutable/SeqLike$class;.(Lscala/collection/mutable/SeqLike$class;::$init$(Lscala/collection/mutable/SeqLike;)V;)(this);
    Lscala/collection/mutable/Seq$class;.(Lscala/collection/mutable/Seq$class;::$init$(Lscala/collection/mutable/Seq;)V;)(this);
    Lscala/collection/generic/Growable$class;.(Lscala/collection/generic/Growable$class;::$init$(Lscala/collection/generic/Growable;)V;)(this);
    Lscala/collection/generic/Shrinkable$class;.(Lscala/collection/generic/Shrinkable$class;::$init$(Lscala/collection/generic/Shrinkable;)V;)(this);
    Lscala/collection/generic/Subtractable$class;.(Lscala/collection/generic/Subtractable$class;::$init$(Lscala/collection/generic/Subtractable;)V;)(this);
    Lscala/collection/mutable/BufferLike$class;.(Lscala/collection/mutable/BufferLike$class;::$init$(Lscala/collection/mutable/Buffer;)V;)(this);
    Lscala/collection/mutable/Buffer$class;.(Lscala/collection/mutable/Buffer$class;::$init$(Lscala/collection/mutable/Buffer;)V;)(this);
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::$init$(Lscala/collection/mutable/Builder;)V;)(this);
    Lscala/collection/generic/TraversableForwarder$class;.(Lscala/collection/generic/TraversableForwarder$class;::$init$(Lscala/collection/generic/TraversableForwarder;)V;)(this);
    Lscala/collection/generic/IterableForwarder$class;.(Lscala/collection/generic/IterableForwarder$class;::$init$(Lscala/collection/generic/IterableForwarder;)V;)(this);
    Lscala/collection/generic/SeqForwarder$class;.(Lscala/collection/generic/SeqForwarder$class;::$init$(Lscala/collection/generic/SeqForwarder;)V;)(this);
    this.(Lscala/collection/mutable/ListBuffer;)scala$collection$mutable$ListBuffer$$start$u0020 = Lscala/collection/immutable/Nil$;.MODULE$;
    this.(Lscala/collection/mutable/ListBuffer;)exported$u0020 = false;
    this.(Lscala/collection/mutable/ListBuffer;)len$u0020 = 0;
  }
}
