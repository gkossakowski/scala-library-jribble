public interface Lscala/collection/mutable/SynchronizedMap; extends Lscala/collection/mutable/Map;, Lscala/ScalaObject; {
  
  public Lscala/Option; scala$collection$mutable$SynchronizedMap$$super$get(Ljava/lang/Object; key);
  
  public Lscala/collection/Iterator; scala$collection$mutable$SynchronizedMap$$super$iterator();
  
  public Lscala/collection/mutable/SynchronizedMap; scala$collection$mutable$SynchronizedMap$$super$$plus$eq(Lscala/Tuple2; kv);
  
  public Lscala/collection/mutable/SynchronizedMap; scala$collection$mutable$SynchronizedMap$$super$$minus$eq(Ljava/lang/Object; key);
  
  public I; scala$collection$mutable$SynchronizedMap$$super$size();
  
  public Lscala/Option; scala$collection$mutable$SynchronizedMap$$super$put(Ljava/lang/Object; key, Ljava/lang/Object; value);
  
  public V; scala$collection$mutable$SynchronizedMap$$super$update(Ljava/lang/Object; key, Ljava/lang/Object; value);
  
  public Lscala/Option; scala$collection$mutable$SynchronizedMap$$super$remove(Ljava/lang/Object; key);
  
  public V; scala$collection$mutable$SynchronizedMap$$super$clear();
  
  public Ljava/lang/Object; scala$collection$mutable$SynchronizedMap$$super$getOrElseUpdate(Ljava/lang/Object; key, Lscala/Function0; op);
  
  public Lscala/collection/mutable/SynchronizedMap; scala$collection$mutable$SynchronizedMap$$super$transform(Lscala/Function2; f);
  
  public Lscala/collection/mutable/SynchronizedMap; scala$collection$mutable$SynchronizedMap$$super$retain(Lscala/Function2; p);
  
  public Lscala/collection/Iterable; scala$collection$mutable$SynchronizedMap$$super$values();
  
  public Lscala/collection/Iterator; scala$collection$mutable$SynchronizedMap$$super$valuesIterator();
  
  public Lscala/collection/mutable/Map; scala$collection$mutable$SynchronizedMap$$super$clone();
  
  public V; scala$collection$mutable$SynchronizedMap$$super$foreach(Lscala/Function1; f);
  
  public Ljava/lang/Object; scala$collection$mutable$SynchronizedMap$$super$apply(Ljava/lang/Object; key);
  
  public Lscala/collection/Set; scala$collection$mutable$SynchronizedMap$$super$keySet();
  
  public Lscala/collection/Iterable; scala$collection$mutable$SynchronizedMap$$super$keys();
  
  public Lscala/collection/Iterator; scala$collection$mutable$SynchronizedMap$$super$keysIterator();
  
  public Z; scala$collection$mutable$SynchronizedMap$$super$isEmpty();
  
  public Z; scala$collection$mutable$SynchronizedMap$$super$contains(Ljava/lang/Object; key);
  
  public Z; scala$collection$mutable$SynchronizedMap$$super$isDefinedAt(Ljava/lang/Object; key);
  
  public Lscala/Option; get(Ljava/lang/Object; key);
  
  public Lscala/collection/Iterator; iterator();
  
  public Lscala/collection/mutable/SynchronizedMap; $plus$eq(Lscala/Tuple2; kv);
  
  public Lscala/collection/mutable/SynchronizedMap; $minus$eq(Ljava/lang/Object; key);
  
  public I; size();
  
  public Lscala/Option; put(Ljava/lang/Object; key, Ljava/lang/Object; value);
  
  public V; update(Ljava/lang/Object; key, Ljava/lang/Object; value);
  
  public Lscala/Option; remove(Ljava/lang/Object; key);
  
  public V; clear();
  
  public Ljava/lang/Object; getOrElseUpdate(Ljava/lang/Object; key, Lscala/Function0; `default`);
  
  public Lscala/collection/mutable/SynchronizedMap; transform(Lscala/Function2; f);
  
  public Lscala/collection/mutable/SynchronizedMap; retain(Lscala/Function2; p);
  
  public Lscala/collection/Iterable; values();
  
  public Lscala/collection/Iterator; valuesIterator();
  
  public Lscala/collection/mutable/Map; clone();
  
  public V; foreach(Lscala/Function1; f);
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; key);
  
  public Lscala/collection/Set; keySet();
  
  public Lscala/collection/Iterable; keys();
  
  public Lscala/collection/Iterator; keysIterator();
  
  public Z; isEmpty();
  
  public Z; contains(Ljava/lang/Object; key);
  
  public Z; isDefinedAt(Ljava/lang/Object; key);
}
