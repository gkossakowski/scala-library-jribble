public final class Lscala/collection/mutable/OpenHashMap$$anonfun$apply$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final V; apply(Lscala/Tuple2; x0$1) {
    Lscala/Tuple2; temp1 = x0$1;
    if ((temp1 != null))
      {
        this.(Lscala/collection/mutable/OpenHashMap$$anonfun$apply$1;)dict$1.(Lscala/collection/mutable/OpenHashMap;::update(Ljava/lang/Object;Ljava/lang/Object;)V;)(temp1.(Lscala/Tuple2;::_1()Ljava/lang/Object;)(), temp1.(Lscala/Tuple2;::_2()Ljava/lang/Object;)());
      }
    else
      {
        throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp1));
      }
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    this.(Lscala/collection/mutable/OpenHashMap$$anonfun$apply$1;::apply(Lscala/Tuple2;)V;)(v1.<cast>(Lscala/Tuple2;));
    return Lscala/runtime/BoxedUnit;.UNIT;
  }
  
  private Lscala/collection/mutable/OpenHashMap; dict$1;
  
  public this(Lscala/collection/mutable/OpenHashMap; dict$1) {
    this.(Lscala/collection/mutable/OpenHashMap$$anonfun$apply$1;)dict$1 = dict$1;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
