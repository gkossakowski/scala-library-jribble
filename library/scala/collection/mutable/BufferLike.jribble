public interface Lscala/collection/mutable/BufferLike; extends Lscala/collection/generic/Growable;, Lscala/collection/generic/Shrinkable;, Lscala/collection/script/Scriptable;, Lscala/collection/generic/Subtractable;, Lscala/collection/mutable/SeqLike;, Lscala/ScalaObject; {
  
  public Ljava/lang/Object; apply(I; n);
  
  public V; update(I; n, Ljava/lang/Object; newelem);
  
  public I; length();
  
  public Lscala/collection/mutable/Buffer; $plus$eq(Ljava/lang/Object; elem);
  
  public V; clear();
  
  public Lscala/collection/mutable/Buffer; $plus$eq$colon(Ljava/lang/Object; elem);
  
  public V; insertAll(I; n, Lscala/collection/Traversable; elems);
  
  public Ljava/lang/Object; remove(I; n);
  
  public V; remove(I; n, I; count);
  
  public Lscala/collection/mutable/Buffer; $minus$eq(Ljava/lang/Object; x);
  
  public Lscala/collection/mutable/Buffer; $plus$plus$eq$colon(Lscala/collection/TraversableOnce; xs);
  
  public V; append(Lscala/collection/Seq; elems);
  
  public V; appendAll(Lscala/collection/TraversableOnce; xs);
  
  public V; prepend(Lscala/collection/Seq; elems);
  
  public V; prependAll(Lscala/collection/TraversableOnce; xs);
  
  public V; insert(I; n, Lscala/collection/Seq; elems);
  
  public V; trimStart(I; n);
  
  public V; trimEnd(I; n);
  
  public V; $less$less(Lscala/collection/script/Message; cmd);
  
  public Ljava/lang/String; stringPrefix();
  
  public Lscala/collection/Seq; readOnly();
  
  public V; $plus$plus$eq(Ljava/lang/Object; src, I; start, I; len);
  
  public Lscala/collection/mutable/Buffer; $plus$plus$colon(Lscala/collection/mutable/Traversable; xs);
  
  public Lscala/collection/mutable/Buffer; $plus$colon(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/Buffer; $plus(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/Buffer; $plus(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems);
  
  public Lscala/collection/mutable/Buffer; $plus$plus(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/Buffer; $minus(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/Buffer; $minus(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems);
  
  public Lscala/collection/mutable/Buffer; $minus$minus(Lscala/collection/TraversableOnce; xs);
}
