public final class Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final V; apply(I; i$1) {
    if (((this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;)$outer$u0020.(Lscala/collection/mutable/FlatHashTable;::table()Ljava/lang/Object;[)()[i$1] != null) && !(this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;)$outer$u0020.(Lscala/collection/mutable/FlatHashTable;::containsEntry(Ljava/lang/Object;)Z;)(this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;)$outer$u0020.(Lscala/collection/mutable/FlatHashTable;::table()Ljava/lang/Object;[)()[i$1]))))
      {
        Lscala/Predef$;.MODULE$.(Lscala/Predef$;::assert(Z;Lscala/Function0;)V;)(false, (new (Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$1;::this(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;I;)V;)(this, i$1)));
      }
    else
      {
        
      }
  }
  
  private Lscala/collection/mutable/FlatHashTable; $outer$u0020;
  
  public Lscala/collection/mutable/FlatHashTable; scala$collection$mutable$FlatHashTable$$anonfun$$$outer() {
    return this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;)$outer$u0020;
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;::apply(I;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(v1));
    return Lscala/runtime/BoxedUnit;.UNIT;
  }
  
  public this(Lscala/collection/mutable/FlatHashTable; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;)$outer$u0020 = $outer;
      }
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
