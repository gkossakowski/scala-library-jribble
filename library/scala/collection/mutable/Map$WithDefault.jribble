public class Lscala/collection/mutable/Map$WithDefault; extends Lscala/collection/Map$WithDefault; implements Lscala/collection/mutable/Map;, Lscala/ScalaObject; {
  
  public Lscala/collection/mutable/Map; seq() {
    return Lscala/collection/mutable/Map$class;.(Lscala/collection/mutable/Map$class;::seq(Lscala/collection/mutable/Map;)Lscala/collection/mutable/Map;)(this);
  }
  
  public Lscala/collection/mutable/Builder; newBuilder() {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::newBuilder(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Builder;)(this);
  }
  
  public Lscala/Option; put(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::put(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;)(this, key, value);
  }
  
  public V; update(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::update(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;)V;)(this, key, value);
  }
  
  public Lscala/collection/mutable/Map; $plus(Lscala/Tuple2; elem1, Lscala/Tuple2; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::$plus(Lscala/collection/mutable/MapLike;Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/Map;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/mutable/Map; $plus$plus(Lscala/collection/GenTraversableOnce; xs) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::$plus$plus(Lscala/collection/mutable/MapLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;)(this, xs);
  }
  
  public Lscala/Option; remove(Ljava/lang/Object; key) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::remove(Lscala/collection/mutable/MapLike;Ljava/lang/Object;)Lscala/Option;)(this, key);
  }
  
  public Lscala/Option; removeKey(Ljava/lang/Object; key) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::removeKey(Lscala/collection/mutable/MapLike;Ljava/lang/Object;)Lscala/Option;)(this, key);
  }
  
  public V; clear() {
    Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::clear(Lscala/collection/mutable/MapLike;)V;)(this);
  }
  
  public Ljava/lang/Object; getOrElseUpdate(Ljava/lang/Object; key, Lscala/Function0; op) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::getOrElseUpdate(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;)(this, key, op);
  }
  
  public Lscala/collection/mutable/MapLike; transform(Lscala/Function2; f) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::transform(Lscala/collection/mutable/MapLike;Lscala/Function2;)Lscala/collection/mutable/MapLike;)(this, f);
  }
  
  public Lscala/collection/mutable/MapLike; retain(Lscala/Function2; p) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::retain(Lscala/collection/mutable/MapLike;Lscala/Function2;)Lscala/collection/mutable/MapLike;)(this, p);
  }
  
  public Lscala/collection/mutable/Map; clone() {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::clone(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Map;)(this);
  }
  
  public Lscala/collection/mutable/Map; result() {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::result(Lscala/collection/mutable/MapLike;)Lscala/collection/mutable/Map;)(this);
  }
  
  public Lscala/collection/mutable/Map; $minus(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::$minus(Lscala/collection/mutable/MapLike;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/mutable/Map; $minus$minus(Lscala/collection/GenTraversableOnce; xs) {
    return Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::$minus$minus(Lscala/collection/mutable/MapLike;Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;)(this, xs);
  }
  
  public final Ljava/lang/Object; scala$collection$mutable$Cloneable$$super$clone() {
    return super.(Ljava/lang/Object;::clone()Ljava/lang/Object;)();
  }
  
  public Lscala/collection/generic/Shrinkable; $minus$eq(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/generic/Shrinkable$class;.(Lscala/collection/generic/Shrinkable$class;::$minus$eq(Lscala/collection/generic/Shrinkable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Shrinkable;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/generic/Shrinkable; $minus$minus$eq(Lscala/collection/TraversableOnce; xs) {
    return Lscala/collection/generic/Shrinkable$class;.(Lscala/collection/generic/Shrinkable$class;::$minus$minus$eq(Lscala/collection/generic/Shrinkable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Shrinkable;)(this, xs);
  }
  
  public V; sizeHint(I; size) {
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHint(Lscala/collection/mutable/Builder;I;)V;)(this, size);
  }
  
  public V; sizeHint(Lscala/collection/TraversableLike; coll, I; delta) {
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHint(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I;)V;)(this, coll, delta);
  }
  
  public V; sizeHintBounded(I; size, Lscala/collection/TraversableLike; boundingColl) {
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHintBounded(Lscala/collection/mutable/Builder;I;Lscala/collection/TraversableLike;)V;)(this, size, boundingColl);
  }
  
  public Lscala/collection/mutable/Builder; mapResult(Lscala/Function1; f) {
    return Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::mapResult(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;)(this, f);
  }
  
  public I; sizeHint$default$2() {
    return Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHint$default$2(Lscala/collection/mutable/Builder;)I;)(this);
  }
  
  public Lscala/collection/generic/Growable; $plus$eq(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/generic/Growable$class;.(Lscala/collection/generic/Growable$class;::$plus$eq(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/generic/Growable; $plus$plus$eq(Lscala/collection/TraversableOnce; xs) {
    return Lscala/collection/generic/Growable$class;.(Lscala/collection/generic/Growable$class;::$plus$plus$eq(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;)(this, xs);
  }
  
  public Lscala/collection/generic/GenericCompanion; companion() {
    return Lscala/collection/mutable/Iterable$class;.(Lscala/collection/mutable/Iterable$class;::companion(Lscala/collection/mutable/Iterable;)Lscala/collection/generic/GenericCompanion;)(this);
  }
  
  private Lscala/collection/mutable/Map; underlying;
  
  private Lscala/Function1; d;
  
  public Lscala/collection/mutable/Map$WithDefault; $plus$eq(Lscala/Tuple2; kv) {
    this.(Lscala/collection/mutable/Map$WithDefault;)underlying.(Lscala/collection/mutable/MapLike;::$plus$eq(Lscala/Tuple2;)Lscala/collection/mutable/MapLike;)(kv);
    return this;
  }
  
  public Lscala/collection/mutable/Map$WithDefault; $minus$eq(Ljava/lang/Object; key) {
    this.(Lscala/collection/mutable/Map$WithDefault;)underlying.(Lscala/collection/mutable/MapLike;::$minus$eq(Ljava/lang/Object;)Lscala/collection/mutable/MapLike;)(key);
    return this;
  }
  
  public Lscala/collection/mutable/Map$WithDefault; empty() {
    return (new (Lscala/collection/mutable/Map$WithDefault;::this(Lscala/collection/mutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/mutable/Map$WithDefault;)underlying.(Lscala/collection/mutable/Map;::empty()Lscala/collection/mutable/Map;)(), this.(Lscala/collection/mutable/Map$WithDefault;)d));
  }
  
  public Lscala/collection/mutable/Map$WithDefault; updated(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return (new (Lscala/collection/mutable/Map$WithDefault;::this(Lscala/collection/mutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/mutable/Map$WithDefault;)underlying.(Lscala/collection/mutable/MapLike;::updated(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map;)(key, value), this.(Lscala/collection/mutable/Map$WithDefault;)d));
  }
  
  public Lscala/collection/mutable/Map$WithDefault; $plus(Lscala/Tuple2; kv) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::updated(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map$WithDefault;)(kv.(Lscala/Tuple2;::_1()Ljava/lang/Object;)(), kv.(Lscala/Tuple2;::_2()Ljava/lang/Object;)());
  }
  
  public Lscala/collection/mutable/Map$WithDefault; $minus(Ljava/lang/Object; key) {
    return (new (Lscala/collection/mutable/Map$WithDefault;::this(Lscala/collection/mutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/mutable/Map$WithDefault;)underlying.(Lscala/collection/mutable/MapLike;::$minus(Ljava/lang/Object;)Lscala/collection/mutable/Map;)(key), this.(Lscala/collection/mutable/Map$WithDefault;)d));
  }
  
  public Lscala/collection/mutable/Map; withDefault(Lscala/Function1; d) {
    return (new (Lscala/collection/mutable/Map$WithDefault;::this(Lscala/collection/mutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/mutable/Map$WithDefault;)underlying, d));
  }
  
  public Lscala/collection/mutable/Map; withDefaultValue(Ljava/lang/Object; d$2) {
    return (new (Lscala/collection/mutable/Map$WithDefault;::this(Lscala/collection/mutable/Map;Lscala/Function1;)V;)(this.(Lscala/collection/mutable/Map$WithDefault;)underlying, (new (Lscala/collection/mutable/Map$WithDefault$$anonfun$withDefaultValue$2;::this(Lscala/collection/mutable/Map$WithDefault;Ljava/lang/Object;)V;)(this, d$2))));
  }
  
  public Lscala/collection/GenTraversable; toTraversable() {
    return this.(Lscala/collection/TraversableLike;::toTraversable()Lscala/collection/Traversable;)();
  }
  
  public Lscala/collection/GenMap; groupBy(Lscala/Function1; f) {
    return this.(Lscala/collection/TraversableLike;::groupBy(Lscala/Function1;)Lscala/collection/immutable/Map;)(f);
  }
  
  public Lscala/collection/generic/Subtractable; repr() {
    return this.(Lscala/collection/TraversableLike;::repr()Ljava/lang/Object;)().<cast>(Lscala/collection/generic/Subtractable;);
  }
  
  public Lscala/collection/TraversableView; view(I; from, I; until) {
    return this.(Lscala/collection/IterableLike;::view(I;I;)Lscala/collection/IterableView;)(from, until);
  }
  
  public Lscala/collection/TraversableView; view() {
    return this.(Lscala/collection/IterableLike;::view()Lscala/collection/IterableView;)();
  }
  
  public Lscala/collection/GenIterable; toIterable() {
    return this.(Lscala/collection/IterableLike;::toIterable()Lscala/collection/Iterable;)();
  }
  
  public Lscala/collection/Traversable; toCollection(Ljava/lang/Object; repr) {
    return this.(Lscala/collection/IterableLike;::toCollection(Ljava/lang/Object;)Lscala/collection/Iterable;)(repr);
  }
  
  public Lscala/collection/Traversable; thisCollection() {
    return this.(Lscala/collection/IterableLike;::thisCollection()Lscala/collection/Iterable;)();
  }
  
  public Lscala/collection/GenSeq; toSeq() {
    return this.(Lscala/collection/MapLike;::toSeq()Lscala/collection/Seq;)();
  }
  
  public Ljava/lang/Object; filterNot(Lscala/Function1; p) {
    return this.(Lscala/collection/MapLike;::filterNot(Lscala/Function1;)Lscala/collection/Map;)(p);
  }
  
  public Lscala/collection/generic/Subtractable; $minus$minus(Lscala/collection/GenTraversableOnce; xs) {
    return this.(Lscala/collection/mutable/MapLike;::$minus$minus(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;)(xs);
  }
  
  public Lscala/collection/generic/Subtractable; $minus(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return this.(Lscala/collection/mutable/MapLike;::$minus(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/mutable/Map;)(elem1, elem2, elems);
  }
  
  public Ljava/lang/Object; result() {
    return this.(Lscala/collection/mutable/MapLike;::result()Lscala/collection/mutable/Map;)();
  }
  
  public Ljava/lang/Object; clone() {
    return this.(Lscala/collection/mutable/MapLike;::clone()Lscala/collection/mutable/Map;)();
  }
  
  public Lscala/collection/Map; $plus$plus(Lscala/collection/GenTraversableOnce; xs) {
    return this.(Lscala/collection/mutable/MapLike;::$plus$plus(Lscala/collection/GenTraversableOnce;)Lscala/collection/mutable/Map;)(xs);
  }
  
  public Lscala/collection/Map; $plus(Lscala/Tuple2; kv1, Lscala/Tuple2; kv2, Lscala/collection/Seq; kvs) {
    return this.(Lscala/collection/mutable/MapLike;::$plus(Lscala/Tuple2;Lscala/Tuple2;Lscala/collection/Seq;)Lscala/collection/mutable/Map;)(kv1, kv2, kvs);
  }
  
  public Lscala/collection/TraversableOnce; seq() {
    return this.(Lscala/collection/mutable/Map;::seq()Lscala/collection/mutable/Map;)();
  }
  
  public Lscala/collection/Traversable; seq() {
    return this.(Lscala/collection/mutable/Map;::seq()Lscala/collection/mutable/Map;)();
  }
  
  public Lscala/collection/Iterable; seq() {
    return this.(Lscala/collection/mutable/Map;::seq()Lscala/collection/mutable/Map;)();
  }
  
  public Lscala/collection/Map; seq() {
    return this.(Lscala/collection/mutable/Map;::seq()Lscala/collection/mutable/Map;)();
  }
  
  public Lscala/collection/mutable/Traversable; seq() {
    return this.(Lscala/collection/mutable/Map;::seq()Lscala/collection/mutable/Map;)();
  }
  
  public Lscala/collection/mutable/Iterable; seq() {
    return this.(Lscala/collection/mutable/Map;::seq()Lscala/collection/mutable/Map;)();
  }
  
  public Ljava/lang/Object; $minus(Ljava/lang/Object; key) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$minus(Ljava/lang/Object;)Lscala/collection/mutable/Map$WithDefault;)(key);
  }
  
  public Lscala/collection/generic/Subtractable; $minus(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$minus(Ljava/lang/Object;)Lscala/collection/mutable/Map$WithDefault;)(elem);
  }
  
  public Lscala/collection/Map; $minus(Ljava/lang/Object; key) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$minus(Ljava/lang/Object;)Lscala/collection/mutable/Map$WithDefault;)(key);
  }
  
  public Lscala/collection/mutable/Map; $minus(Ljava/lang/Object; key) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$minus(Ljava/lang/Object;)Lscala/collection/mutable/Map$WithDefault;)(key);
  }
  
  public Lscala/collection/GenMap; $plus(Lscala/Tuple2; kv) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$plus(Lscala/Tuple2;)Lscala/collection/mutable/Map$WithDefault;)(kv);
  }
  
  public Lscala/collection/Map; $plus(Lscala/Tuple2; kv) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$plus(Lscala/Tuple2;)Lscala/collection/mutable/Map$WithDefault;)(kv);
  }
  
  public Lscala/collection/mutable/Map; $plus(Lscala/Tuple2; kv) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$plus(Lscala/Tuple2;)Lscala/collection/mutable/Map$WithDefault;)(kv);
  }
  
  public Lscala/collection/Map; updated(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::updated(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map$WithDefault;)(key, value);
  }
  
  public Lscala/collection/mutable/Map; updated(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::updated(Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/Map$WithDefault;)(key, value);
  }
  
  public Lscala/collection/Map; empty() {
    return this.(Lscala/collection/mutable/Map$WithDefault;::empty()Lscala/collection/mutable/Map$WithDefault;)();
  }
  
  public Lscala/collection/mutable/Map; empty() {
    return this.(Lscala/collection/mutable/Map$WithDefault;::empty()Lscala/collection/mutable/Map$WithDefault;)();
  }
  
  public Lscala/collection/generic/Shrinkable; $minus$eq(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$minus$eq(Ljava/lang/Object;)Lscala/collection/mutable/Map$WithDefault;)(elem);
  }
  
  public Lscala/collection/mutable/MapLike; $minus$eq(Ljava/lang/Object; key) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$minus$eq(Ljava/lang/Object;)Lscala/collection/mutable/Map$WithDefault;)(key);
  }
  
  public Lscala/collection/generic/Growable; $plus$eq(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$plus$eq(Lscala/Tuple2;)Lscala/collection/mutable/Map$WithDefault;)(elem.<cast>(Lscala/Tuple2;));
  }
  
  public Lscala/collection/mutable/Builder; $plus$eq(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$plus$eq(Lscala/Tuple2;)Lscala/collection/mutable/Map$WithDefault;)(elem.<cast>(Lscala/Tuple2;));
  }
  
  public Lscala/collection/mutable/MapLike; $plus$eq(Lscala/Tuple2; kv) {
    return this.(Lscala/collection/mutable/Map$WithDefault;::$plus$eq(Lscala/Tuple2;)Lscala/collection/mutable/Map$WithDefault;)(kv);
  }
  
  public this(Lscala/collection/mutable/Map; underlying, Lscala/Function1; d) {
    this.(Lscala/collection/mutable/Map$WithDefault;)underlying = underlying;
    this.(Lscala/collection/mutable/Map$WithDefault;)d = d;
    (Lscala/collection/Map$WithDefault;::super(Lscala/collection/Map;Lscala/Function1;)V;)(underlying, d);
    Lscala/collection/mutable/Traversable$class;.(Lscala/collection/mutable/Traversable$class;::$init$(Lscala/collection/mutable/Traversable;)V;)(this);
    Lscala/collection/mutable/Iterable$class;.(Lscala/collection/mutable/Iterable$class;::$init$(Lscala/collection/mutable/Iterable;)V;)(this);
    Lscala/collection/generic/Growable$class;.(Lscala/collection/generic/Growable$class;::$init$(Lscala/collection/generic/Growable;)V;)(this);
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::$init$(Lscala/collection/mutable/Builder;)V;)(this);
    Lscala/collection/generic/Shrinkable$class;.(Lscala/collection/generic/Shrinkable$class;::$init$(Lscala/collection/generic/Shrinkable;)V;)(this);
    Lscala/collection/mutable/Cloneable$class;.(Lscala/collection/mutable/Cloneable$class;::$init$(Lscala/collection/mutable/Cloneable;)V;)(this);
    Lscala/collection/mutable/MapLike$class;.(Lscala/collection/mutable/MapLike$class;::$init$(Lscala/collection/mutable/MapLike;)V;)(this);
    Lscala/collection/mutable/Map$class;.(Lscala/collection/mutable/Map$class;::$init$(Lscala/collection/mutable/Map;)V;)(this);
  }
}
