public interface Lscala/collection/mutable/SetLike; extends Lscala/collection/SetLike;, Lscala/collection/script/Scriptable;, Lscala/collection/mutable/Builder;, Lscala/collection/generic/Growable;, Lscala/collection/generic/Shrinkable;, Lscala/collection/mutable/Cloneable;, Lscala/ScalaObject; {
  
  public Ljava/lang/Object; scala$collection$mutable$SetLike$$super$map(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf);
  
  public Lscala/collection/mutable/Builder; newBuilder();
  
  public Ljava/lang/Object; map(Lscala/Function1; f, Lscala/collection/generic/CanBuildFrom; bf);
  
  public Z; add(Ljava/lang/Object; elem);
  
  public Z; remove(Ljava/lang/Object; elem);
  
  public V; update(Ljava/lang/Object; elem, Z; included);
  
  public Lscala/collection/mutable/SetLike; $plus$eq(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SetLike; $minus$eq(Ljava/lang/Object; elem);
  
  public V; retain(Lscala/Function1; p);
  
  public V; clear();
  
  public Lscala/collection/mutable/Set; clone();
  
  public Lscala/collection/mutable/Set; result();
  
  public Lscala/collection/mutable/Set; $plus(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/Set; $plus(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems);
  
  public Lscala/collection/mutable/Set; $plus$plus(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/Set; $minus(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/Set; $minus(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems);
  
  public Lscala/collection/mutable/Set; $minus$minus(Lscala/collection/TraversableOnce; xs);
  
  public V; $less$less(Lscala/collection/script/Message; cmd);
}
