public final class Lscala/collection/mutable/WrappedArray$; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  public static Lscala/collection/mutable/WrappedArray$; MODULE$ = new (Lscala/collection/mutable/WrappedArray$;::this()V;)();
  
  private Lscala/collection/mutable/WrappedArray$ofRef; EmptyWrappedArray$u0020;
  
  private Lscala/collection/mutable/WrappedArray$ofRef; EmptyWrappedArray() {
    return this.(Lscala/collection/mutable/WrappedArray$;)EmptyWrappedArray$u0020;
  }
  
  public Lscala/collection/mutable/WrappedArray; empty() {
    return this.(Lscala/collection/mutable/WrappedArray$;::EmptyWrappedArray()Lscala/collection/mutable/WrappedArray$ofRef;)();
  }
  
  public Lscala/collection/mutable/WrappedArray; make(Ljava/lang/Object; x) {
    Ljava/lang/Object; temp1 = x;
    Lscala/collection/mutable/WrappedArray; $2$;
    if ((temp1 == null))
      {
        $2$ = null;
      }
    else
      {
        Lscala/collection/mutable/WrappedArray; $3$;
        if (temp1.<instanceof>(Ljava/lang/Object;[))
          {
            $3$ = (new (Lscala/collection/mutable/WrappedArray$ofRef;::this(Ljava/lang/Object;[)V;)(temp1.<cast>(Ljava/lang/Object;[)));
          }
        else
          {
            Lscala/collection/mutable/WrappedArray; $4$;
            if (temp1.<instanceof>(I;[))
              {
                $4$ = (new (Lscala/collection/mutable/WrappedArray$ofInt;::this(I;[)V;)(temp1.<cast>(I;[)));
              }
            else
              {
                Lscala/collection/mutable/WrappedArray; $5$;
                if (temp1.<instanceof>(D;[))
                  {
                    $5$ = (new (Lscala/collection/mutable/WrappedArray$ofDouble;::this(D;[)V;)(temp1.<cast>(D;[)));
                  }
                else
                  {
                    Lscala/collection/mutable/WrappedArray; $6$;
                    if (temp1.<instanceof>(J;[))
                      {
                        $6$ = (new (Lscala/collection/mutable/WrappedArray$ofLong;::this(J;[)V;)(temp1.<cast>(J;[)));
                      }
                    else
                      {
                        Lscala/collection/mutable/WrappedArray; $7$;
                        if (temp1.<instanceof>(F;[))
                          {
                            $7$ = (new (Lscala/collection/mutable/WrappedArray$ofFloat;::this(F;[)V;)(temp1.<cast>(F;[)));
                          }
                        else
                          {
                            Lscala/collection/mutable/WrappedArray; $8$;
                            if (temp1.<instanceof>(C;[))
                              {
                                $8$ = (new (Lscala/collection/mutable/WrappedArray$ofChar;::this(C;[)V;)(temp1.<cast>(C;[)));
                              }
                            else
                              {
                                Lscala/collection/mutable/WrappedArray; $9$;
                                if (temp1.<instanceof>(B;[))
                                  {
                                    $9$ = (new (Lscala/collection/mutable/WrappedArray$ofByte;::this(B;[)V;)(temp1.<cast>(B;[)));
                                  }
                                else
                                  {
                                    Lscala/collection/mutable/WrappedArray; $10$;
                                    if (temp1.<instanceof>(S;[))
                                      {
                                        $10$ = (new (Lscala/collection/mutable/WrappedArray$ofShort;::this(S;[)V;)(temp1.<cast>(S;[)));
                                      }
                                    else
                                      {
                                        Lscala/collection/mutable/WrappedArray; $11$;
                                        if (temp1.<instanceof>(Z;[))
                                          {
                                            $11$ = (new (Lscala/collection/mutable/WrappedArray$ofBoolean;::this(Z;[)V;)(temp1.<cast>(Z;[)));
                                          }
                                        else
                                          {
                                            Lscala/collection/mutable/WrappedArray$ofUnit; $12$;
                                            if (temp1.<instanceof>(Lscala/runtime/BoxedUnit;[))
                                              {
                                                $12$ = (new (Lscala/collection/mutable/WrappedArray$ofUnit;::this(Lscala/runtime/BoxedUnit;[)V;)(temp1.<cast>(Lscala/runtime/BoxedUnit;[)));
                                              }
                                            else
                                              {
                                                throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp1));
                                              }
                                            $11$ = $12$;
                                          }
                                        $10$ = $11$;
                                      }
                                    $9$ = $10$;
                                  }
                                $8$ = $9$;
                              }
                            $7$ = $8$;
                          }
                        $6$ = $7$;
                      }
                    $5$ = $6$;
                  }
                $4$ = $5$;
              }
            $3$ = $4$;
          }
        $2$ = $3$;
      }
    return $2$;
  }
  
  public Lscala/collection/generic/CanBuildFrom; canBuildFrom(Lscala/reflect/ClassManifest; m$1) {
    return (new (Lscala/collection/mutable/WrappedArray$$anon$1;::this(Lscala/reflect/ClassManifest;)V;)(m$1));
  }
  
  public Lscala/collection/mutable/Builder; newBuilder() {
    return (new (Lscala/collection/mutable/ArrayBuffer;::this()V;)());
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
    this.(Lscala/collection/mutable/WrappedArray$;)EmptyWrappedArray$u0020 = (new (Lscala/collection/mutable/WrappedArray$ofRef;::this(Ljava/lang/Object;[)V;)(new Ljava/lang/Object;[0]));
  }
}
