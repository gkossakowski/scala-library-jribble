public interface Lscala/collection/mutable/StackProxy; extends Lscala/Proxy;, Lscala/ScalaObject; {
  
  public Lscala/collection/mutable/Stack; self();
  
  public Ljava/lang/Object; apply(I; n);
  
  public I; length();
  
  public Z; isEmpty();
  
  public Lscala/collection/mutable/StackProxy; $plus$eq(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/StackProxy; pushAll(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/StackProxy; $plus$plus$eq(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/StackProxy; push(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems);
  
  public Ljava/lang/Object; top();
  
  public Ljava/lang/Object; pop();
  
  public V; clear();
  
  public Lscala/collection/Iterator; iterator();
  
  public Lscala/collection/immutable/List; toList();
  
  public Lscala/collection/mutable/Stack; clone();
}
