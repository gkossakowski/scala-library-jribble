public abstract class Lscala/collection/mutable/ObservableSet$class; {
  
  public static Lscala/collection/mutable/ObservableSet; $plus$eq(Lscala/collection/mutable/ObservableSet; $this, Ljava/lang/Object; elem$1) {
    if (!($this.(Lscala/collection/SetLike;::contains(Ljava/lang/Object;)Z;)(elem$1)))
      {
        $this.(Lscala/collection/mutable/ObservableSet;::scala$collection$mutable$ObservableSet$$super$$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/ObservableSet;)(elem$1);
        $this.(Lscala/collection/mutable/Publisher;::publish(Ljava/lang/Object;)V;)((new (Lscala/collection/mutable/ObservableSet$$anon$1;::this(Lscala/collection/mutable/ObservableSet;Ljava/lang/Object;)V;)($this, elem$1)));
      }
    else
      {
        
      }
    return $this;
  }
  
  public static Lscala/collection/mutable/ObservableSet; $minus$eq(Lscala/collection/mutable/ObservableSet; $this, Ljava/lang/Object; elem$2) {
    if ($this.(Lscala/collection/SetLike;::contains(Ljava/lang/Object;)Z;)(elem$2))
      {
        $this.(Lscala/collection/mutable/ObservableSet;::scala$collection$mutable$ObservableSet$$super$$minus$eq(Ljava/lang/Object;)Lscala/collection/mutable/ObservableSet;)(elem$2);
        $this.(Lscala/collection/mutable/Publisher;::publish(Ljava/lang/Object;)V;)((new (Lscala/collection/mutable/ObservableSet$$anon$2;::this(Lscala/collection/mutable/ObservableSet;Ljava/lang/Object;)V;)($this, elem$2)));
      }
    else
      {
        
      }
    return $this;
  }
  
  public static V; clear(Lscala/collection/mutable/ObservableSet; $this) {
    $this.(Lscala/collection/mutable/ObservableSet;::scala$collection$mutable$ObservableSet$$super$clear()V;)();
    $this.(Lscala/collection/mutable/Publisher;::publish(Ljava/lang/Object;)V;)((new (Lscala/collection/mutable/ObservableSet$$anon$3;::this(Lscala/collection/mutable/ObservableSet;)V;)($this)));
  }
  
  public static V; $init$(Lscala/collection/mutable/ObservableSet; $this) {
    
  }
}
