public final class Lscala/collection/mutable/HashTable$$anonfun$serializeTo$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final V; apply(Lscala/collection/mutable/HashEntry; entry) {
    this.(Lscala/collection/mutable/HashTable$$anonfun$serializeTo$1;)out$1.(Ljava/io/ObjectOutputStream;::writeObject(Ljava/lang/Object;)V;)(entry.(Lscala/collection/mutable/HashEntry;::key()Ljava/lang/Object;)());
    this.(Lscala/collection/mutable/HashTable$$anonfun$serializeTo$1;)out$1.(Ljava/io/ObjectOutputStream;::writeObject(Ljava/lang/Object;)V;)(this.(Lscala/collection/mutable/HashTable$$anonfun$serializeTo$1;)value$1.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(entry));
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    this.(Lscala/collection/mutable/HashTable$$anonfun$serializeTo$1;::apply(Lscala/collection/mutable/HashEntry;)V;)(v1.<cast>(Lscala/collection/mutable/HashEntry;));
    return Lscala/runtime/BoxedUnit;.MODULE$.(Lscala/runtime/BoxedUnit;)UNIT;
  }
  
  private Ljava/io/ObjectOutputStream; out$1;
  
  private Lscala/Function1; value$1;
  
  public this(Lscala/collection/mutable/HashTable; $outer, Ljava/io/ObjectOutputStream; out$1, Lscala/Function1; value$1) {
    this.(Lscala/collection/mutable/HashTable$$anonfun$serializeTo$1;)out$1 = out$1;
    this.(Lscala/collection/mutable/HashTable$$anonfun$serializeTo$1;)value$1 = value$1;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
