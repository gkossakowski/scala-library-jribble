public final class Lscala/collection/mutable/Publisher$$anon$1; extends Lscala/collection/mutable/HashMap; implements Lscala/collection/mutable/MultiMap; {
  
  public Lscala/collection/mutable/Set; makeSet() {
    return Lscala/collection/mutable/MultiMap$class;.(Lscala/collection/mutable/MultiMap$class;::makeSet(Lscala/collection/mutable/MultiMap;)Lscala/collection/mutable/Set;)(this);
  }
  
  public Lscala/collection/mutable/MultiMap; add(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return Lscala/collection/mutable/MultiMap$class;.(Lscala/collection/mutable/MultiMap$class;::add(Lscala/collection/mutable/MultiMap;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/MultiMap;)(this, key, value);
  }
  
  public Lscala/collection/mutable/MultiMap; addBinding(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return Lscala/collection/mutable/MultiMap$class;.(Lscala/collection/mutable/MultiMap$class;::addBinding(Lscala/collection/mutable/MultiMap;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/MultiMap;)(this, key, value);
  }
  
  public Lscala/collection/mutable/MultiMap; removeBinding(Ljava/lang/Object; key, Ljava/lang/Object; value) {
    return Lscala/collection/mutable/MultiMap$class;.(Lscala/collection/mutable/MultiMap$class;::removeBinding(Lscala/collection/mutable/MultiMap;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/mutable/MultiMap;)(this, key, value);
  }
  
  public Z; entryExists(Ljava/lang/Object; key, Lscala/Function1; p) {
    return Lscala/collection/mutable/MultiMap$class;.(Lscala/collection/mutable/MultiMap$class;::entryExists(Lscala/collection/mutable/MultiMap;Ljava/lang/Object;Lscala/Function1;)Z;)(this, key, p);
  }
  
  public this(Lscala/collection/mutable/Publisher; $outer) {
    (Lscala/collection/mutable/HashMap;::super()V;)();
    Lscala/collection/mutable/MultiMap$class;.(Lscala/collection/mutable/MultiMap$class;::$init$(Lscala/collection/mutable/MultiMap;)V;)(this);
  }
}
