public interface Lscala/collection/mutable/SynchronizedBuffer; extends Lscala/collection/mutable/Buffer;, Lscala/ScalaObject; {
  
  public I; scala$collection$mutable$SynchronizedBuffer$$super$length();
  
  public Lscala/collection/Iterator; scala$collection$mutable$SynchronizedBuffer$$super$iterator();
  
  public Ljava/lang/Object; scala$collection$mutable$SynchronizedBuffer$$super$apply(I; n);
  
  public Lscala/collection/mutable/Buffer; scala$collection$mutable$SynchronizedBuffer$$super$$plus(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedBuffer; scala$collection$mutable$SynchronizedBuffer$$super$$plus$eq(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/Buffer; scala$collection$mutable$SynchronizedBuffer$$super$$plus$plus(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/SynchronizedBuffer; scala$collection$mutable$SynchronizedBuffer$$super$$plus$plus$eq(Lscala/collection/TraversableOnce; xs);
  
  public V; scala$collection$mutable$SynchronizedBuffer$$super$appendAll(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/SynchronizedBuffer; scala$collection$mutable$SynchronizedBuffer$$super$$plus$eq$colon(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedBuffer; scala$collection$mutable$SynchronizedBuffer$$super$$plus$plus$eq$colon(Lscala/collection/TraversableOnce; xs);
  
  public V; scala$collection$mutable$SynchronizedBuffer$$super$prependAll(Lscala/collection/TraversableOnce; xs);
  
  public V; scala$collection$mutable$SynchronizedBuffer$$super$insertAll(I; n, Lscala/collection/Traversable; elems);
  
  public V; scala$collection$mutable$SynchronizedBuffer$$super$update(I; n, Ljava/lang/Object; newelem);
  
  public Ljava/lang/Object; scala$collection$mutable$SynchronizedBuffer$$super$remove(I; n);
  
  public V; scala$collection$mutable$SynchronizedBuffer$$super$clear();
  
  public V; scala$collection$mutable$SynchronizedBuffer$$super$$less$less(Lscala/collection/script/Message; cmd);
  
  public Lscala/collection/mutable/Buffer; scala$collection$mutable$SynchronizedBuffer$$super$clone();
  
  public I; scala$collection$mutable$SynchronizedBuffer$$super$hashCode();
  
  public I; length();
  
  public Lscala/collection/Iterator; iterator();
  
  public Ljava/lang/Object; apply(I; n);
  
  public Lscala/collection/mutable/Buffer; $plus(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedBuffer; $plus$eq(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/Buffer; $plus$plus(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/SynchronizedBuffer; $plus$plus$eq(Lscala/collection/TraversableOnce; xs);
  
  public V; append(Lscala/collection/Seq; elems);
  
  public V; appendAll(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/SynchronizedBuffer; $plus$eq$colon(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedBuffer; $plus$plus$eq$colon(Lscala/collection/TraversableOnce; xs);
  
  public V; prepend(Lscala/collection/Seq; elems);
  
  public V; prependAll(Lscala/collection/TraversableOnce; xs);
  
  public V; insert(I; n, Lscala/collection/Seq; elems);
  
  public V; insertAll(I; n, Lscala/collection/Traversable; xs);
  
  public V; update(I; n, Ljava/lang/Object; newelem);
  
  public Ljava/lang/Object; remove(I; n);
  
  public V; clear();
  
  public V; $less$less(Lscala/collection/script/Message; cmd);
  
  public Lscala/collection/mutable/Buffer; clone();
  
  public I; hashCode();
}
