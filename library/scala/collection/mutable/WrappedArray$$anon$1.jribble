public final class Lscala/collection/mutable/WrappedArray$$anon$1; extends Ljava/lang/Object; implements Lscala/collection/generic/CanBuildFrom; {
  
  public Lscala/collection/mutable/Builder; apply(Lscala/collection/mutable/WrappedArray; from) {
    return Lscala/collection/mutable/ArrayBuilder$;.MODULE$.(Lscala/collection/mutable/ArrayBuilder$;::make(Lscala/reflect/ClassManifest;)Lscala/collection/mutable/ArrayBuilder;)(this.(Lscala/collection/mutable/WrappedArray$$anon$1;)m$1).(Lscala/collection/mutable/Builder;::mapResult(Lscala/Function1;)Lscala/collection/mutable/Builder;)((new (Lscala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$1;::this(Lscala/collection/mutable/WrappedArray$$anon$1;)V;)(this)));
  }
  
  public Lscala/collection/mutable/Builder; apply() {
    return Lscala/collection/mutable/ArrayBuilder$;.MODULE$.(Lscala/collection/mutable/ArrayBuilder$;::make(Lscala/reflect/ClassManifest;)Lscala/collection/mutable/ArrayBuilder;)(this.(Lscala/collection/mutable/WrappedArray$$anon$1;)m$1).(Lscala/collection/mutable/Builder;::mapResult(Lscala/Function1;)Lscala/collection/mutable/Builder;)((new (Lscala/collection/mutable/WrappedArray$$anon$1$$anonfun$apply$2;::this(Lscala/collection/mutable/WrappedArray$$anon$1;)V;)(this)));
  }
  
  public Lscala/collection/mutable/Builder; apply(Ljava/lang/Object; from) {
    return this.(Lscala/collection/mutable/WrappedArray$$anon$1;::apply(Lscala/collection/mutable/WrappedArray;)Lscala/collection/mutable/Builder;)(from.<cast>(Lscala/collection/mutable/WrappedArray;));
  }
  
  private Lscala/reflect/ClassManifest; m$1;
  
  public this(Lscala/reflect/ClassManifest; m$1) {
    this.(Lscala/collection/mutable/WrappedArray$$anon$1;)m$1 = m$1;
    (Ljava/lang/Object;::super()V;)();
  }
}
