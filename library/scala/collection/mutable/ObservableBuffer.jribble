public interface Lscala/collection/mutable/ObservableBuffer; extends Lscala/collection/mutable/Buffer;, Lscala/collection/mutable/Publisher;, Lscala/ScalaObject; {
  
  public Lscala/collection/mutable/ObservableBuffer; scala$collection$mutable$ObservableBuffer$$super$$plus$eq(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/ObservableBuffer; scala$collection$mutable$ObservableBuffer$$super$$plus$eq$colon(Ljava/lang/Object; elem);
  
  public V; scala$collection$mutable$ObservableBuffer$$super$update(I; n, Ljava/lang/Object; newelem);
  
  public Ljava/lang/Object; scala$collection$mutable$ObservableBuffer$$super$remove(I; n);
  
  public V; scala$collection$mutable$ObservableBuffer$$super$clear();
  
  public Lscala/collection/mutable/ObservableBuffer; $plus$eq(Ljava/lang/Object; element);
  
  public Lscala/collection/mutable/ObservableBuffer; $plus$plus$eq(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/ObservableBuffer; $plus$eq$colon(Ljava/lang/Object; element);
  
  public V; update(I; n, Ljava/lang/Object; newelement);
  
  public Ljava/lang/Object; remove(I; n);
  
  public V; clear();
}
