public final class Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1; extends Lscala/runtime/AbstractFunction0; implements Lscala/Serializable; {
  
  public final Ljava/lang/String; apply() {
    return ((((this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1;)v1$1 + " ") + this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1;)$outer$u0020.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;::scala$collection$mutable$FlatHashTable$$anonfun$$$outer()Lscala/collection/mutable/FlatHashTable;)().(Lscala/collection/mutable/FlatHashTable;::table()Ljava/lang/Object;[)()[this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1;)v1$1]) + " ") + Lscala/Predef$;.MODULE$.(Lscala/Predef$;::refArrayOps(Ljava/lang/Object;[)Lscala/collection/mutable/ArrayOps;)(this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1;)$outer$u0020.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1;::scala$collection$mutable$FlatHashTable$$anonfun$$$outer()Lscala/collection/mutable/FlatHashTable;)().(Lscala/collection/mutable/FlatHashTable;::table()Ljava/lang/Object;[)()).(Lscala/collection/TraversableOnce;::mkString()Ljava/lang/String;)());
  }
  
  private Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1; $outer$u0020;
  
  public final Ljava/lang/Object; apply() {
    return this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1;::apply()Ljava/lang/String;)();
  }
  
  private I; v1$1;
  
  public this(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1; $outer, I; v1$1) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1;)$outer$u0020 = $outer;
      }
    this.(Lscala/collection/mutable/FlatHashTable$$anonfun$checkConsistent$1$$anonfun$apply$mcVI$sp$1;)v1$1 = v1$1;
    (Lscala/runtime/AbstractFunction0;::super()V;)();
  }
}
