public interface Lscala/collection/mutable/SynchronizedSet; extends Lscala/collection/mutable/Set;, Lscala/ScalaObject; {
  
  public I; scala$collection$mutable$SynchronizedSet$$super$size();
  
  public Z; scala$collection$mutable$SynchronizedSet$$super$isEmpty();
  
  public Z; scala$collection$mutable$SynchronizedSet$$super$contains(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedSet; scala$collection$mutable$SynchronizedSet$$super$$plus$eq(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedSet; scala$collection$mutable$SynchronizedSet$$super$$plus$plus$eq(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/SynchronizedSet; scala$collection$mutable$SynchronizedSet$$super$$minus$eq(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedSet; scala$collection$mutable$SynchronizedSet$$super$$minus$minus$eq(Lscala/collection/TraversableOnce; xs);
  
  public V; scala$collection$mutable$SynchronizedSet$$super$update(Ljava/lang/Object; elem, Z; included);
  
  public Z; scala$collection$mutable$SynchronizedSet$$super$add(Ljava/lang/Object; elem);
  
  public Z; scala$collection$mutable$SynchronizedSet$$super$remove(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/Set; scala$collection$mutable$SynchronizedSet$$super$intersect(Lscala/collection/GenSet; that);
  
  public V; scala$collection$mutable$SynchronizedSet$$super$clear();
  
  public Z; scala$collection$mutable$SynchronizedSet$$super$subsetOf(Lscala/collection/GenSet; that);
  
  public V; scala$collection$mutable$SynchronizedSet$$super$foreach(Lscala/Function1; f);
  
  public V; scala$collection$mutable$SynchronizedSet$$super$retain(Lscala/Function1; p);
  
  public Lscala/collection/immutable/List; scala$collection$mutable$SynchronizedSet$$super$toList();
  
  public Ljava/lang/String; scala$collection$mutable$SynchronizedSet$$super$toString();
  
  public V; scala$collection$mutable$SynchronizedSet$$super$$less$less(Lscala/collection/script/Message; cmd);
  
  public Lscala/collection/mutable/Set; scala$collection$mutable$SynchronizedSet$$super$clone();
  
  public I; size();
  
  public Z; isEmpty();
  
  public Z; contains(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedSet; $plus$eq(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedSet; $plus$plus$eq(Lscala/collection/TraversableOnce; xs);
  
  public Lscala/collection/mutable/SynchronizedSet; $minus$eq(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/SynchronizedSet; $minus$minus$eq(Lscala/collection/TraversableOnce; xs);
  
  public V; update(Ljava/lang/Object; elem, Z; included);
  
  public Z; add(Ljava/lang/Object; elem);
  
  public Z; remove(Ljava/lang/Object; elem);
  
  public Lscala/collection/mutable/Set; intersect(Lscala/collection/GenSet; that);
  
  public V; clear();
  
  public Z; subsetOf(Lscala/collection/GenSet; that);
  
  public V; foreach(Lscala/Function1; f);
  
  public V; retain(Lscala/Function1; p);
  
  public Lscala/collection/immutable/List; toList();
  
  public Ljava/lang/String; toString();
  
  public V; $less$less(Lscala/collection/script/Message; cmd);
  
  public Lscala/collection/mutable/Set; clone();
}
