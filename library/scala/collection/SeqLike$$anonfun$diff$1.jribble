public final class Lscala/collection/SeqLike$$anonfun$diff$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; x) {
    Ljava/lang/Object; $10$;
    if ((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/collection/SeqLike$$anonfun$diff$1;)occ$1.(Lscala/collection/MapLike;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(x)) == 0))
      {
        $10$ = this.(Lscala/collection/SeqLike$$anonfun$diff$1;)b$3.(Lscala/collection/mutable/Builder;::$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(x);
      }
    else
      {
        this.(Lscala/collection/SeqLike$$anonfun$diff$1;)occ$1.(Lscala/collection/mutable/MapLike;::update(Ljava/lang/Object;Ljava/lang/Object;)V;)(x, Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/collection/SeqLike$$anonfun$diff$1;)occ$1.(Lscala/collection/MapLike;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(x)) - 1)));
        $10$ = Lscala/runtime/BoxedUnit;.MODULE$.(Lscala/runtime/BoxedUnit;)UNIT;
      }
    return $10$;
  }
  
  private Lscala/collection/mutable/Map; occ$1;
  
  private Lscala/collection/mutable/Builder; b$3;
  
  public this(Lscala/collection/SeqLike; $outer, Lscala/collection/mutable/Map; occ$1, Lscala/collection/mutable/Builder; b$3) {
    this.(Lscala/collection/SeqLike$$anonfun$diff$1;)occ$1 = occ$1;
    this.(Lscala/collection/SeqLike$$anonfun$diff$1;)b$3 = b$3;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
