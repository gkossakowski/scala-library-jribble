public abstract class Lscala/collection/SeqViewLike$ZippedAll$class; {
  
  public static Lscala/collection/Seq; thatSeq(Lscala/collection/SeqViewLike$ZippedAll; $this) {
    return $this.(Lscala/collection/IterableViewLike$ZippedAll;::other()Lscala/collection/Iterable;)().(Lscala/collection/IterableLike;::toSeq()Lscala/collection/Seq;)();
  }
  
  public static I; length(Lscala/collection/SeqViewLike$ZippedAll; $this) {
    return Lscala/Predef$;.MODULE$.(Lscala/Predef$;::intWrapper(I;)Lscala/runtime/RichInt;)($this.(Lscala/collection/SeqViewLike$ZippedAll;::scala$collection$SeqViewLike$ZippedAll$$$outer()Lscala/collection/SeqViewLike;)().(Lscala/collection/SeqLike;::length()I;)()).(Lscala/runtime/RichInt;::max(I;)I;)($this.(Lscala/collection/SeqViewLike$ZippedAll;::thatSeq()Lscala/collection/Seq;)().(Lscala/collection/SeqLike;::length()I;)());
  }
  
  public static Lscala/Tuple2; apply(Lscala/collection/SeqViewLike$ZippedAll; $this, I; idx) {
    Ljava/lang/Object; $8$;
    if ((idx < $this.(Lscala/collection/SeqViewLike$ZippedAll;::scala$collection$SeqViewLike$ZippedAll$$$outer()Lscala/collection/SeqViewLike;)().(Lscala/collection/SeqLike;::length()I;)()))
      {
        $8$ = $this.(Lscala/collection/SeqViewLike$ZippedAll;::scala$collection$SeqViewLike$ZippedAll$$$outer()Lscala/collection/SeqViewLike;)().(Lscala/collection/SeqLike;::apply(I;)Ljava/lang/Object;)(idx);
      }
    else
      {
        $8$ = $this.(Lscala/collection/IterableViewLike$ZippedAll;::thisElem()Ljava/lang/Object;)();
      }
    Ljava/lang/Object; $10$ = $8$;
    Ljava/lang/Object; $9$;
    if ((idx < $this.(Lscala/collection/SeqViewLike$ZippedAll;::thatSeq()Lscala/collection/Seq;)().(Lscala/collection/SeqLike;::length()I;)()))
      {
        $9$ = $this.(Lscala/collection/SeqViewLike$ZippedAll;::thatSeq()Lscala/collection/Seq;)().(Lscala/collection/SeqLike;::apply(I;)Ljava/lang/Object;)(idx);
      }
    else
      {
        $9$ = $this.(Lscala/collection/IterableViewLike$ZippedAll;::thatElem()Ljava/lang/Object;)();
      }
    return (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)($10$, $9$));
  }
  
  public static V; $init$(Lscala/collection/SeqViewLike$ZippedAll; $this) {
    
  }
}
