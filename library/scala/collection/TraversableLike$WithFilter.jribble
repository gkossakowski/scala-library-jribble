public class Lscala/collection/TraversableLike$WithFilter; extends Ljava/lang/Object; implements Lscala/collection/generic/FilterMonadic;, Lscala/ScalaObject; {
  
  public Lscala/Function1; scala$collection$TraversableLike$WithFilter$$p;
  
  public Ljava/lang/Object; map(Lscala/Function1; f$4, Lscala/collection/generic/CanBuildFrom; bf) {
    Lscala/collection/mutable/Builder; b$14 = bf.(Lscala/collection/generic/CanBuildFrom;::apply(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(this.(Lscala/collection/TraversableLike$WithFilter;::scala$collection$TraversableLike$WithFilter$$$outer()Lscala/collection/TraversableLike;)().(Lscala/collection/TraversableLike;::repr()Ljava/lang/Object;)());
    this.(Lscala/collection/TraversableLike$WithFilter;::scala$collection$TraversableLike$WithFilter$$$outer()Lscala/collection/TraversableLike;)().(Lscala/collection/TraversableLike;::foreach(Lscala/Function1;)V;)((new (Lscala/collection/TraversableLike$WithFilter$$anonfun$map$2;::this(Lscala/collection/TraversableLike$WithFilter;Lscala/Function1;Lscala/collection/mutable/Builder;)V;)(this, f$4, b$14)));
    return b$14.(Lscala/collection/mutable/Builder;::result()Ljava/lang/Object;)();
  }
  
  public Ljava/lang/Object; flatMap(Lscala/Function1; f$5, Lscala/collection/generic/CanBuildFrom; bf) {
    Lscala/collection/mutable/Builder; b$15 = bf.(Lscala/collection/generic/CanBuildFrom;::apply(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(this.(Lscala/collection/TraversableLike$WithFilter;::scala$collection$TraversableLike$WithFilter$$$outer()Lscala/collection/TraversableLike;)().(Lscala/collection/TraversableLike;::repr()Ljava/lang/Object;)());
    this.(Lscala/collection/TraversableLike$WithFilter;::scala$collection$TraversableLike$WithFilter$$$outer()Lscala/collection/TraversableLike;)().(Lscala/collection/TraversableLike;::foreach(Lscala/Function1;)V;)((new (Lscala/collection/TraversableLike$WithFilter$$anonfun$flatMap$2;::this(Lscala/collection/TraversableLike$WithFilter;Lscala/Function1;Lscala/collection/mutable/Builder;)V;)(this, f$5, b$15)));
    return b$15.(Lscala/collection/mutable/Builder;::result()Ljava/lang/Object;)();
  }
  
  public V; foreach(Lscala/Function1; f$6) {
    this.(Lscala/collection/TraversableLike$WithFilter;::scala$collection$TraversableLike$WithFilter$$$outer()Lscala/collection/TraversableLike;)().(Lscala/collection/TraversableLike;::foreach(Lscala/Function1;)V;)((new (Lscala/collection/TraversableLike$WithFilter$$anonfun$foreach$1;::this(Lscala/collection/TraversableLike$WithFilter;Lscala/Function1;)V;)(this, f$6)));
  }
  
  public Lscala/collection/TraversableLike$WithFilter; withFilter(Lscala/Function1; q$1) {
    return (new (Lscala/collection/TraversableLike$WithFilter;::this(Lscala/collection/TraversableLike;Lscala/Function1;)V;)(this.(Lscala/collection/TraversableLike$WithFilter;::scala$collection$TraversableLike$WithFilter$$$outer()Lscala/collection/TraversableLike;)(), (new (Lscala/collection/TraversableLike$WithFilter$$anonfun$withFilter$1;::this(Lscala/collection/TraversableLike$WithFilter;Lscala/Function1;)V;)(this, q$1))));
  }
  
  protected Lscala/collection/TraversableLike; $outer$u0020;
  
  public Lscala/collection/TraversableLike; scala$collection$TraversableLike$WithFilter$$$outer() {
    return this.(Lscala/collection/TraversableLike;)$outer$u0020;
  }
  
  public Lscala/collection/generic/FilterMonadic; withFilter(Lscala/Function1; p) {
    return this.(Lscala/collection/TraversableLike$WithFilter;::withFilter(Lscala/Function1;)Lscala/collection/TraversableLike$WithFilter;)(p);
  }
  
  public this(Lscala/collection/TraversableLike; $outer, Lscala/Function1; p) {
    this.(Lscala/Function1;)scala$collection$TraversableLike$WithFilter$$p = p;
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/TraversableLike;)$outer$u0020 = $outer;
      }
    (Ljava/lang/Object;::super()V;)();
  }
}
