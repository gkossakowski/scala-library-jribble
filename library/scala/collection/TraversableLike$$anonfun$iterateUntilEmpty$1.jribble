public final class Lscala/collection/TraversableLike$$anonfun$iterateUntilEmpty$1; extends Lscala/runtime/AbstractFunction0; implements Lscala/Serializable; {
  
  public final Lscala/collection/Iterator; apply() {
    return Lscala/collection/Iterator$;.MODULE$.(Lscala/collection/Iterator$;::apply(Lscala/collection/Seq;)Lscala/collection/Iterator;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::wrapRefArray(Ljava/lang/Object;[)Lscala/collection/mutable/WrappedArray;)(<Lscala/collection/immutable/Nil$;>{Lscala/collection/immutable/Nil$;.MODULE$}.<cast>(Ljava/lang/Object;[)));
  }
  
  public final Ljava/lang/Object; apply() {
    return this.(Lscala/collection/TraversableLike$$anonfun$iterateUntilEmpty$1;::apply()Lscala/collection/Iterator;)();
  }
  
  public this(Lscala/collection/TraversableLike; $outer) {
    (Lscala/runtime/AbstractFunction0;::super()V;)();
  }
}
