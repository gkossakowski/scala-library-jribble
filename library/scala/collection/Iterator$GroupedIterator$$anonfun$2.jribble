public final class Lscala/collection/Iterator$GroupedIterator$$anonfun$2; extends Lscala/runtime/AbstractFunction0; implements Lscala/Serializable; {
  
  public final Ljava/lang/String; apply() {
    return Lscala/Predef$;.MODULE$.(Lscala/Predef$;::augmentString(Ljava/lang/String;)Lscala/collection/immutable/StringOps;)("size=%d and step=%d, but both must be positive").(Lscala/collection/immutable/StringLike;::format(Lscala/collection/Seq;)Ljava/lang/String;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::genericWrapArray(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;)(<Ljava/lang/Object;>{Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(this.(Lscala/collection/Iterator$GroupedIterator$$anonfun$2;)$outer$u0020.(Lscala/collection/Iterator$GroupedIterator;)scala$collection$Iterator$GroupedIterator$$size), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(this.(Lscala/collection/Iterator$GroupedIterator$$anonfun$2;)$outer$u0020.(Lscala/collection/Iterator$GroupedIterator;)scala$collection$Iterator$GroupedIterator$$step)}));
  }
  
  private Lscala/collection/Iterator$GroupedIterator; $outer$u0020;
  
  public final Ljava/lang/Object; apply() {
    return this.(Lscala/collection/Iterator$GroupedIterator$$anonfun$2;::apply()Ljava/lang/String;)();
  }
  
  public this(Lscala/collection/Iterator$GroupedIterator; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/collection/Iterator$GroupedIterator$$anonfun$2;)$outer$u0020 = $outer;
      }
    (Lscala/runtime/AbstractFunction0;::super()V;)();
  }
}
