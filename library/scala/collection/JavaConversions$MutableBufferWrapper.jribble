public class Lscala/collection/JavaConversions$MutableBufferWrapper; extends Ljava/util/AbstractList; implements Lscala/ScalaObject;, Lscala/Product; {
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/mutable/Buffer; copy$default$1() {
    return this.(Lscala/collection/JavaConversions$MutableBufferWrapper;::underlying()Lscala/collection/mutable/Buffer;)();
  }
  
  private Lscala/collection/mutable/Buffer; underlying$u0020;
  
  public Lscala/collection/mutable/Buffer; underlying() {
    return this.(Lscala/collection/mutable/Buffer;)underlying$u0020;
  }
  
  public I; size() {
    return this.(Lscala/collection/JavaConversions$MutableBufferWrapper;::underlying()Lscala/collection/mutable/Buffer;)().(Lscala/collection/mutable/BufferLike;::length()I;)();
  }
  
  public Ljava/lang/Object; get(I; i) {
    return this.(Lscala/collection/JavaConversions$MutableBufferWrapper;::underlying()Lscala/collection/mutable/Buffer;)().(Lscala/collection/mutable/BufferLike;::apply(I;)Ljava/lang/Object;)(i);
  }
  
  public Ljava/lang/Object; set(I; i, Ljava/lang/Object; elem) {
    Ljava/lang/Object; p = this.(Lscala/collection/JavaConversions$MutableBufferWrapper;::underlying()Lscala/collection/mutable/Buffer;)().(Lscala/collection/mutable/BufferLike;::apply(I;)Ljava/lang/Object;)(i);
    this.(Lscala/collection/JavaConversions$MutableBufferWrapper;::underlying()Lscala/collection/mutable/Buffer;)().(Lscala/collection/mutable/BufferLike;::update(I;Ljava/lang/Object;)V;)(i, elem);
    return p;
  }
  
  public Z; add(Ljava/lang/Object; elem) {
    this.(Lscala/collection/JavaConversions$MutableBufferWrapper;::underlying()Lscala/collection/mutable/Buffer;)().(Lscala/collection/mutable/BufferLike;::append(Lscala/collection/Seq;)V;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::genericWrapArray(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;)(<Ljava/lang/Object;>{elem}));
    return true;
  }
  
  public Ljava/lang/Object; remove(I; i) {
    return this.(Lscala/collection/JavaConversions$MutableBufferWrapper;::underlying()Lscala/collection/mutable/Buffer;)().(Lscala/collection/mutable/BufferLike;::remove(I;)Ljava/lang/Object;)(i);
  }
  
  public Lscala/collection/JavaConversions$MutableBufferWrapper; copy(Lscala/collection/mutable/Buffer; underlying) {
    return (new (Lscala/collection/JavaConversions$MutableBufferWrapper;::this(Lscala/collection/mutable/Buffer;)V;)(underlying));
  }
  
  public Ljava/lang/String; productPrefix() {
    return "MutableBufferWrapper";
  }
  
  public I; productArity() {
    return 1;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp93 = x$1;
    Ljava/lang/Object; $43$;
    if ((temp93 == 0))
      {
        $43$ = this.(Lscala/collection/JavaConversions$MutableBufferWrapper;::underlying()Lscala/collection/mutable/Buffer;)();
      }
    else
      {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
      }
    return $43$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/collection/JavaConversions$MutableBufferWrapper;);
  }
  
  public this(Lscala/collection/mutable/Buffer; underlying) {
    this.(Lscala/collection/mutable/Buffer;)underlying$u0020 = underlying;
    (Ljava/util/AbstractList;::super()V;)();
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
  }
}
