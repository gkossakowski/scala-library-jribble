public final class Lscala/collection/JavaConversions$JConcurrentMapWrapper$; extends Ljava/lang/Object; implements Lscala/ScalaObject;, Lscala/Serializable; {
  public static Lscala/collection/JavaConversions$JConcurrentMapWrapper$; MODULE$ = new (Lscala/collection/JavaConversions$JConcurrentMapWrapper$;::this()V;)();
  
  public final Ljava/lang/String; toString() {
    return "JConcurrentMapWrapper";
  }
  
  public Lscala/Option; unapply(Lscala/collection/JavaConversions$JConcurrentMapWrapper; x$0) {
    Lscala/Option; $91$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$0, null))
      {
        $91$ = Lscala/None$;.MODULE$;
      }
    else
      {
        $91$ = (new (Lscala/Some;::this(Ljava/lang/Object;)V;)(x$0.(Lscala/collection/JavaConversions$JConcurrentMapWrapper;::underlying()Ljava/util/concurrent/ConcurrentMap;)()));
      }
    return $91$;
  }
  
  public Lscala/collection/JavaConversions$JConcurrentMapWrapper; apply(Ljava/util/concurrent/ConcurrentMap; underlying) {
    return (new (Lscala/collection/JavaConversions$JConcurrentMapWrapper;::this(Ljava/util/concurrent/ConcurrentMap;)V;)(underlying));
  }
  
  protected Ljava/lang/Object; readResolve() {
    return Lscala/collection/JavaConversions$JConcurrentMapWrapper$;.MODULE$;
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
