public class Lscala/collection/TraversableView$NoBuilder; extends Ljava/lang/Object; implements Lscala/collection/mutable/Builder;, Lscala/ScalaObject; {
  
  public V; sizeHint(I; size) {
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHint(Lscala/collection/mutable/Builder;I;)V;)(this, size);
  }
  
  public V; sizeHint(Lscala/collection/TraversableLike; coll, I; delta) {
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHint(Lscala/collection/mutable/Builder;Lscala/collection/TraversableLike;I;)V;)(this, coll, delta);
  }
  
  public V; sizeHintBounded(I; size, Lscala/collection/TraversableLike; boundingColl) {
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHintBounded(Lscala/collection/mutable/Builder;I;Lscala/collection/TraversableLike;)V;)(this, size, boundingColl);
  }
  
  public Lscala/collection/mutable/Builder; mapResult(Lscala/Function1; f) {
    return Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::mapResult(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;)(this, f);
  }
  
  public I; sizeHint$default$2() {
    return Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::sizeHint$default$2(Lscala/collection/mutable/Builder;)I;)(this);
  }
  
  public Lscala/collection/generic/Growable; $plus$eq(Ljava/lang/Object; elem1, Ljava/lang/Object; elem2, Lscala/collection/Seq; elems) {
    return Lscala/collection/generic/Growable$class;.(Lscala/collection/generic/Growable$class;::$plus$eq(Lscala/collection/generic/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Growable;)(this, elem1, elem2, elems);
  }
  
  public Lscala/collection/generic/Growable; $plus$plus$eq(Lscala/collection/TraversableOnce; xs) {
    return Lscala/collection/generic/Growable$class;.(Lscala/collection/generic/Growable$class;::$plus$plus$eq(Lscala/collection/generic/Growable;Lscala/collection/TraversableOnce;)Lscala/collection/generic/Growable;)(this, xs);
  }
  
  public Lscala/collection/TraversableView$NoBuilder; $plus$eq(Ljava/lang/Object; elem) {
    return this;
  }
  
  public Lscala/collection/Iterator; iterator() {
    return Lscala/collection/Iterator$;.MODULE$.(Lscala/collection/Iterator$;::empty()Lscala/collection/Iterator;)();
  }
  
  public Lscala/collection/Iterator; elements() {
    return this.(Lscala/collection/TraversableView$NoBuilder;::iterator()Lscala/collection/Iterator;)();
  }
  
  public Lscala/runtime/Nothing$; result() {
    throw (new (Ljava/lang/UnsupportedOperationException;::this(Ljava/lang/String;)V;)("TraversableView.Builder.result"));
  }
  
  public V; clear() {
    
  }
  
  public Ljava/lang/Object; result() {
    this.(Lscala/collection/TraversableView$NoBuilder;::result()Lscala/runtime/Nothing$;)();
  }
  
  public Lscala/collection/generic/Growable; $plus$eq(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/TraversableView$NoBuilder;::$plus$eq(Ljava/lang/Object;)Lscala/collection/TraversableView$NoBuilder;)(elem);
  }
  
  public Lscala/collection/mutable/Builder; $plus$eq(Ljava/lang/Object; elem) {
    return this.(Lscala/collection/TraversableView$NoBuilder;::$plus$eq(Ljava/lang/Object;)Lscala/collection/TraversableView$NoBuilder;)(elem);
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
    Lscala/collection/generic/Growable$class;.(Lscala/collection/generic/Growable$class;::$init$(Lscala/collection/generic/Growable;)V;)(this);
    Lscala/collection/mutable/Builder$class;.(Lscala/collection/mutable/Builder$class;::$init$(Lscala/collection/mutable/Builder;)V;)(this);
  }
}
