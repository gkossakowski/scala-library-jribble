public final class Lscala/collection/JavaConversions$JPropertiesWrapper$$anon$3; extends Ljava/lang/Object; implements Lscala/collection/Iterator; {
  
  public Z; isEmpty() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::isEmpty(Lscala/collection/Iterator;)Z;)(this);
  }
  
  public Z; isTraversableAgain() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::isTraversableAgain(Lscala/collection/Iterator;)Z;)(this);
  }
  
  public Z; hasDefiniteSize() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::hasDefiniteSize(Lscala/collection/Iterator;)Z;)(this);
  }
  
  public Lscala/collection/Iterator; take(I; n) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::take(Lscala/collection/Iterator;I;)Lscala/collection/Iterator;)(this, n);
  }
  
  public Lscala/collection/Iterator; drop(I; n) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::drop(Lscala/collection/Iterator;I;)Lscala/collection/Iterator;)(this, n);
  }
  
  public Lscala/collection/Iterator; slice(I; from, I; until) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::slice(Lscala/collection/Iterator;I;I;)Lscala/collection/Iterator;)(this, from, until);
  }
  
  public Lscala/collection/Iterator; map(Lscala/Function1; f) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::map(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, f);
  }
  
  public Lscala/collection/Iterator; $plus$plus(Lscala/Function0; that) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::$plus$plus(Lscala/collection/Iterator;Lscala/Function0;)Lscala/collection/Iterator;)(this, that);
  }
  
  public Lscala/collection/Iterator; flatMap(Lscala/Function1; f) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::flatMap(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, f);
  }
  
  public Lscala/collection/Iterator; filter(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::filter(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/collection/Iterator; withFilter(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::withFilter(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/collection/Iterator; filterNot(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::filterNot(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/collection/Iterator; collect(Lscala/PartialFunction; pf) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::collect(Lscala/collection/Iterator;Lscala/PartialFunction;)Lscala/collection/Iterator;)(this, pf);
  }
  
  public Lscala/collection/Iterator; takeWhile(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::takeWhile(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/Tuple2; partition(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::partition(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Tuple2;)(this, p);
  }
  
  public Lscala/collection/Iterator; dropWhile(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::dropWhile(Lscala/collection/Iterator;Lscala/Function1;)Lscala/collection/Iterator;)(this, p);
  }
  
  public Lscala/collection/Iterator; zip(Lscala/collection/Iterator; that) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::zip(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;)(this, that);
  }
  
  public Lscala/collection/Iterator; padTo(I; len, Ljava/lang/Object; elem) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::padTo(Lscala/collection/Iterator;I;Ljava/lang/Object;)Lscala/collection/Iterator;)(this, len, elem);
  }
  
  public Lscala/collection/Iterator; zipWithIndex() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::zipWithIndex(Lscala/collection/Iterator;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; zipAll(Lscala/collection/Iterator; that, Ljava/lang/Object; thisElem, Ljava/lang/Object; thatElem) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::zipAll(Lscala/collection/Iterator;Lscala/collection/Iterator;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/Iterator;)(this, that, thisElem, thatElem);
  }
  
  public V; foreach(Lscala/Function1; f) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::foreach(Lscala/collection/Iterator;Lscala/Function1;)V;)(this, f);
  }
  
  public Z; forall(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::forall(Lscala/collection/Iterator;Lscala/Function1;)Z;)(this, p);
  }
  
  public Z; exists(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::exists(Lscala/collection/Iterator;Lscala/Function1;)Z;)(this, p);
  }
  
  public Z; contains(Ljava/lang/Object; elem) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::contains(Lscala/collection/Iterator;Ljava/lang/Object;)Z;)(this, elem);
  }
  
  public Lscala/Option; find(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::find(Lscala/collection/Iterator;Lscala/Function1;)Lscala/Option;)(this, p);
  }
  
  public I; indexWhere(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::indexWhere(Lscala/collection/Iterator;Lscala/Function1;)I;)(this, p);
  }
  
  public I; indexOf(Ljava/lang/Object; elem) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::indexOf(Lscala/collection/Iterator;Ljava/lang/Object;)I;)(this, elem);
  }
  
  public Lscala/collection/BufferedIterator; buffered() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::buffered(Lscala/collection/Iterator;)Lscala/collection/BufferedIterator;)(this);
  }
  
  public Lscala/collection/Iterator$GroupedIterator; grouped(I; size) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::grouped(Lscala/collection/Iterator;I;)Lscala/collection/Iterator$GroupedIterator;)(this, size);
  }
  
  public Lscala/collection/Iterator$GroupedIterator; sliding(I; size, I; step) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::sliding(Lscala/collection/Iterator;I;I;)Lscala/collection/Iterator$GroupedIterator;)(this, size, step);
  }
  
  public I; length() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::length(Lscala/collection/Iterator;)I;)(this);
  }
  
  public Lscala/Tuple2; duplicate() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::duplicate(Lscala/collection/Iterator;)Lscala/Tuple2;)(this);
  }
  
  public Lscala/collection/Iterator; patch(I; from, Lscala/collection/Iterator; patchElems, I; replaced) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::patch(Lscala/collection/Iterator;I;Lscala/collection/Iterator;I;)Lscala/collection/Iterator;)(this, from, patchElems, replaced);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start, I; len) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::copyToArray(Lscala/collection/Iterator;Ljava/lang/Object;I;I;)V;)(this, xs, start, len);
  }
  
  public Z; sameElements(Lscala/collection/Iterator; that) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::sameElements(Lscala/collection/Iterator;Lscala/collection/Iterator;)Z;)(this, that);
  }
  
  public Lscala/collection/Traversable; toTraversable() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::toTraversable(Lscala/collection/Iterator;)Lscala/collection/Traversable;)(this);
  }
  
  public Lscala/collection/Iterator; toIterator() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::toIterator(Lscala/collection/Iterator;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/immutable/Stream; toStream() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::toStream(Lscala/collection/Iterator;)Lscala/collection/immutable/Stream;)(this);
  }
  
  public Ljava/lang/String; toString() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::toString(Lscala/collection/Iterator;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/Iterator; append(Lscala/collection/Iterator; that) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::append(Lscala/collection/Iterator;Lscala/collection/Iterator;)Lscala/collection/Iterator;)(this, that);
  }
  
  public I; findIndexOf(Lscala/Function1; p) {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::findIndexOf(Lscala/collection/Iterator;Lscala/Function1;)I;)(this, p);
  }
  
  public Lscala/CountedIterator; counted() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::counted(Lscala/collection/Iterator;)Lscala/CountedIterator;)(this);
  }
  
  public V; readInto(Ljava/lang/Object; xs, I; start, I; sz) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::readInto(Lscala/collection/Iterator;Ljava/lang/Object;I;I;)V;)(this, xs, start, sz);
  }
  
  public V; readInto(Ljava/lang/Object; xs, I; start) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::readInto(Lscala/collection/Iterator;Ljava/lang/Object;I;)V;)(this, xs, start);
  }
  
  public V; readInto(Ljava/lang/Object; xs) {
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::readInto(Lscala/collection/Iterator;Ljava/lang/Object;)V;)(this, xs);
  }
  
  public I; sliding$default$2() {
    return Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::sliding$default$2(Lscala/collection/Iterator;)I;)(this);
  }
  
  public Lscala/collection/immutable/List; reversed() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reversed(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;)(this);
  }
  
  public I; size() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::size(Lscala/collection/TraversableOnce;)I;)(this);
  }
  
  public Z; nonEmpty() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::nonEmpty(Lscala/collection/TraversableOnce;)Z;)(this);
  }
  
  public I; count(Lscala/Function1; p) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::count(Lscala/collection/TraversableOnce;Lscala/Function1;)I;)(this, p);
  }
  
  public Ljava/lang/Object; $div$colon(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$div$colon(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; $colon$bslash(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$colon$bslash(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; foldLeft(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::foldLeft(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; foldRight(Ljava/lang/Object; z, Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::foldRight(Lscala/collection/TraversableOnce;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(this, z, op);
  }
  
  public Ljava/lang/Object; reduceLeft(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceLeft(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Ljava/lang/Object; reduceRight(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceRight(Lscala/collection/TraversableOnce;Lscala/Function2;)Ljava/lang/Object;)(this, op);
  }
  
  public Lscala/Option; reduceLeftOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceLeftOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Lscala/Option; reduceRightOption(Lscala/Function2; op) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::reduceRightOption(Lscala/collection/TraversableOnce;Lscala/Function2;)Lscala/Option;)(this, op);
  }
  
  public Ljava/lang/Object; sum(Lscala/math/Numeric; num) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::sum(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; product(Lscala/math/Numeric; num) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::product(Lscala/collection/TraversableOnce;Lscala/math/Numeric;)Ljava/lang/Object;)(this, num);
  }
  
  public Ljava/lang/Object; min(Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::min(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public Ljava/lang/Object; max(Lscala/math/Ordering; cmp) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::max(Lscala/collection/TraversableOnce;Lscala/math/Ordering;)Ljava/lang/Object;)(this, cmp);
  }
  
  public V; copyToBuffer(Lscala/collection/mutable/Buffer; dest) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToBuffer(Lscala/collection/TraversableOnce;Lscala/collection/mutable/Buffer;)V;)(this, dest);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs, I; start) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToArray(Lscala/collection/TraversableOnce;Ljava/lang/Object;I;)V;)(this, xs, start);
  }
  
  public V; copyToArray(Ljava/lang/Object; xs) {
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::copyToArray(Lscala/collection/TraversableOnce;Ljava/lang/Object;)V;)(this, xs);
  }
  
  public Ljava/lang/Object; toArray(Lscala/reflect/ClassManifest; evidence$1) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toArray(Lscala/collection/TraversableOnce;Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(this, evidence$1);
  }
  
  public Lscala/collection/immutable/List; toList() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toList(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/List;)(this);
  }
  
  public Lscala/collection/Iterable; toIterable() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toIterable(Lscala/collection/TraversableOnce;)Lscala/collection/Iterable;)(this);
  }
  
  public Lscala/collection/Seq; toSeq() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toSeq(Lscala/collection/TraversableOnce;)Lscala/collection/Seq;)(this);
  }
  
  public Lscala/collection/immutable/IndexedSeq; toIndexedSeq() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toIndexedSeq(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/IndexedSeq;)(this);
  }
  
  public Lscala/collection/mutable/Buffer; toBuffer() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toBuffer(Lscala/collection/TraversableOnce;)Lscala/collection/mutable/Buffer;)(this);
  }
  
  public Lscala/collection/immutable/Set; toSet() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toSet(Lscala/collection/TraversableOnce;)Lscala/collection/immutable/Set;)(this);
  }
  
  public Lscala/collection/immutable/Map; toMap(Lscala/Predef$$less$colon$less; ev) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::toMap(Lscala/collection/TraversableOnce;Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;)(this, ev);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;)(this, start, sep, end);
  }
  
  public Ljava/lang/String; mkString(Ljava/lang/String; sep) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;Ljava/lang/String;)Ljava/lang/String;)(this, sep);
  }
  
  public Ljava/lang/String; mkString() {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::mkString(Lscala/collection/TraversableOnce;)Ljava/lang/String;)(this);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; start, Ljava/lang/String; sep, Ljava/lang/String; end) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, start, sep, end);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b, Ljava/lang/String; sep) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(this, b, sep);
  }
  
  public Lscala/collection/mutable/StringBuilder; addString(Lscala/collection/mutable/StringBuilder; b) {
    return Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::addString(Lscala/collection/TraversableOnce;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(this, b);
  }
  
  private Ljava/util/Iterator; ui$u0020;
  
  private Ljava/util/Iterator; ui() {
    return this.(Lscala/collection/JavaConversions$JPropertiesWrapper$$anon$3;)ui$u0020;
  }
  
  public Z; hasNext() {
    return this.(Lscala/collection/JavaConversions$JPropertiesWrapper$$anon$3;::ui()Ljava/util/Iterator;)().(Ljava/util/Iterator;::hasNext()Z;)();
  }
  
  public Lscala/Tuple2; next() {
    Ljava/util/Map$Entry; e = this.(Lscala/collection/JavaConversions$JPropertiesWrapper$$anon$3;::ui()Ljava/util/Iterator;)().(Ljava/util/Iterator;::next()Ljava/lang/Object;)().<cast>(Ljava/util/Map$Entry;);
    return (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(e.(Ljava/util/Map$Entry;::getKey()Ljava/lang/Object;)().<cast>(Ljava/lang/String;), e.(Ljava/util/Map$Entry;::getValue()Ljava/lang/Object;)().<cast>(Ljava/lang/String;)));
  }
  
  public Ljava/lang/Object; next() {
    return this.(Lscala/collection/JavaConversions$JPropertiesWrapper$$anon$3;::next()Lscala/Tuple2;)();
  }
  
  public this(Lscala/collection/JavaConversions$JPropertiesWrapper; $outer) {
    (Ljava/lang/Object;::super()V;)();
    Lscala/collection/TraversableOnce$class;.(Lscala/collection/TraversableOnce$class;::$init$(Lscala/collection/TraversableOnce;)V;)(this);
    Lscala/collection/Iterator$class;.(Lscala/collection/Iterator$class;::$init$(Lscala/collection/Iterator;)V;)(this);
    this.(Lscala/collection/JavaConversions$JPropertiesWrapper$$anon$3;)ui$u0020 = $outer.(Lscala/collection/JavaConversions$JPropertiesWrapper;::underlying()Ljava/util/Properties;)().(Ljava/util/Hashtable;::entrySet()Ljava/util/Set;)().(Ljava/util/Set;::iterator()Ljava/util/Iterator;)();
  }
}
