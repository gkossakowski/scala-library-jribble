public final class Lscala/collection/TraversableLike$$anonfun$scanLeft$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final Lscala/collection/mutable/Builder; apply(Ljava/lang/Object; x) {
    this.(Lscala/runtime/ObjectRef;)acc$1.(Ljava/lang/Object;)elem = this.(Lscala/Function2;)op$2.(Lscala/Function2;::apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;)(this.(Lscala/runtime/ObjectRef;)acc$1.(Ljava/lang/Object;)elem, x);
    return this.(Lscala/collection/mutable/Builder;)b$6.(Lscala/collection/mutable/Builder;::$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(this.(Lscala/runtime/ObjectRef;)acc$1.(Ljava/lang/Object;)elem);
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/collection/TraversableLike$$anonfun$scanLeft$1;::apply(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(v1);
  }
  
  private Lscala/Function2; op$2;
  
  private Lscala/collection/mutable/Builder; b$6;
  
  private Lscala/runtime/ObjectRef; acc$1;
  
  public this(Lscala/collection/TraversableLike; $outer, Lscala/Function2; op$2, Lscala/collection/mutable/Builder; b$6, Lscala/runtime/ObjectRef; acc$1) {
    this.(Lscala/Function2;)op$2 = op$2;
    this.(Lscala/collection/mutable/Builder;)b$6 = b$6;
    this.(Lscala/runtime/ObjectRef;)acc$1 = acc$1;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
