public abstract class Lscala/collection/GenSeqViewLike$Filtered$class; {
  
  public static I;[ index(Lscala/collection/GenSeqViewLike$Filtered; $this) {
    Lscala/runtime/IntRef; len$1 = (new (Lscala/runtime/IntRef;::this(I;)V;)(0));
    I;[ arr$1 = new I;[$this.(Lscala/collection/GenSeqViewLike$Filtered;::scala$collection$GenSeqViewLike$Filtered$$$outer()Lscala/collection/GenSeqViewLike;)().(Lscala/collection/GenSeqLike;::length()I;)()];
    Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::intWrapper(I;)Lscala/runtime/RichInt;)(0).(Lscala/runtime/RichInt;::until(I;)Lscala/collection/immutable/Range;)($this.(Lscala/collection/GenSeqViewLike$Filtered;::scala$collection$GenSeqViewLike$Filtered$$$outer()Lscala/collection/GenSeqViewLike;)().(Lscala/collection/GenSeqLike;::length()I;)()).(Lscala/collection/immutable/Range;::foreach$mVc$sp(Lscala/Function1;)V;)((new (Lscala/collection/GenSeqViewLike$Filtered$$anonfun$index$2;::this(Lscala/collection/GenSeqViewLike$Filtered;Lscala/runtime/IntRef;I;[)V;)($this, len$1, arr$1)));
    return Lscala/Predef$;.MODULE$.(Lscala/Predef$;::intArrayOps(I;[)Lscala/collection/mutable/ArrayOps;)(arr$1).(Lscala/collection/IndexedSeqOptimized;::take(I;)Ljava/lang/Object;)(len$1.(Lscala/runtime/IntRef;)elem).<cast>(I;[);
  }
  
  public static I; length(Lscala/collection/GenSeqViewLike$Filtered; $this) {
    return $this.(Lscala/collection/GenSeqViewLike$Filtered;::index()I;[)().<length>;
  }
  
  public static Ljava/lang/Object; apply(Lscala/collection/GenSeqViewLike$Filtered; $this, I; idx) {
    return $this.(Lscala/collection/GenSeqViewLike$Filtered;::scala$collection$GenSeqViewLike$Filtered$$$outer()Lscala/collection/GenSeqViewLike;)().(Lscala/collection/GenSeqLike;::apply(I;)Ljava/lang/Object;)($this.(Lscala/collection/GenSeqViewLike$Filtered;::index()I;[)()[idx]);
  }
  
  public static V; $init$(Lscala/collection/GenSeqViewLike$Filtered; $this) {
    
  }
}
