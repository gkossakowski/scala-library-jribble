public final class Lscala/collection/TraversableLike$$anonfun$span$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final Lscala/collection/mutable/Builder; apply(Ljava/lang/Object; x) {
    this.(Lscala/collection/TraversableLike$$anonfun$span$1;)toLeft$1.(Lscala/runtime/BooleanRef;)elem = (this.(Lscala/collection/TraversableLike$$anonfun$span$1;)toLeft$1.(Lscala/runtime/BooleanRef;)elem && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToBoolean(Ljava/lang/Object;)Z;)(this.(Lscala/collection/TraversableLike$$anonfun$span$1;)p$7.(Lscala/Function1;::apply(Ljava/lang/Object;)Ljava/lang/Object;)(x)));
    Lscala/collection/mutable/Builder; $11$;
    if (this.(Lscala/collection/TraversableLike$$anonfun$span$1;)toLeft$1.(Lscala/runtime/BooleanRef;)elem)
      {
        $11$ = this.(Lscala/collection/TraversableLike$$anonfun$span$1;)l$2;
      }
    else
      {
        $11$ = this.(Lscala/collection/TraversableLike$$anonfun$span$1;)r$2;
      }
    return $11$.(Lscala/collection/mutable/Builder;::$plus$eq(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(x);
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/collection/TraversableLike$$anonfun$span$1;::apply(Ljava/lang/Object;)Lscala/collection/mutable/Builder;)(v1);
  }
  
  private Lscala/Function1; p$7;
  
  private Lscala/collection/mutable/Builder; l$2;
  
  private Lscala/collection/mutable/Builder; r$2;
  
  private Lscala/runtime/BooleanRef; toLeft$1;
  
  public this(Lscala/collection/TraversableLike; $outer, Lscala/Function1; p$7, Lscala/collection/mutable/Builder; l$2, Lscala/collection/mutable/Builder; r$2, Lscala/runtime/BooleanRef; toLeft$1) {
    this.(Lscala/collection/TraversableLike$$anonfun$span$1;)p$7 = p$7;
    this.(Lscala/collection/TraversableLike$$anonfun$span$1;)l$2 = l$2;
    this.(Lscala/collection/TraversableLike$$anonfun$span$1;)r$2 = r$2;
    this.(Lscala/collection/TraversableLike$$anonfun$span$1;)toLeft$1 = toLeft$1;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
