public class Lscala/LowPriorityImplicits; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  
  public Lscala/runtime/RichByte; byteWrapper(B; x) {
    return (new (Lscala/runtime/RichByte;::this(B;)V;)(x));
  }
  
  public Lscala/runtime/RichShort; shortWrapper(S; x) {
    return (new (Lscala/runtime/RichShort;::this(S;)V;)(x));
  }
  
  public Lscala/runtime/RichInt; intWrapper(I; x) {
    return (new (Lscala/runtime/RichInt;::this(I;)V;)(x));
  }
  
  public Lscala/runtime/RichChar; charWrapper(C; c) {
    return (new (Lscala/runtime/RichChar;::this(C;)V;)(c));
  }
  
  public Lscala/runtime/RichLong; longWrapper(J; x) {
    return (new (Lscala/runtime/RichLong;::this(J;)V;)(x));
  }
  
  public Lscala/runtime/RichFloat; floatWrapper(F; x) {
    return (new (Lscala/runtime/RichFloat;::this(F;)V;)(x));
  }
  
  public Lscala/runtime/RichDouble; doubleWrapper(D; x) {
    return (new (Lscala/runtime/RichDouble;::this(D;)V;)(x));
  }
  
  public Lscala/runtime/RichBoolean; booleanWrapper(Z; x) {
    return (new (Lscala/runtime/RichBoolean;::this(Z;)V;)(x));
  }
  
  public B; Byte2byteNullConflict(Lscala/runtime/Null$; x) {
    Lscala/sys/package$;.MODULE$.(Lscala/sys/package$;::error(Ljava/lang/String;)Lscala/runtime/Nothing$;)("value error");
  }
  
  public S; Short2shortNullConflict(Lscala/runtime/Null$; x) {
    Lscala/sys/package$;.MODULE$.(Lscala/sys/package$;::error(Ljava/lang/String;)Lscala/runtime/Nothing$;)("value error");
  }
  
  public C; Character2charNullConflict(Lscala/runtime/Null$; x) {
    Lscala/sys/package$;.MODULE$.(Lscala/sys/package$;::error(Ljava/lang/String;)Lscala/runtime/Nothing$;)("value error");
  }
  
  public I; Integer2intNullConflict(Lscala/runtime/Null$; x) {
    Lscala/sys/package$;.MODULE$.(Lscala/sys/package$;::error(Ljava/lang/String;)Lscala/runtime/Nothing$;)("value error");
  }
  
  public J; Long2longNullConflict(Lscala/runtime/Null$; x) {
    Lscala/sys/package$;.MODULE$.(Lscala/sys/package$;::error(Ljava/lang/String;)Lscala/runtime/Nothing$;)("value error");
  }
  
  public F; Float2floatNullConflict(Lscala/runtime/Null$; x) {
    Lscala/sys/package$;.MODULE$.(Lscala/sys/package$;::error(Ljava/lang/String;)Lscala/runtime/Nothing$;)("value error");
  }
  
  public D; Double2doubleNullConflict(Lscala/runtime/Null$; x) {
    Lscala/sys/package$;.MODULE$.(Lscala/sys/package$;::error(Ljava/lang/String;)Lscala/runtime/Nothing$;)("value error");
  }
  
  public Z; Boolean2booleanNullConflict(Lscala/runtime/Null$; x) {
    Lscala/sys/package$;.MODULE$.(Lscala/sys/package$;::error(Ljava/lang/String;)Lscala/runtime/Nothing$;)("value error");
  }
  
  public Lscala/collection/mutable/WrappedArray; genericWrapArray(Ljava/lang/Object; xs) {
    Lscala/collection/mutable/WrappedArray; $1$;
    if ((xs == null))
      {
        $1$ = null;
      }
    else
      {
        $1$ = Lscala/collection/mutable/WrappedArray$;.MODULE$.(Lscala/collection/mutable/WrappedArray$;::make(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;)(xs);
      }
    return $1$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapRefArray(Ljava/lang/Object;[ xs) {
    Lscala/collection/mutable/WrappedArray; $2$;
    if ((xs == null))
      {
        $2$ = null;
      }
    else
      {
        Lscala/collection/mutable/WrappedArray; $3$;
        if ((xs.<length> == 0))
          {
            $3$ = Lscala/collection/mutable/WrappedArray$;.MODULE$.(Lscala/collection/mutable/WrappedArray$;::empty()Lscala/collection/mutable/WrappedArray;)();
          }
        else
          {
            $3$ = (new (Lscala/collection/mutable/WrappedArray$ofRef;::this(Ljava/lang/Object;[)V;)(xs));
          }
        $2$ = $3$;
      }
    return $2$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapIntArray(I;[ xs) {
    Lscala/collection/mutable/WrappedArray; $4$;
    if ((xs != null))
      {
        $4$ = (new (Lscala/collection/mutable/WrappedArray$ofInt;::this(I;[)V;)(xs));
      }
    else
      {
        $4$ = null;
      }
    return $4$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapDoubleArray(D;[ xs) {
    Lscala/collection/mutable/WrappedArray; $5$;
    if ((xs != null))
      {
        $5$ = (new (Lscala/collection/mutable/WrappedArray$ofDouble;::this(D;[)V;)(xs));
      }
    else
      {
        $5$ = null;
      }
    return $5$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapLongArray(J;[ xs) {
    Lscala/collection/mutable/WrappedArray; $6$;
    if ((xs != null))
      {
        $6$ = (new (Lscala/collection/mutable/WrappedArray$ofLong;::this(J;[)V;)(xs));
      }
    else
      {
        $6$ = null;
      }
    return $6$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapFloatArray(F;[ xs) {
    Lscala/collection/mutable/WrappedArray; $7$;
    if ((xs != null))
      {
        $7$ = (new (Lscala/collection/mutable/WrappedArray$ofFloat;::this(F;[)V;)(xs));
      }
    else
      {
        $7$ = null;
      }
    return $7$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapCharArray(C;[ xs) {
    Lscala/collection/mutable/WrappedArray; $8$;
    if ((xs != null))
      {
        $8$ = (new (Lscala/collection/mutable/WrappedArray$ofChar;::this(C;[)V;)(xs));
      }
    else
      {
        $8$ = null;
      }
    return $8$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapByteArray(B;[ xs) {
    Lscala/collection/mutable/WrappedArray; $9$;
    if ((xs != null))
      {
        $9$ = (new (Lscala/collection/mutable/WrappedArray$ofByte;::this(B;[)V;)(xs));
      }
    else
      {
        $9$ = null;
      }
    return $9$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapShortArray(S;[ xs) {
    Lscala/collection/mutable/WrappedArray; $10$;
    if ((xs != null))
      {
        $10$ = (new (Lscala/collection/mutable/WrappedArray$ofShort;::this(S;[)V;)(xs));
      }
    else
      {
        $10$ = null;
      }
    return $10$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapBooleanArray(Z;[ xs) {
    Lscala/collection/mutable/WrappedArray; $11$;
    if ((xs != null))
      {
        $11$ = (new (Lscala/collection/mutable/WrappedArray$ofBoolean;::this(Z;[)V;)(xs));
      }
    else
      {
        $11$ = null;
      }
    return $11$;
  }
  
  public Lscala/collection/mutable/WrappedArray; wrapUnitArray(Lscala/runtime/BoxedUnit;[ xs) {
    Lscala/collection/mutable/WrappedArray; $12$;
    if ((xs != null))
      {
        $12$ = (new (Lscala/collection/mutable/WrappedArray$ofUnit;::this(Lscala/runtime/BoxedUnit;[)V;)(xs));
      }
    else
      {
        $12$ = null;
      }
    return $12$;
  }
  
  public Lscala/collection/immutable/WrappedString; wrapString(Ljava/lang/String; s) {
    Lscala/collection/immutable/WrappedString; $13$;
    if ((s != null))
      {
        $13$ = (new (Lscala/collection/immutable/WrappedString;::this(Ljava/lang/String;)V;)(s));
      }
    else
      {
        $13$ = null;
      }
    return $13$;
  }
  
  public Ljava/lang/String; unwrapString(Lscala/collection/immutable/WrappedString; ws) {
    Ljava/lang/String; $14$;
    if ((ws != null))
      {
        $14$ = ws.(Lscala/collection/immutable/WrappedString;::self()Ljava/lang/String;)();
      }
    else
      {
        $14$ = null;
      }
    return $14$;
  }
  
  public Lscala/collection/generic/CanBuildFrom; fallbackStringCanBuildFrom() {
    return (new (Lscala/LowPriorityImplicits$$anon$1;::this(Lscala/LowPriorityImplicits;)V;)(this));
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
