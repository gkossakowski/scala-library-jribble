public final class Lscala/xml/MetaData$; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  public static Lscala/xml/MetaData$; MODULE$ = new (Lscala/xml/MetaData$;::this()V;)();
  
  public Lscala/xml/MetaData; concatenate(Lscala/xml/MetaData; attribs, Lscala/xml/MetaData; new_tail) {
    Lscala/xml/MetaData; $1$;
    if ((attribs == Lscala/xml/Null$;.MODULE$))
      {
        $1$ = new_tail;
      }
    else
      {
        $1$ = this.(Lscala/xml/MetaData$;::concatenate(Lscala/xml/MetaData;Lscala/xml/MetaData;)Lscala/xml/MetaData;)(attribs.(Lscala/xml/MetaData;::next()Lscala/xml/MetaData;)(), attribs.(Lscala/xml/MetaData;::copy(Lscala/xml/MetaData;)Lscala/xml/MetaData;)(new_tail));
      }
    return $1$;
  }
  
  public Lscala/xml/MetaData; normalize(Lscala/xml/MetaData; attribs, Lscala/xml/NamespaceBinding; scope$1) {
    return this.(Lscala/xml/MetaData$;::iterate$1(Lscala/xml/MetaData;Lscala/xml/MetaData;Lscala/collection/immutable/Set;Lscala/xml/NamespaceBinding;)Lscala/xml/MetaData;)(attribs, Lscala/xml/Null$;.MODULE$, Lscala/Predef$;.MODULE$.(Lscala/Predef$;::Set()Lscala/collection/immutable/Set$;)().(Lscala/collection/generic/GenericCompanion;::apply(Lscala/collection/Seq;)Lscala/collection/Traversable;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::wrapRefArray(Ljava/lang/Object;[)Lscala/collection/mutable/WrappedArray;)(<Ljava/lang/String;>{}.<cast>(Ljava/lang/Object;[))).<cast>(Lscala/collection/immutable/Set;), scope$1);
  }
  
  public Ljava/lang/String; getUniversalKey(Lscala/xml/MetaData; attrib, Lscala/xml/NamespaceBinding; scope) {
    Lscala/xml/MetaData; temp1 = attrib;
    Ljava/lang/String; $2$;
    if (temp1.<instanceof>(Lscala/xml/PrefixedAttribute;))
      {
        Lscala/xml/PrefixedAttribute; temp2 = temp1.<cast>(Lscala/xml/PrefixedAttribute;);
        Lscala/xml/PrefixedAttribute; prefixed = temp2;
        $2$ = (scope.(Lscala/xml/NamespaceBinding;::getURI(Ljava/lang/String;)Ljava/lang/String;)(prefixed.(Lscala/xml/PrefixedAttribute;::pre()Ljava/lang/String;)()) + prefixed.(Lscala/xml/PrefixedAttribute;::key()Ljava/lang/String;)());
      }
    else
      {
        Ljava/lang/String; $3$;
        if (temp1.<instanceof>(Lscala/xml/UnprefixedAttribute;))
          {
            $3$ = temp1.<cast>(Lscala/xml/UnprefixedAttribute;).(Lscala/xml/UnprefixedAttribute;::key()Ljava/lang/String;)();
          }
        else
          {
            throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp1));
          }
        $2$ = $3$;
      }
    return $2$;
  }
  
  public Lscala/xml/MetaData; update(Lscala/xml/MetaData; attribs, Lscala/xml/NamespaceBinding; scope, Lscala/xml/MetaData; updates) {
    return this.(Lscala/xml/MetaData$;::normalize(Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)Lscala/xml/MetaData;)(this.(Lscala/xml/MetaData$;::concatenate(Lscala/xml/MetaData;Lscala/xml/MetaData;)Lscala/xml/MetaData;)(updates, attribs), scope);
  }
  
  private final Ljava/lang/String; key$1(Lscala/xml/NamespaceBinding; scope$1, Lscala/xml/MetaData; md$1, Lscala/runtime/ObjectRef; key$lzy$1, Lscala/runtime/VolatileIntRef; bitmap$0$1) {
    if (((bitmap$0$1.(Lscala/runtime/VolatileIntRef;)elem & 1) == 0))
      {
        if (((bitmap$0$1.(Lscala/runtime/VolatileIntRef;)elem & 1) == 0))
          {
            key$lzy$1.(Lscala/runtime/ObjectRef;)elem = this.(Lscala/xml/MetaData$;::getUniversalKey(Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;)Ljava/lang/String;)(md$1, scope$1);
            bitmap$0$1.(Lscala/runtime/VolatileIntRef;)elem = (bitmap$0$1.(Lscala/runtime/VolatileIntRef;)elem | 1);
          }
      }
    return key$lzy$1.(Lscala/runtime/ObjectRef;)elem.<cast>(Ljava/lang/String;);
  }
  
  private final Lscala/xml/MetaData; iterate$1(Lscala/xml/MetaData; md$1, Lscala/xml/MetaData; normalized_attribs, Lscala/collection/immutable/Set; set, Lscala/xml/NamespaceBinding; scope$1) {
    Lscala/runtime/VolatileIntRef; bitmap$0$1 = (new (Lscala/runtime/VolatileIntRef;::this(I;)V;)(0));
    Lscala/runtime/ObjectRef; key$lzy$1 = (new (Lscala/runtime/ObjectRef;::this(Ljava/lang/Object;)V;)());
    Lscala/xml/MetaData; $4$;
    if ((md$1 == Lscala/xml/Null$;.MODULE$))
      {
        $4$ = normalized_attribs;
      }
    else
      {
        Lscala/xml/MetaData; $5$;
        if (set.(Lscala/collection/SetLike;::apply(Ljava/lang/Object;)Z;)(this.(Lscala/xml/MetaData$;::key$1(Lscala/xml/NamespaceBinding;Lscala/xml/MetaData;Lscala/runtime/ObjectRef;Lscala/runtime/VolatileIntRef;)Ljava/lang/String;)(scope$1, md$1, key$lzy$1, bitmap$0$1)))
          {
            $5$ = this.(Lscala/xml/MetaData$;::iterate$1(Lscala/xml/MetaData;Lscala/xml/MetaData;Lscala/collection/immutable/Set;Lscala/xml/NamespaceBinding;)Lscala/xml/MetaData;)(md$1.(Lscala/xml/MetaData;::next()Lscala/xml/MetaData;)(), normalized_attribs, set, scope$1);
          }
        else
          {
            $5$ = this.(Lscala/xml/MetaData$;::iterate$1(Lscala/xml/MetaData;Lscala/xml/MetaData;Lscala/collection/immutable/Set;Lscala/xml/NamespaceBinding;)Lscala/xml/MetaData;)(md$1.(Lscala/xml/MetaData;::next()Lscala/xml/MetaData;)(), md$1.(Lscala/xml/MetaData;::copy(Lscala/xml/MetaData;)Lscala/xml/MetaData;)(normalized_attribs), set.(Lscala/collection/SetLike;::$plus(Ljava/lang/Object;)Lscala/collection/Set;)(this.(Lscala/xml/MetaData$;::key$1(Lscala/xml/NamespaceBinding;Lscala/xml/MetaData;Lscala/runtime/ObjectRef;Lscala/runtime/VolatileIntRef;)Ljava/lang/String;)(scope$1, md$1, key$lzy$1, bitmap$0$1)).<cast>(Lscala/collection/immutable/Set;), scope$1);
          }
        $4$ = $5$;
      }
    return $4$;
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
