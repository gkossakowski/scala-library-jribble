public final class Lscala/xml/Node$$anonfun$descendant$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final Lscala/collection/immutable/List; apply(Lscala/xml/Node; x) {
    Lscala/xml/Node; x$2 = x;
    return x.(Lscala/xml/Node;::descendant()Lscala/collection/immutable/List;)().(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x$2);
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/xml/Node$$anonfun$descendant$1;::apply(Lscala/xml/Node;)Lscala/collection/immutable/List;)(v1.<cast>(Lscala/xml/Node;));
  }
  
  public this(Lscala/xml/Node; $outer) {
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
