public class Lscala/xml/dtd/PublicID; extends Lscala/xml/dtd/ExternalID; implements Lscala/ScalaObject;, Lscala/Product;, Lscala/Serializable; {
  public final static Lscala/Function1; tupled() { return Lscala/xml/dtd/PublicID$;.MODULE$.(Lscala/runtime/AbstractFunction2;::tupled()Lscala/Function1;)(); }
  public final static Lscala/Function1; curry() { return Lscala/xml/dtd/PublicID$;.MODULE$.(Lscala/runtime/AbstractFunction2;::curry()Lscala/Function1;)(); }
  public final static Lscala/Function1; curried() { return Lscala/xml/dtd/PublicID$;.MODULE$.(Lscala/runtime/AbstractFunction2;::curried()Lscala/Function1;)(); }
  
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  private Ljava/lang/String; publicId$u0020;
  
  public Ljava/lang/String; publicId() {
    return this.(Lscala/xml/dtd/PublicID;)publicId$u0020;
  }
  
  private Ljava/lang/String; systemId$u0020;
  
  public Ljava/lang/String; systemId() {
    return this.(Lscala/xml/dtd/PublicID;)systemId$u0020;
  }
  
  public Ljava/lang/String; label() {
    return "#PI";
  }
  
  public Lscala/xml/MetaData; attribute() {
    return Lscala/xml/Node$;.MODULE$.(Lscala/xml/Node$;::NoAttributes()Lscala/xml/MetaData;)();
  }
  
  public Lscala/collection/immutable/Nil$; child() {
    return Lscala/collection/immutable/Nil$;.MODULE$;
  }
  
  public Lscala/xml/dtd/PublicID; copy(Ljava/lang/String; publicId, Ljava/lang/String; systemId) {
    return (new (Lscala/xml/dtd/PublicID;::this(Ljava/lang/String;Ljava/lang/String;)V;)(publicId, systemId));
  }
  
  public Ljava/lang/String; copy$default$2() {
    return this.(Lscala/xml/dtd/PublicID;::systemId()Ljava/lang/String;)();
  }
  
  public Ljava/lang/String; copy$default$1() {
    return this.(Lscala/xml/dtd/PublicID;::publicId()Ljava/lang/String;)();
  }
  
  public I; hashCode() {
    return Lscala/runtime/ScalaRunTime$;.MODULE$.(Lscala/runtime/ScalaRunTime$;::_hashCode(Lscala/Product;)I;)(this);
  }
  
  public Z; equals(Ljava/lang/Object; x$1) {
    Ljava/lang/Object; temp5 = x$1;
    Z; $10$;
    if (temp5.<instanceof>(Lscala/xml/dtd/PublicID;))
      {
        Lscala/xml/dtd/PublicID; temp6 = temp5.<cast>(Lscala/xml/dtd/PublicID;);
        Ljava/lang/String; temp7 = temp6.(Lscala/xml/dtd/PublicID;::publicId()Ljava/lang/String;)();
        Ljava/lang/String; temp8 = temp6.(Lscala/xml/dtd/PublicID;::systemId()Ljava/lang/String;)();
        Ljava/lang/String; publicId$1 = temp7;
        Ljava/lang/String; systemId$2 = temp8;
        Z; $11$;
        if (this.(Lscala/xml/dtd/PublicID;::gd2$1(Ljava/lang/String;Ljava/lang/String;)Z;)(publicId$1, systemId$2))
          {
            Ljava/lang/String; $12$;
            Ljava/lang/String; $13$;
            Z; $14$;
            body$percent03: while(true) {
              $14$ = x$1.<cast>(Lscala/xml/dtd/PublicID;).(Lscala/Equals;::canEqual(Ljava/lang/Object;)Z;)(this);
              break;
            }
            $11$ = $14$;
          }
        else
          {
            $11$ = false;
          }
        $10$ = $11$;
      }
    else
      {
        $10$ = false;
      }
    return ((this == x$1) || $10$);
  }
  
  public Ljava/lang/String; productPrefix() {
    return "PublicID";
  }
  
  public I; productArity() {
    return 2;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp9 = x$1;
    I; $15$ = temp9;
    Ljava/lang/Object; $16$;
    switch ($15$) {
      1: {
        $16$ = this.(Lscala/xml/dtd/PublicID;::systemId()Ljava/lang/String;)();
        break;
      }
      
      0: {
        $16$ = this.(Lscala/xml/dtd/PublicID;::publicId()Ljava/lang/String;)();
        break;
      }
      
      default: {
        throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
        break;
      }
      
    }
    return $16$;
  }
  
  public Z; canEqual(Ljava/lang/Object; x$1) {
    return x$1.<instanceof>(Lscala/xml/dtd/PublicID;);
  }
  
  private final Z; gd2$1(Ljava/lang/String; x$1, Ljava/lang/String; x$2) {
    return (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$1, this.(Lscala/xml/dtd/PublicID;::publicId()Ljava/lang/String;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$2, this.(Lscala/xml/dtd/PublicID;::systemId()Ljava/lang/String;)()));
  }
  
  public this(Ljava/lang/String; publicId, Ljava/lang/String; systemId) {
    this.(Lscala/xml/dtd/PublicID;)publicId$u0020 = publicId;
    this.(Lscala/xml/dtd/PublicID;)systemId$u0020 = systemId;
    (Lscala/xml/dtd/ExternalID;::super()V;)();
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
    if (!(this.(Lscala/xml/parsing/TokenTests;::checkPubID(Ljava/lang/String;)Z;)(publicId)))
      {
        throw (new (Ljava/lang/IllegalArgumentException;::this(Ljava/lang/String;)V;)("publicId must consist of PubidChars"));
      }
    else
      {
        
      }
    if (((systemId != null) && !(this.(Lscala/xml/parsing/TokenTests;::checkSysID(Ljava/lang/String;)Z;)(systemId))))
      {
        throw (new (Ljava/lang/IllegalArgumentException;::this(Ljava/lang/String;)V;)("can\'t use both \" and \' in systemId"));
      }
    else
      {
        
      }
  }
}
