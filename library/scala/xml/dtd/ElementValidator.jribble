public class Lscala/xml/dtd/ElementValidator; extends Ljava/lang/Object; implements Lscala/Function1;, Lscala/ScalaObject; {
  
  public Z; apply$mcZD$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcZD$sp(Lscala/Function1;D;)Z;)(this, v1);
  }
  
  public D; apply$mcDD$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcDD$sp(Lscala/Function1;D;)D;)(this, v1);
  }
  
  public F; apply$mcFD$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcFD$sp(Lscala/Function1;D;)F;)(this, v1);
  }
  
  public I; apply$mcID$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcID$sp(Lscala/Function1;D;)I;)(this, v1);
  }
  
  public J; apply$mcJD$sp(D; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcJD$sp(Lscala/Function1;D;)J;)(this, v1);
  }
  
  public V; apply$mcVD$sp(D; v1) {
    Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcVD$sp(Lscala/Function1;D;)V;)(this, v1);
  }
  
  public Z; apply$mcZF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcZF$sp(Lscala/Function1;F;)Z;)(this, v1);
  }
  
  public D; apply$mcDF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcDF$sp(Lscala/Function1;F;)D;)(this, v1);
  }
  
  public F; apply$mcFF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcFF$sp(Lscala/Function1;F;)F;)(this, v1);
  }
  
  public I; apply$mcIF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcIF$sp(Lscala/Function1;F;)I;)(this, v1);
  }
  
  public J; apply$mcJF$sp(F; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcJF$sp(Lscala/Function1;F;)J;)(this, v1);
  }
  
  public V; apply$mcVF$sp(F; v1) {
    Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcVF$sp(Lscala/Function1;F;)V;)(this, v1);
  }
  
  public Z; apply$mcZI$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcZI$sp(Lscala/Function1;I;)Z;)(this, v1);
  }
  
  public D; apply$mcDI$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcDI$sp(Lscala/Function1;I;)D;)(this, v1);
  }
  
  public F; apply$mcFI$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcFI$sp(Lscala/Function1;I;)F;)(this, v1);
  }
  
  public I; apply$mcII$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcII$sp(Lscala/Function1;I;)I;)(this, v1);
  }
  
  public J; apply$mcJI$sp(I; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcJI$sp(Lscala/Function1;I;)J;)(this, v1);
  }
  
  public V; apply$mcVI$sp(I; v1) {
    Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcVI$sp(Lscala/Function1;I;)V;)(this, v1);
  }
  
  public Z; apply$mcZJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcZJ$sp(Lscala/Function1;J;)Z;)(this, v1);
  }
  
  public D; apply$mcDJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcDJ$sp(Lscala/Function1;J;)D;)(this, v1);
  }
  
  public F; apply$mcFJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcFJ$sp(Lscala/Function1;J;)F;)(this, v1);
  }
  
  public I; apply$mcIJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcIJ$sp(Lscala/Function1;J;)I;)(this, v1);
  }
  
  public J; apply$mcJJ$sp(J; v1) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcJJ$sp(Lscala/Function1;J;)J;)(this, v1);
  }
  
  public V; apply$mcVJ$sp(J; v1) {
    Lscala/Function1$class;.(Lscala/Function1$class;::apply$mcVJ$sp(Lscala/Function1;J;)V;)(this, v1);
  }
  
  public Lscala/Function1; compose(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcZD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcZD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcDD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcDD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcFD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcFD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcID$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcID$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcJD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcJD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcVD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcVD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcZF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcZF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcDF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcDF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcFF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcFF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcIF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcIF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcJF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcJF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcVF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcVF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcZI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcZI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcDI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcDI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcFI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcFI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcII$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcII$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcJI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcJI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcVI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcVI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcZJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcZJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcDJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcDJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcFJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcFJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcIJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcIJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcJJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcJJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; compose$mcVJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::compose$mcVJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcZD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcZD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcDD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcDD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcFD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcFD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcID$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcID$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcJD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcJD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcVD$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcVD$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcZF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcZF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcDF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcDF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcFF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcFF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcIF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcIF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcJF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcJF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcVF$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcVF$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcZI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcZI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcDI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcDI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcFI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcFI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcII$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcII$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcJI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcJI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcVI$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcVI$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcZJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcZJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcDJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcDJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcFJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcFJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcIJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcIJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcJJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcJJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Lscala/Function1; andThen$mcVJ$sp(Lscala/Function1; g) {
    return Lscala/Function1$class;.(Lscala/Function1$class;::andThen$mcVJ$sp(Lscala/Function1;Lscala/Function1;)Lscala/Function1;)(this, g);
  }
  
  public Ljava/lang/String; toString() {
    return Lscala/Function1$class;.(Lscala/Function1$class;::toString(Lscala/Function1;)Ljava/lang/String;)(this);
  }
  
  private Lscala/collection/immutable/List; scala$xml$dtd$ElementValidator$$exc$u0020;
  
  public final Lscala/collection/immutable/List; scala$xml$dtd$ElementValidator$$exc() {
    return this.(Lscala/xml/dtd/ElementValidator;)scala$xml$dtd$ElementValidator$$exc$u0020;
  }
  
  public final V; scala$xml$dtd$ElementValidator$$exc_$eq(Lscala/collection/immutable/List; x$1) {
    this.(Lscala/xml/dtd/ElementValidator;)scala$xml$dtd$ElementValidator$$exc$u0020 = x$1;
  }
  
  private Lscala/xml/dtd/ContentModel; contentModel$u0020;
  
  protected Lscala/xml/dtd/ContentModel; contentModel() {
    return this.(Lscala/xml/dtd/ElementValidator;)contentModel$u0020;
  }
  
  protected V; contentModel_$eq(Lscala/xml/dtd/ContentModel; x$1) {
    this.(Lscala/xml/dtd/ElementValidator;)contentModel$u0020 = x$1;
  }
  
  private Lscala/util/automata/DetWordAutom; dfa$u0020;
  
  public Lscala/util/automata/DetWordAutom; dfa() {
    return this.(Lscala/xml/dtd/ElementValidator;)dfa$u0020;
  }
  
  protected V; dfa_$eq(Lscala/util/automata/DetWordAutom; x$1) {
    this.(Lscala/xml/dtd/ElementValidator;)dfa$u0020 = x$1;
  }
  
  private Lscala/collection/immutable/List; adecls$u0020;
  
  public Lscala/collection/immutable/List; adecls() {
    return this.(Lscala/xml/dtd/ElementValidator;)adecls$u0020;
  }
  
  protected V; adecls_$eq(Lscala/collection/immutable/List; x$1) {
    this.(Lscala/xml/dtd/ElementValidator;)adecls$u0020 = x$1;
  }
  
  public V; setContentModel(Lscala/xml/dtd/ContentModel; cm) {
    this.(Lscala/xml/dtd/ElementValidator;::contentModel_$eq(Lscala/xml/dtd/ContentModel;)V;)(cm);
    Lscala/xml/dtd/ContentModel; temp1 = cm;
    if (temp1.<instanceof>(Lscala/xml/dtd/ELEMENTS;))
      {
        Lscala/xml/dtd/ELEMENTS; temp2 = temp1.<cast>(Lscala/xml/dtd/ELEMENTS;);
        Lscala/util/regexp/Base$RegExp; temp3 = temp2.(Lscala/xml/dtd/ELEMENTS;::r()Lscala/util/regexp/Base$RegExp;)();
        Lscala/util/regexp/Base$RegExp; r = temp3;
        Lscala/util/automata/NondetWordAutom; nfa = Lscala/xml/dtd/ContentModel$Translator$;.MODULE$.(Lscala/util/automata/WordBerrySethi;::automatonFrom(Lscala/util/regexp/Base$RegExp;I;)Lscala/util/automata/NondetWordAutom;)(r, 1);
        this.(Lscala/xml/dtd/ElementValidator;::dfa_$eq(Lscala/util/automata/DetWordAutom;)V;)((new (Lscala/util/automata/SubsetConstruction;::this(Lscala/util/automata/NondetWordAutom;)V;)(nfa)).(Lscala/util/automata/SubsetConstruction;::determinize()Lscala/util/automata/DetWordAutom;)());
      }
    else
      {
        this.(Lscala/xml/dtd/ElementValidator;::dfa_$eq(Lscala/util/automata/DetWordAutom;)V;)(null);
      }
  }
  
  public Lscala/xml/dtd/ContentModel; getContentModel() {
    return this.(Lscala/xml/dtd/ElementValidator;::contentModel()Lscala/xml/dtd/ContentModel;)();
  }
  
  public V; setMetaData(Lscala/collection/immutable/List; adecls) {
    this.(Lscala/xml/dtd/ElementValidator;::adecls_$eq(Lscala/collection/immutable/List;)V;)(adecls);
  }
  
  public Lscala/collection/Iterable; getIterable(Lscala/collection/Seq; nodes, Z; skipPCDATA$1) {
    return nodes.(Lscala/collection/TraversableLike;::filter(Lscala/Function1;)Ljava/lang/Object;)((new (Lscala/xml/dtd/ElementValidator$$anonfun$getIterable$1;::this(Lscala/xml/dtd/ElementValidator;Z;)V;)(this, skipPCDATA$1))).<cast>(Lscala/collection/TraversableLike;).(Lscala/collection/TraversableLike;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)((new (Lscala/xml/dtd/ElementValidator$$anonfun$getIterable$2;::this(Lscala/xml/dtd/ElementValidator;)V;)(this)), Lscala/collection/Seq$;.MODULE$.(Lscala/collection/Seq$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/Iterable;);
  }
  
  public Z; check(Lscala/xml/MetaData; md) {
    I; len = this.(Lscala/xml/dtd/ElementValidator;::scala$xml$dtd$ElementValidator$$exc()Lscala/collection/immutable/List;)().(Lscala/collection/LinearSeqOptimized;::length()I;)();
    Lscala/runtime/ObjectRef; ok$1 = (new (Lscala/runtime/ObjectRef;::this(Ljava/lang/Object;)V;)((new (Lscala/collection/mutable/BitSet;::this(I;)V;)(this.(Lscala/xml/dtd/ElementValidator;::adecls()Lscala/collection/immutable/List;)().(Lscala/collection/LinearSeqOptimized;::length()I;)()))));
    md.(Lscala/collection/IterableLike;::foreach(Lscala/Function1;)V;)((new (Lscala/xml/dtd/ElementValidator$$anonfun$check$1;::this(Lscala/xml/dtd/ElementValidator;Lscala/runtime/ObjectRef;)V;)(this, ok$1)));
    this.(Lscala/xml/dtd/ElementValidator;::adecls()Lscala/collection/immutable/List;)().(Lscala/collection/IterableLike;::zipWithIndex(Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)(Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/LinearSeqOptimized;).(Lscala/collection/LinearSeqOptimized;::foreach(Lscala/Function1;)V;)((new (Lscala/xml/dtd/ElementValidator$$anonfun$check$2;::this(Lscala/xml/dtd/ElementValidator;Lscala/runtime/ObjectRef;)V;)(this, ok$1)));
    return (this.(Lscala/xml/dtd/ElementValidator;::scala$xml$dtd$ElementValidator$$exc()Lscala/collection/immutable/List;)().(Lscala/collection/LinearSeqOptimized;::length()I;)() == len);
  }
  
  public Z; check(Lscala/collection/Seq; nodes) {
    Lscala/xml/dtd/ContentModel; temp42 = this.(Lscala/xml/dtd/ElementValidator;::contentModel()Lscala/xml/dtd/ContentModel;)();
    Z; $1$;
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/xml/dtd/ANY$;.MODULE$, temp42))
      {
        $1$ = true;
      }
    else
      {
        Z; $2$;
        if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/xml/dtd/EMPTY$;.MODULE$, temp42))
          {
            $2$ = this.(Lscala/xml/dtd/ElementValidator;::getIterable(Lscala/collection/Seq;Z;)Lscala/collection/Iterable;)(nodes, false).(Lscala/collection/IterableLike;::isEmpty()Z;)();
          }
        else
          {
            Z; $3$;
            if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(Lscala/xml/dtd/PCDATA$;.MODULE$, temp42))
              {
                $3$ = this.(Lscala/xml/dtd/ElementValidator;::getIterable(Lscala/collection/Seq;Z;)Lscala/collection/Iterable;)(nodes, true).(Lscala/collection/IterableLike;::isEmpty()Z;)();
              }
            else
              {
                Z; $4$;
                if (temp42.<instanceof>(Lscala/xml/dtd/MIXED;))
                  {
                    Lscala/xml/dtd/MIXED; temp46 = temp42.<cast>(Lscala/xml/dtd/MIXED;);
                    Lscala/util/regexp/Base$RegExp; temp47 = temp46.(Lscala/xml/dtd/MIXED;::r()Lscala/util/regexp/Base$RegExp;)();
                    Z; $5$;
                    if (temp47.<instanceof>(Lscala/util/regexp/Base$Alt;))
                      {
                        Lscala/util/regexp/Base$Alt; temp48 = temp47.<cast>(Lscala/util/regexp/Base$Alt;);
                        Lscala/Some; temp49 = Lscala/xml/dtd/ContentModel$;.MODULE$.(Lscala/util/regexp/Base;::Alt()Lscala/util/regexp/Base$Alt$;)().(Lscala/util/regexp/Base$Alt$;::unapplySeq(Lscala/util/regexp/Base$Alt;)Lscala/Some;)(temp48);
                        Z; $6$;
                        if (true)
                          {
                            Lscala/collection/Seq; temp50 = temp49.(Lscala/Some;::get()Ljava/lang/Object;)().<cast>(Lscala/collection/Seq;);
                            Z; $7$;
                            if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(temp50, null))
                              {
                                $7$ = false;
                              }
                            else
                              {
                                $7$ = (temp50.(Lscala/collection/SeqLike;::lengthCompare(I;)I;)(0) >= 0);
                              }
                            Z; $8$;
                            if ($7$)
                              {
                                Lscala/collection/Seq; temp51 = temp50;
                                Lscala/collection/Seq; branches$1 = temp51;
                                I; j = this.(Lscala/xml/dtd/ElementValidator;::scala$xml$dtd$ElementValidator$$exc()Lscala/collection/immutable/List;)().(Lscala/collection/LinearSeqOptimized;::length()I;)();
                                this.(Lscala/xml/dtd/ElementValidator;::getIterable(Lscala/collection/Seq;Z;)Lscala/collection/Iterable;)(nodes, true).(Lscala/collection/TraversableLike;::map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;)((new (Lscala/xml/dtd/ElementValidator$$anonfun$check$3;::this(Lscala/xml/dtd/ElementValidator;)V;)(this)), Lscala/collection/Iterable$;.MODULE$.(Lscala/collection/Iterable$;::canBuildFrom()Lscala/collection/generic/CanBuildFrom;)()).<cast>(Lscala/collection/TraversableLike;).(Lscala/collection/TraversableLike;::filterNot(Lscala/Function1;)Ljava/lang/Object;)((new (Lscala/xml/dtd/ElementValidator$$anonfun$check$4;::this(Lscala/xml/dtd/ElementValidator;Lscala/collection/Seq;)V;)(this, branches$1))).<cast>(Lscala/collection/IterableLike;).(Lscala/collection/IterableLike;::foreach(Lscala/Function1;)V;)((new (Lscala/xml/dtd/ElementValidator$$anonfun$check$5;::this(Lscala/xml/dtd/ElementValidator;)V;)(this)));
                                $8$ = (this.(Lscala/xml/dtd/ElementValidator;::scala$xml$dtd$ElementValidator$$exc()Lscala/collection/immutable/List;)().(Lscala/collection/LinearSeqOptimized;::length()I;)() == j);
                              }
                            else
                              {
                                throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp42));
                              }
                            $6$ = $8$;
                          }
                        else
                          {
                            throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp42));
                          }
                        $5$ = $6$;
                      }
                    else
                      {
                        throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp42));
                      }
                    $4$ = $5$;
                  }
                else
                  {
                    Z; $9$;
                    if (temp42.<instanceof>(Lscala/xml/dtd/ELEMENTS;))
                      {
                        $9$ = this.(Lscala/xml/dtd/ElementValidator;::dfa()Lscala/util/automata/DetWordAutom;)().(Lscala/util/automata/DetWordAutom;::isFinal(I;)Z;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(this.(Lscala/xml/dtd/ElementValidator;::getIterable(Lscala/collection/Seq;Z;)Lscala/collection/Iterable;)(nodes, false).(Lscala/collection/TraversableOnce;::foldLeft(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(0), (new (Lscala/xml/dtd/ElementValidator$$anonfun$check$6;::this(Lscala/xml/dtd/ElementValidator;)V;)(this)))));
                      }
                    else
                      {
                        throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp42));
                      }
                    $4$ = $9$;
                  }
                $3$ = $4$;
              }
            $2$ = $3$;
          }
        $1$ = $2$;
      }
    return $1$;
  }
  
  public Z; apply(Lscala/xml/Node; n) {
    return ((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/xml/dtd/ElementValidator;::contentModel()Lscala/xml/dtd/ContentModel;)(), null) || this.(Lscala/xml/dtd/ElementValidator;::check(Lscala/collection/Seq;)Z;)(n.(Lscala/xml/Node;::child()Lscala/collection/Seq;)())) && (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(this.(Lscala/xml/dtd/ElementValidator;::adecls()Lscala/collection/immutable/List;)(), null) || this.(Lscala/xml/dtd/ElementValidator;::check(Lscala/xml/MetaData;)Z;)(n.(Lscala/xml/Node;::attributes()Lscala/xml/MetaData;)())));
  }
  
  public Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToBoolean(Z;)Ljava/lang/Boolean;)(this.(Lscala/xml/dtd/ElementValidator;::apply(Lscala/xml/Node;)Z;)(v1.<cast>(Lscala/xml/Node;)));
  }
  
  public final Z; isAllWhitespace$1(Lscala/xml/Atom; a) {
    return Lscala/PartialFunction$;.MODULE$.(Lscala/PartialFunction$;::cond(Ljava/lang/Object;Lscala/PartialFunction;)Z;)(a.(Lscala/xml/Atom;::data()Ljava/lang/Object;)(), (new (Lscala/xml/dtd/ElementValidator$$anonfun$isAllWhitespace$1$1;::this(Lscala/xml/dtd/ElementValidator;)V;)(this)));
  }
  
  public final Z; find$2(Ljava/lang/String; Key$2, Lscala/collection/Seq; branches$1) {
    return branches$1.(Lscala/collection/IterableLike;::exists(Lscala/Function1;)Z;)((new (Lscala/xml/dtd/ElementValidator$$anonfun$find$2$1;::this(Lscala/xml/dtd/ElementValidator;Ljava/lang/String;)V;)(this, Key$2)));
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
    Lscala/Function1$class;.(Lscala/Function1$class;::$init$(Lscala/Function1;)V;)(this);
    this.(Lscala/xml/dtd/ElementValidator;)scala$xml$dtd$ElementValidator$$exc$u0020 = Lscala/collection/immutable/Nil$;.MODULE$;
  }
}
