public final class Lscala/xml/TextBuffer$$anonfun$append$1; extends Lscala/runtime/AbstractFunction1; {
  
  public final Ljava/lang/Object; apply(C; c) {
    Ljava/lang/Object; $2$;
    if (!(Lscala/xml/Utility$;.MODULE$.(Lscala/xml/parsing/TokenTests;::isSpace(C;)Z;)(c)))
      {
        $2$ = this.(Lscala/xml/TextBuffer;)$outer$u0020.(Lscala/xml/TextBuffer;::sb()Lscala/collection/mutable/StringBuilder;)().(Lscala/collection/mutable/StringBuilder;::append(C;)Lscala/collection/mutable/StringBuilder;)(c);
      }
    else
      {
        Ljava/lang/Object; $3$;
        if ((this.(Lscala/xml/TextBuffer;)$outer$u0020.(Lscala/xml/TextBuffer;::sb()Lscala/collection/mutable/StringBuilder;)().(Lscala/collection/IndexedSeqOptimized;::isEmpty()Z;)() || !(Lscala/xml/Utility$;.MODULE$.(Lscala/xml/parsing/TokenTests;::isSpace(C;)Z;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(this.(Lscala/xml/TextBuffer;)$outer$u0020.(Lscala/xml/TextBuffer;::sb()Lscala/collection/mutable/StringBuilder;)().(Lscala/collection/IndexedSeqOptimized;::last()Ljava/lang/Object;)())))))
          {
            $3$ = this.(Lscala/xml/TextBuffer;)$outer$u0020.(Lscala/xml/TextBuffer;::sb()Lscala/collection/mutable/StringBuilder;)().(Lscala/collection/mutable/StringBuilder;::append(C;)Lscala/collection/mutable/StringBuilder;)(' ');
          }
        else
          {
            $3$ = Lscala/runtime/BoxedUnit;.MODULE$.(Lscala/runtime/BoxedUnit;)UNIT;
          }
        $2$ = $3$;
      }
    return $2$;
  }
  
  private Lscala/xml/TextBuffer; $outer$u0020;
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/xml/TextBuffer$$anonfun$append$1;::apply(C;)Ljava/lang/Object;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(v1));
  }
  
  public this(Lscala/xml/TextBuffer; $outer) {
    if (($outer == null))
      {
        throw (new (Ljava/lang/NullPointerException;::this()V;)());
      }
    else
      {
        this.(Lscala/xml/TextBuffer;)$outer$u0020 = $outer;
      }
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
