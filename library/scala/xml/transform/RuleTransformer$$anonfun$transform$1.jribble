public final class Lscala/xml/transform/RuleTransformer$$anonfun$transform$1; extends Lscala/runtime/AbstractFunction2; implements Lscala/Serializable; {
  
  public final Lscala/collection/Seq; apply(Lscala/collection/Seq; res, Lscala/xml/transform/RewriteRule; rule) {
    return rule.(Lscala/xml/transform/RewriteRule;::transform(Lscala/collection/Seq;)Lscala/collection/Seq;)(res);
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1, Ljava/lang/Object; v2) {
    return this.(Lscala/xml/transform/RuleTransformer$$anonfun$transform$1;::apply(Lscala/collection/Seq;Lscala/xml/transform/RewriteRule;)Lscala/collection/Seq;)(v1.<cast>(Lscala/collection/Seq;), v2.<cast>(Lscala/xml/transform/RewriteRule;));
  }
  
  public this(Lscala/xml/transform/RuleTransformer; $outer) {
    (Lscala/runtime/AbstractFunction2;::super()V;)();
  }
}
