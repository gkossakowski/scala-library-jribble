public final class Lscala/xml/NodeSeq$$anonfun$$bslash$bslash$4; extends Lscala/runtime/AbstractFunction1; {
  
  public final Z; apply(Lscala/xml/Node; x) {
    return (!(x.(Lscala/xml/Node;::isAtom()Z;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x.(Lscala/xml/Node;::label()Ljava/lang/String;)(), this.(Ljava/lang/String;)that$2));
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToBoolean(Z;)Ljava/lang/Boolean;)(this.(Lscala/xml/NodeSeq$$anonfun$$bslash$bslash$4;::apply(Lscala/xml/Node;)Z;)(v1.<cast>(Lscala/xml/Node;)));
  }
  
  private Ljava/lang/String; that$2;
  
  public this(Lscala/xml/NodeSeq; $outer, Ljava/lang/String; that$2) {
    this.(Ljava/lang/String;)that$2 = that$2;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
