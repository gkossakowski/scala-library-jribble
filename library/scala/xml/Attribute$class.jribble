public abstract class Lscala/xml/Attribute$class; {
  
  public static Lscala/xml/MetaData; remove(Lscala/xml/Attribute; $this, Ljava/lang/String; key) {
    Lscala/xml/MetaData; $9$;
    if ((!($this.(Lscala/xml/Attribute;::isPrefixed()Z;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)($this.(Lscala/xml/Attribute;::key()Ljava/lang/String;)(), key)))
      {
        $9$ = $this.(Lscala/xml/Attribute;::next()Lscala/xml/MetaData;)();
      }
    else
      {
        $9$ = $this.(Lscala/xml/Attribute;::copy(Lscala/xml/MetaData;)Lscala/xml/Attribute;)($this.(Lscala/xml/Attribute;::next()Lscala/xml/MetaData;)().(Lscala/xml/MetaData;::remove(Ljava/lang/String;)Lscala/xml/MetaData;)(key)).<cast>(Lscala/xml/MetaData;);
      }
    return $9$;
  }
  
  public static Lscala/xml/MetaData; remove(Lscala/xml/Attribute; $this, Ljava/lang/String; namespace, Lscala/xml/NamespaceBinding; scope, Ljava/lang/String; key) {
    Lscala/xml/MetaData; $10$;
    if ((($this.(Lscala/xml/Attribute;::isPrefixed()Z;)() && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)($this.(Lscala/xml/Attribute;::key()Ljava/lang/String;)(), key)) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(scope.(Lscala/xml/NamespaceBinding;::getURI(Ljava/lang/String;)Ljava/lang/String;)($this.(Lscala/xml/Attribute;::pre()Ljava/lang/String;)()), namespace)))
      {
        $10$ = $this.(Lscala/xml/Attribute;::next()Lscala/xml/MetaData;)();
      }
    else
      {
        $10$ = $this.(Lscala/xml/Attribute;::next()Lscala/xml/MetaData;)().(Lscala/xml/MetaData;::remove(Ljava/lang/String;Lscala/xml/NamespaceBinding;Ljava/lang/String;)Lscala/xml/MetaData;)(namespace, scope, key);
      }
    return $10$;
  }
  
  public static Z; isPrefixed(Lscala/xml/Attribute; $this) {
    return ($this.(Lscala/xml/Attribute;::pre()Ljava/lang/String;)() != null);
  }
  
  public static Z; wellformed(Lscala/xml/Attribute; $this, Lscala/xml/NamespaceBinding; scope) {
    Ljava/lang/String; $11$;
    if ($this.(Lscala/xml/Attribute;::isPrefixed()Z;)())
      {
        $11$ = scope.(Lscala/xml/NamespaceBinding;::getURI(Ljava/lang/String;)Ljava/lang/String;)($this.(Lscala/xml/Attribute;::pre()Ljava/lang/String;)());
      }
    else
      {
        $11$ = null;
      }
    Ljava/lang/String; arg = $11$;
    return (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)($this.(Lscala/xml/Attribute;::next()Lscala/xml/MetaData;)().(Lscala/xml/MetaData;::apply(Ljava/lang/String;Lscala/xml/NamespaceBinding;Ljava/lang/String;)Lscala/collection/Seq;)(arg, scope, $this.(Lscala/xml/Attribute;::key()Ljava/lang/String;)()), null) && $this.(Lscala/xml/Attribute;::next()Lscala/xml/MetaData;)().(Lscala/xml/MetaData;::wellformed(Lscala/xml/NamespaceBinding;)Z;)(scope));
  }
  
  public static Z; canEqual(Lscala/xml/Attribute; $this, Ljava/lang/Object; other) {
    Ljava/lang/Object; temp19 = other;
    return temp19.<instanceof>(Lscala/xml/Attribute;);
  }
  
  public static Z; strict_$eq$eq(Lscala/xml/Attribute; $this, Lscala/xml/Equality; other) {
    Lscala/xml/Equality; temp21 = other;
    Z; $12$;
    if (temp21.<instanceof>(Lscala/xml/Attribute;))
      {
        Lscala/xml/Attribute; temp22 = temp21.<cast>(Lscala/xml/Attribute;);
        Lscala/xml/Attribute; x = temp22;
        $12$ = ((Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)($this.(Lscala/xml/Attribute;::pre()Ljava/lang/String;)(), x.(Lscala/xml/Attribute;::pre()Ljava/lang/String;)()) && Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)($this.(Lscala/xml/Attribute;::key()Ljava/lang/String;)(), x.(Lscala/xml/Attribute;::key()Ljava/lang/String;)())) && $this.(Lscala/xml/Attribute;::value()Lscala/collection/Seq;)().(Lscala/collection/IterableLike;::sameElements(Lscala/collection/Iterable;)Z;)(x.(Lscala/xml/Attribute;::value()Lscala/collection/Seq;)()));
      }
    else
      {
        $12$ = false;
      }
    return $12$;
  }
  
  public static Lscala/collection/immutable/List; basisForHashCode(Lscala/xml/Attribute; $this) {
    return Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::apply(Lscala/collection/Seq;)Lscala/collection/immutable/List;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::wrapRefArray(Ljava/lang/Object;[)Lscala/collection/mutable/WrappedArray;)(<Ljava/lang/Object;>{$this.(Lscala/xml/Attribute;::pre()Ljava/lang/String;)(), $this.(Lscala/xml/Attribute;::key()Ljava/lang/String;)(), $this.(Lscala/xml/Attribute;::value()Lscala/collection/Seq;)()}));
  }
  
  public static V; toString1(Lscala/xml/Attribute; $this, Lscala/collection/mutable/StringBuilder; sb) {
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)($this.(Lscala/xml/Attribute;::value()Lscala/collection/Seq;)(), null))
      {
        return;
      }
    else
      {
        
      }
    if ($this.(Lscala/xml/Attribute;::isPrefixed()Z;)())
      {
        sb.(Lscala/collection/mutable/StringBuilder;::append(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)($this.(Lscala/xml/Attribute;::pre()Ljava/lang/String;)()).(Lscala/collection/mutable/StringBuilder;::append(C;)Lscala/collection/mutable/StringBuilder;)(':');
      }
    else
      {
        
      }
    sb.(Lscala/collection/mutable/StringBuilder;::append(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)($this.(Lscala/xml/Attribute;::key()Ljava/lang/String;)()).(Lscala/collection/mutable/StringBuilder;::append(C;)Lscala/collection/mutable/StringBuilder;)('=');
    Lscala/collection/mutable/StringBuilder; sb2 = (new (Lscala/collection/mutable/StringBuilder;::this()V;)());
    Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::sequenceToXML(Lscala/collection/Seq;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z;Z;Z;Z;)V;)($this.(Lscala/xml/Attribute;::value()Lscala/collection/Seq;)(), Lscala/xml/TopScope$;.MODULE$, sb2, true, Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::sequenceToXML$default$5()Z;)(), Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::sequenceToXML$default$6()Z;)(), Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::sequenceToXML$default$7()Z;)());
    Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::appendQuoted(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(sb2.(Lscala/collection/mutable/StringBuilder;::toString()Ljava/lang/String;)(), sb);
  }
  
  public static V; $init$(Lscala/xml/Attribute; $this) {
    
  }
}
