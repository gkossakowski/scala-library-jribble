public class Lscala/xml/PrettyPrinter; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  
  public Lscala/xml/NamespaceBinding; formatNodes$default$2() {
    return null;
  }
  
  public Lscala/xml/NamespaceBinding; format$default$2() {
    return null;
  }
  
  private I; width;
  
  private I; step;
  
  private Lscala/xml/PrettyPrinter$Break$; Break$module;
  
  public final Lscala/xml/PrettyPrinter$Break$; Break() {
    if ((this.(Lscala/xml/PrettyPrinter;)Break$module == null))
      {
        this.(Lscala/xml/PrettyPrinter;)Break$module = (new (Lscala/xml/PrettyPrinter$Break$;::this(Lscala/xml/PrettyPrinter;)V;)(this));
      }
    return this.(Lscala/xml/PrettyPrinter;)Break$module;
  }
  
  private Lscala/collection/immutable/List; items$u0020;
  
  public Lscala/collection/immutable/List; items() {
    return this.(Lscala/xml/PrettyPrinter;)items$u0020;
  }
  
  public V; items_$eq(Lscala/collection/immutable/List; x$1) {
    this.(Lscala/xml/PrettyPrinter;)items$u0020 = x$1;
  }
  
  private I; cur$u0020;
  
  protected I; cur() {
    return this.(Lscala/xml/PrettyPrinter;)cur$u0020;
  }
  
  protected V; cur_$eq(I; x$1) {
    this.(Lscala/xml/PrettyPrinter;)cur$u0020 = x$1;
  }
  
  protected V; reset() {
    this.(Lscala/xml/PrettyPrinter;::cur_$eq(I;)V;)(0);
    this.(Lscala/xml/PrettyPrinter;::items_$eq(Lscala/collection/immutable/List;)V;)(Lscala/collection/immutable/Nil$;.MODULE$);
  }
  
  protected Lscala/collection/immutable/List; cut(Ljava/lang/String; s, I; ind) {
    I; tmp = (this.(Lscala/xml/PrettyPrinter;)width - this.(Lscala/xml/PrettyPrinter;::cur()I;)());
    if ((s.(Ljava/lang/String;::length()I;)() <= tmp))
      {
        return Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::apply(Lscala/collection/Seq;)Lscala/collection/immutable/List;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::wrapRefArray(Ljava/lang/Object;[)Lscala/collection/mutable/WrappedArray;)(<Lscala/xml/PrettyPrinter$Box;>{(new (Lscala/xml/PrettyPrinter$Box;::this(Lscala/xml/PrettyPrinter;I;Ljava/lang/String;)V;)(this, ind, s))}.<cast>(Ljava/lang/Object;[)));
      }
    else
      {
        
      }
    Lscala/collection/mutable/StringBuilder; sb = (new (Lscala/collection/mutable/StringBuilder;::this()V;)());
    I; i = s.(Ljava/lang/String;::indexOf(I;)I;)(32);
    if (((i > tmp) || (i == -1)))
      {
        throw (new (Lscala/xml/PrettyPrinter$BrokenException;::this(Lscala/xml/PrettyPrinter;)V;)(this));
      }
    else
      {
        
      }
    Lscala/collection/immutable/List; last = Lscala/collection/immutable/Nil$;.MODULE$;
    while$1: while(true) {
      if (((i != -1) && (i < tmp)))
        {
          {
            I; x$1 = i;
            last = last.(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1));
            i = s.(Ljava/lang/String;::indexOf(I;I;)I;)(32, (i + 1));
          }
          continue while$1;
        }
      else
        {
          
        }
      break;
    }
    Lscala/collection/immutable/List; res = Lscala/collection/immutable/Nil$;.MODULE$;
    while$2: while(true) {
      if ((Lscala/collection/immutable/Nil$;.MODULE$ != last))
        {
          try {
            Lscala/xml/PrettyPrinter$Box; b = (new (Lscala/xml/PrettyPrinter$Box;::this(Lscala/xml/PrettyPrinter;I;Ljava/lang/String;)V;)(this, ind, s.(Ljava/lang/String;::substring(I;I;)Ljava/lang/String;)(0, Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(last.(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)()))));
            this.(Lscala/xml/PrettyPrinter;::cur_$eq(I;)V;)(ind);
            Lscala/xml/PrettyPrinter$Box; x$3 = b;
            Lscala/xml/PrettyPrinter$Break$; x$2 = this.(Lscala/xml/PrettyPrinter;::Break()Lscala/xml/PrettyPrinter$Break$;)();
            res = this.(Lscala/xml/PrettyPrinter;::cut(Ljava/lang/String;I;)Lscala/collection/immutable/List;)(s.(Ljava/lang/String;::substring(I;I;)Ljava/lang/String;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(last.(Lscala/collection/IterableLike;::head()Ljava/lang/Object;)()), s.(Ljava/lang/String;::length()I;)()), ind).(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x$2).(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x$3);
            last = last.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
          } catch(Lscala/xml/PrettyPrinter$BrokenException; $WILDCARD) {
            last = last.(Lscala/collection/TraversableLike;::tail()Ljava/lang/Object;)().<cast>(Lscala/collection/immutable/List;);
          }
          continue while$2;
        }
      else
        {
          
        }
      break;
    }
    throw (new (Lscala/xml/PrettyPrinter$BrokenException;::this(Lscala/xml/PrettyPrinter;)V;)(this));
  }
  
  protected V; makeBox(I; ind, Ljava/lang/String; s) {
    if (((this.(Lscala/xml/PrettyPrinter;::cur()I;)() + s.(Ljava/lang/String;::length()I;)()) > this.(Lscala/xml/PrettyPrinter;)width))
      {
        this.(Lscala/xml/PrettyPrinter;::items_$eq(Lscala/collection/immutable/List;)V;)(this.(Lscala/xml/PrettyPrinter;::items()Lscala/collection/immutable/List;)().(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)((new (Lscala/xml/PrettyPrinter$Box;::this(Lscala/xml/PrettyPrinter;I;Ljava/lang/String;)V;)(this, ind, s))));
        this.(Lscala/xml/PrettyPrinter;::cur_$eq(I;)V;)((this.(Lscala/xml/PrettyPrinter;::cur()I;)() + s.(Ljava/lang/String;::length()I;)()));
      }
    else
      {
        try {
          this.(Lscala/xml/PrettyPrinter;::cut(Ljava/lang/String;I;)Lscala/collection/immutable/List;)(s, ind).(Lscala/collection/LinearSeqOptimized;::foreach(Lscala/Function1;)V;)((new (Lscala/xml/PrettyPrinter$$anonfun$makeBox$1;::this(Lscala/xml/PrettyPrinter;)V;)(this)));
        } catch(Lscala/xml/PrettyPrinter$BrokenException; $WILDCARD) {
          this.(Lscala/xml/PrettyPrinter;::makePara(I;Ljava/lang/String;)V;)(ind, s);
        }
      }
  }
  
  protected V; makePara(I; ind, Ljava/lang/String; s) {
    Lscala/xml/PrettyPrinter$Break$; x$7 = this.(Lscala/xml/PrettyPrinter;::Break()Lscala/xml/PrettyPrinter$Break$;)();
    Lscala/xml/PrettyPrinter$Para; x$6 = (new (Lscala/xml/PrettyPrinter$Para;::this(Lscala/xml/PrettyPrinter;Ljava/lang/String;)V;)(this, s));
    Lscala/xml/PrettyPrinter$Break$; x$5 = this.(Lscala/xml/PrettyPrinter;::Break()Lscala/xml/PrettyPrinter$Break$;)();
    this.(Lscala/xml/PrettyPrinter;::items_$eq(Lscala/collection/immutable/List;)V;)(this.(Lscala/xml/PrettyPrinter;::items()Lscala/collection/immutable/List;)().(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x$5).(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x$6).(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x$7));
    this.(Lscala/xml/PrettyPrinter;::cur_$eq(I;)V;)(ind);
  }
  
  public V; makeBreak() {
    Lscala/xml/PrettyPrinter$Break$; x$8 = this.(Lscala/xml/PrettyPrinter;::Break()Lscala/xml/PrettyPrinter$Break$;)();
    this.(Lscala/xml/PrettyPrinter;::items_$eq(Lscala/collection/immutable/List;)V;)(this.(Lscala/xml/PrettyPrinter;::items()Lscala/collection/immutable/List;)().(Lscala/collection/immutable/List;::$colon$colon(Ljava/lang/Object;)Lscala/collection/immutable/List;)(x$8));
    this.(Lscala/xml/PrettyPrinter;::cur_$eq(I;)V;)(0);
  }
  
  protected Ljava/lang/String; leafTag(Lscala/xml/Node; n$1) {
    return Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::sbToString(Lscala/Function1;)Ljava/lang/String;)((new (Lscala/xml/PrettyPrinter$$anonfun$leafTag$1;::this(Lscala/xml/PrettyPrinter;Lscala/xml/Node;)V;)(this, n$1)));
  }
  
  protected Lscala/Tuple2; startTag(Lscala/xml/Node; n$2, Lscala/xml/NamespaceBinding; pscope$1) {
    Lscala/runtime/IntRef; i$1 = (new (Lscala/runtime/IntRef;::this(I;)V;)(0));
    return (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::sbToString(Lscala/Function1;)Ljava/lang/String;)((new (Lscala/xml/PrettyPrinter$$anonfun$startTag$1;::this(Lscala/xml/PrettyPrinter;Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/runtime/IntRef;)V;)(this, n$2, pscope$1, i$1))), Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(i$1.(Lscala/runtime/IntRef;)elem)));
  }
  
  protected Ljava/lang/String; endTag(Lscala/xml/Node; n$3) {
    return Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::sbToString(Lscala/Function1;)Ljava/lang/String;)((new (Lscala/xml/PrettyPrinter$$anonfun$endTag$1;::this(Lscala/xml/PrettyPrinter;Lscala/xml/Node;)V;)(this, n$3)));
  }
  
  protected Z; childrenAreLeaves(Lscala/xml/Node; n) {
    return n.(Lscala/xml/Node;::child()Lscala/collection/Seq;)().(Lscala/collection/IterableLike;::forall(Lscala/Function1;)Z;)((new (Lscala/xml/PrettyPrinter$$anonfun$childrenAreLeaves$1;::this(Lscala/xml/PrettyPrinter;)V;)(this)));
  }
  
  protected Z; fits(Ljava/lang/String; test) {
    return (test.(Ljava/lang/String;::length()I;)() < (this.(Lscala/xml/PrettyPrinter;)width - this.(Lscala/xml/PrettyPrinter;::cur()I;)()));
  }
  
  private Z; doPreserve(Lscala/xml/Node; node) {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToBoolean(Ljava/lang/Object;)Z;)(node.(Lscala/xml/Node;::attribute(Ljava/lang/String;Ljava/lang/String;)Lscala/Option;)(Lscala/xml/XML$;.MODULE$.(Lscala/xml/XML$;::namespace()Ljava/lang/String;)(), Lscala/xml/XML$;.MODULE$.(Lscala/xml/XML$;::space()Ljava/lang/String;)()).(Lscala/Option;::map(Lscala/Function1;)Lscala/Option;)((new (Lscala/xml/PrettyPrinter$$anonfun$doPreserve$1;::this(Lscala/xml/PrettyPrinter;)V;)(this))).(Lscala/Option;::getOrElse(Lscala/Function0;)Ljava/lang/Object;)((new (Lscala/xml/PrettyPrinter$$anonfun$doPreserve$2;::this(Lscala/xml/PrettyPrinter;)V;)(this))));
  }
  
  public V; traverse(Lscala/xml/Node; node, Lscala/xml/NamespaceBinding; pscope, I; ind) {
    Lscala/xml/Node; temp23 = node;
    if (temp23.<instanceof>(Lscala/xml/Text;))
      {
        if (this.(Lscala/xml/PrettyPrinter;::gd3$1(Ljava/lang/String;)Z;)(temp23.<cast>(Lscala/xml/Text;).(Lscala/xml/Text;::_data()Ljava/lang/String;)()))
          {
            
          }
        else
          {
            this.(Lscala/xml/PrettyPrinter;::body$percent1$percent1()V;)();
          }
      }
    else
      {
        if (temp23.<instanceof>(Lscala/xml/Atom;))
          {
            this.(Lscala/xml/PrettyPrinter;::body$percent1$percent1()V;)();
          }
        else
          {
            if (temp23.<instanceof>(Lscala/xml/Comment;))
              {
                this.(Lscala/xml/PrettyPrinter;::body$percent1$percent1()V;)();
              }
            else
              {
                if (temp23.<instanceof>(Lscala/xml/EntityRef;))
                  {
                    this.(Lscala/xml/PrettyPrinter;::body$percent1$percent1()V;)();
                  }
                else
                  {
                    if (temp23.<instanceof>(Lscala/xml/ProcInstr;))
                      {
                        this.(Lscala/xml/PrettyPrinter;::body$percent1$percent1()V;)();
                      }
                    else
                      {
                        if (temp23.<instanceof>(Lscala/xml/Group;))
                          {
                            this.(Lscala/xml/PrettyPrinter;::traverse(Lscala/collection/Iterator;Lscala/xml/NamespaceBinding;I;)V;)(temp23.<cast>(Lscala/xml/Group;).(Lscala/xml/Group;::nodes()Lscala/collection/Seq;)().(Lscala/collection/IterableLike;::iterator()Lscala/collection/Iterator;)(), pscope, ind);
                          }
                        else
                          {
                            Lscala/collection/mutable/StringBuilder; sb = (new (Lscala/collection/mutable/StringBuilder;::this()V;)());
                            Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::toXML(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z;Z;Z;Z;)Lscala/collection/mutable/StringBuilder;)(node, pscope, sb, false, Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::toXML$default$5()Z;)(), Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::toXML$default$6()Z;)(), Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::toXML$default$7()Z;)());
                            Ljava/lang/String; $1$;
                            if (this.(Lscala/xml/PrettyPrinter;::doPreserve(Lscala/xml/Node;)Z;)(node))
                              {
                                $1$ = sb.(Lscala/collection/mutable/StringBuilder;::toString()Ljava/lang/String;)();
                              }
                            else
                              {
                                $1$ = Lscala/xml/TextBuffer$;.MODULE$.(Lscala/xml/TextBuffer$;::fromString(Ljava/lang/String;)Lscala/xml/TextBuffer;)(sb.(Lscala/collection/mutable/StringBuilder;::toString()Ljava/lang/String;)()).(Lscala/xml/TextBuffer;::toText()Lscala/collection/Seq;)().(Lscala/collection/SeqLike;::apply(I;)Ljava/lang/Object;)(0).<cast>(Lscala/xml/Atom;).(Lscala/xml/Atom;::data()Ljava/lang/Object;)().<cast>(Ljava/lang/String;);
                              }
                            Ljava/lang/String; test = $1$;
                            if ((this.(Lscala/xml/PrettyPrinter;::childrenAreLeaves(Lscala/xml/Node;)Z;)(node) && this.(Lscala/xml/PrettyPrinter;::fits(Ljava/lang/String;)Z;)(test)))
                              {
                                this.(Lscala/xml/PrettyPrinter;::makeBox(I;Ljava/lang/String;)V;)(ind, test);
                              }
                            else
                              {
                                Lscala/Tuple2; temp20 = this.(Lscala/xml/PrettyPrinter;::startTag(Lscala/xml/Node;Lscala/xml/NamespaceBinding;)Lscala/Tuple2;)(node, pscope);
                                Lscala/Tuple2; $2$;
                                if ((temp20 != null))
                                  {
                                    $2$ = (new (Lscala/Tuple2;::this(Ljava/lang/Object;Ljava/lang/Object;)V;)(temp20.(Lscala/Tuple2;::_1()Ljava/lang/Object;)(), temp20.(Lscala/Tuple2;::_2()Ljava/lang/Object;)()));
                                  }
                                else
                                  {
                                    throw (new (Lscala/MatchError;::this(Ljava/lang/Object;)V;)(temp20));
                                  }
                                Lscala/Tuple2; x$10 = $2$;
                                Ljava/lang/String; stg = x$10.(Lscala/Tuple2;::_1()Ljava/lang/Object;)().<cast>(Ljava/lang/String;);
                                I; len2 = Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToInt(Ljava/lang/Object;)I;)(x$10.(Lscala/Tuple2;::_2()Ljava/lang/Object;)());
                                Ljava/lang/String; etg = this.(Lscala/xml/PrettyPrinter;::endTag(Lscala/xml/Node;)Ljava/lang/String;)(node);
                                if ((stg.(Ljava/lang/String;::length()I;)() < (this.(Lscala/xml/PrettyPrinter;)width - this.(Lscala/xml/PrettyPrinter;::cur()I;)())))
                                  {
                                    this.(Lscala/xml/PrettyPrinter;::makeBox(I;Ljava/lang/String;)V;)(ind, stg);
                                    this.(Lscala/xml/PrettyPrinter;::makeBreak()V;)();
                                    this.(Lscala/xml/PrettyPrinter;::traverse(Lscala/collection/Iterator;Lscala/xml/NamespaceBinding;I;)V;)(node.(Lscala/xml/Node;::child()Lscala/collection/Seq;)().(Lscala/collection/IterableLike;::iterator()Lscala/collection/Iterator;)(), node.(Lscala/xml/Node;::scope()Lscala/xml/NamespaceBinding;)(), (ind + this.(Lscala/xml/PrettyPrinter;)step));
                                    this.(Lscala/xml/PrettyPrinter;::makeBox(I;Ljava/lang/String;)V;)(ind, etg);
                                  }
                                else
                                  {
                                    if ((len2 < (this.(Lscala/xml/PrettyPrinter;)width - this.(Lscala/xml/PrettyPrinter;::cur()I;)())))
                                      {
                                        this.(Lscala/xml/PrettyPrinter;::makeBox(I;Ljava/lang/String;)V;)(ind, stg.(Ljava/lang/String;::substring(I;I;)Ljava/lang/String;)(0, len2));
                                        this.(Lscala/xml/PrettyPrinter;::makeBreak()V;)();
                                        this.(Lscala/xml/PrettyPrinter;::makeBox(I;Ljava/lang/String;)V;)(ind, stg.(Ljava/lang/String;::substring(I;I;)Ljava/lang/String;)(len2, stg.(Ljava/lang/String;::length()I;)()));
                                        this.(Lscala/xml/PrettyPrinter;::makeBreak()V;)();
                                        this.(Lscala/xml/PrettyPrinter;::traverse(Lscala/collection/Iterator;Lscala/xml/NamespaceBinding;I;)V;)(node.(Lscala/xml/Node;::child()Lscala/collection/Seq;)().(Lscala/collection/IterableLike;::iterator()Lscala/collection/Iterator;)(), node.(Lscala/xml/Node;::scope()Lscala/xml/NamespaceBinding;)(), (ind + this.(Lscala/xml/PrettyPrinter;)step));
                                        this.(Lscala/xml/PrettyPrinter;::makeBox(I;Ljava/lang/String;)V;)(this.(Lscala/xml/PrettyPrinter;::cur()I;)(), etg);
                                        this.(Lscala/xml/PrettyPrinter;::makeBreak()V;)();
                                      }
                                    else
                                      {
                                        this.(Lscala/xml/PrettyPrinter;::makeBox(I;Ljava/lang/String;)V;)(ind, test);
                                        this.(Lscala/xml/PrettyPrinter;::makeBreak()V;)();
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }
      }
  }
  
  protected V; traverse(Lscala/collection/Iterator; it, Lscala/xml/NamespaceBinding; scope$1, I; ind$1) {
    it.(Lscala/collection/Iterator;::foreach(Lscala/Function1;)V;)((new (Lscala/xml/PrettyPrinter$$anonfun$traverse$1;::this(Lscala/xml/PrettyPrinter;Lscala/xml/NamespaceBinding;I;)V;)(this, scope$1, ind$1)));
  }
  
  public V; format(Lscala/xml/Node; n, Lscala/collection/mutable/StringBuilder; sb) {
    this.(Lscala/xml/PrettyPrinter;::format(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V;)(n, null, sb);
  }
  
  public V; format(Lscala/xml/Node; n, Lscala/xml/NamespaceBinding; pscope, Lscala/collection/mutable/StringBuilder; sb$1) {
    Lscala/runtime/BooleanRef; lastwasbreak$1 = (new (Lscala/runtime/BooleanRef;::this(Z;)V;)(false));
    this.(Lscala/xml/PrettyPrinter;::reset()V;)();
    this.(Lscala/xml/PrettyPrinter;::traverse(Lscala/xml/Node;Lscala/xml/NamespaceBinding;I;)V;)(n, pscope, 0);
    Lscala/runtime/IntRef; cur$1 = (new (Lscala/runtime/IntRef;::this(I;)V;)(0));
    this.(Lscala/xml/PrettyPrinter;::items()Lscala/collection/immutable/List;)().(Lscala/collection/immutable/List;::reverse()Lscala/collection/immutable/List;)().(Lscala/collection/LinearSeqOptimized;::foreach(Lscala/Function1;)V;)((new (Lscala/xml/PrettyPrinter$$anonfun$format$1;::this(Lscala/xml/PrettyPrinter;Lscala/collection/mutable/StringBuilder;Lscala/runtime/BooleanRef;Lscala/runtime/IntRef;)V;)(this, sb$1, lastwasbreak$1, cur$1)));
  }
  
  public Ljava/lang/String; format(Lscala/xml/Node; n$4, Lscala/xml/NamespaceBinding; pscope$2) {
    return Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::sbToString(Lscala/Function1;)Ljava/lang/String;)((new (Lscala/xml/PrettyPrinter$$anonfun$format$2;::this(Lscala/xml/PrettyPrinter;Lscala/xml/Node;Lscala/xml/NamespaceBinding;)V;)(this, n$4, pscope$2)));
  }
  
  public Ljava/lang/String; formatNodes(Lscala/collection/Seq; nodes$1, Lscala/xml/NamespaceBinding; pscope$3) {
    return Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::sbToString(Lscala/Function1;)Ljava/lang/String;)((new (Lscala/xml/PrettyPrinter$$anonfun$formatNodes$1;::this(Lscala/xml/PrettyPrinter;Lscala/collection/Seq;Lscala/xml/NamespaceBinding;)V;)(this, nodes$1, pscope$3)));
  }
  
  public V; formatNodes(Lscala/collection/Seq; nodes, Lscala/xml/NamespaceBinding; pscope$4, Lscala/collection/mutable/StringBuilder; sb$2) {
    nodes.(Lscala/collection/IterableLike;::foreach(Lscala/Function1;)V;)((new (Lscala/xml/PrettyPrinter$$anonfun$formatNodes$2;::this(Lscala/xml/PrettyPrinter;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;)V;)(this, pscope$4, sb$2)));
  }
  
  private Lscala/xml/PrettyPrinter$Para$; Para$module;
  
  public final Lscala/xml/PrettyPrinter$Para$; Para() {
    if ((this.(Lscala/xml/PrettyPrinter;)Para$module == null))
      {
        this.(Lscala/xml/PrettyPrinter;)Para$module = (new (Lscala/xml/PrettyPrinter$Para$;::this(Lscala/xml/PrettyPrinter;)V;)(this));
      }
    return this.(Lscala/xml/PrettyPrinter;)Para$module;
  }
  
  private Lscala/xml/PrettyPrinter$Box$; Box$module;
  
  public final Lscala/xml/PrettyPrinter$Box$; Box() {
    if ((this.(Lscala/xml/PrettyPrinter;)Box$module == null))
      {
        this.(Lscala/xml/PrettyPrinter;)Box$module = (new (Lscala/xml/PrettyPrinter$Box$;::this(Lscala/xml/PrettyPrinter;)V;)(this));
      }
    return this.(Lscala/xml/PrettyPrinter;)Box$module;
  }
  
  public final V; mkLeaf$1(Lscala/collection/mutable/StringBuilder; sb, Lscala/xml/Node; n$1) {
    sb.(Lscala/collection/mutable/StringBuilder;::append(C;)Lscala/collection/mutable/StringBuilder;)('<');
    n$1.(Lscala/xml/Node;::nameToString(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(sb);
    n$1.(Lscala/xml/Node;::attributes()Lscala/xml/MetaData;)().(Lscala/xml/MetaData;::buildString(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(sb);
    sb.(Lscala/collection/mutable/StringBuilder;::append(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)("/>");
  }
  
  public final V; mkStart$1(Lscala/collection/mutable/StringBuilder; sb, Lscala/xml/Node; n$2, Lscala/xml/NamespaceBinding; pscope$1, Lscala/runtime/IntRef; i$1) {
    sb.(Lscala/collection/mutable/StringBuilder;::append(C;)Lscala/collection/mutable/StringBuilder;)('<');
    n$2.(Lscala/xml/Node;::nameToString(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(sb);
    i$1.(Lscala/runtime/IntRef;)elem = (sb.(Lscala/collection/mutable/StringBuilder;::length()I;)() + 1);
    n$2.(Lscala/xml/Node;::attributes()Lscala/xml/MetaData;)().(Lscala/xml/MetaData;::buildString(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(sb);
    n$2.(Lscala/xml/Node;::scope()Lscala/xml/NamespaceBinding;)().(Lscala/xml/NamespaceBinding;::buildString(Lscala/collection/mutable/StringBuilder;Lscala/xml/NamespaceBinding;)V;)(sb, pscope$1);
    sb.(Lscala/collection/mutable/StringBuilder;::append(C;)Lscala/collection/mutable/StringBuilder;)('>');
  }
  
  public final V; mkEnd$1(Lscala/collection/mutable/StringBuilder; sb, Lscala/xml/Node; n$3) {
    sb.(Lscala/collection/mutable/StringBuilder;::append(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)("</");
    n$3.(Lscala/xml/Node;::nameToString(Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(sb);
    sb.(Lscala/collection/mutable/StringBuilder;::append(C;)Lscala/collection/mutable/StringBuilder;)('>');
  }
  
  public final Z; isLeaf$1(Lscala/xml/Node; l) {
    Lscala/xml/Node; temp11 = l;
    Z; $3$;
    if (temp11.<instanceof>(Lscala/xml/Atom;))
      {
        $3$ = true;
      }
    else
      {
        Z; $4$;
        if (temp11.<instanceof>(Lscala/xml/Comment;))
          {
            $4$ = true;
          }
        else
          {
            Z; $5$;
            if (temp11.<instanceof>(Lscala/xml/EntityRef;))
              {
                $5$ = true;
              }
            else
              {
                $5$ = temp11.<instanceof>(Lscala/xml/ProcInstr;);
              }
            $4$ = $5$;
          }
        $3$ = $4$;
      }
    return $3$;
  }
  
  private final Z; gd3$1(Ljava/lang/String; x$1) {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$1.(Ljava/lang/String;::trim()Ljava/lang/String;)(), "");
  }
  
  public this(I; width, I; step) {
    this.(Lscala/xml/PrettyPrinter;)width = width;
    this.(Lscala/xml/PrettyPrinter;)step = step;
    (Ljava/lang/Object;::super()V;)();
    this.(Lscala/xml/PrettyPrinter;)items$u0020 = Lscala/collection/immutable/Nil$;.MODULE$;
    this.(Lscala/xml/PrettyPrinter;)cur$u0020 = 0;
  }
  
  private final V; body$percent1$percent1() {
    this.(Lscala/xml/PrettyPrinter;::makeBox(I;Ljava/lang/String;)V;)(ind, node.(Lscala/xml/Node;::toString()Ljava/lang/String;)().(Ljava/lang/String;::trim()Ljava/lang/String;)());
  }
}
