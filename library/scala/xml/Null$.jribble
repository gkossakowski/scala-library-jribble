public final class Lscala/xml/Null$; extends Lscala/xml/MetaData; implements Lscala/ScalaObject;, Lscala/Product;, Lscala/Serializable; {
  public static Lscala/xml/Null$; MODULE$ = new (Lscala/xml/Null$;::this()V;)();
  
  public Lscala/collection/Iterator; productIterator() {
    return Lscala/Product$class;.(Lscala/Product$class;::productIterator(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; productElements() {
    return Lscala/Product$class;.(Lscala/Product$class;::productElements(Lscala/Product;)Lscala/collection/Iterator;)(this);
  }
  
  public Lscala/collection/Iterator; iterator() {
    return Lscala/collection/Iterator$;.MODULE$.(Lscala/collection/Iterator$;::empty()Lscala/collection/Iterator;)();
  }
  
  public Lscala/xml/MetaData; append(Lscala/xml/MetaData; m, Lscala/xml/NamespaceBinding; scope) {
    return m;
  }
  
  public Lscala/xml/NamespaceBinding; append$default$2() {
    return Lscala/xml/TopScope$;.MODULE$;
  }
  
  public Lscala/xml/MetaData; filter(Lscala/Function1; f) {
    return this;
  }
  
  public Lscala/xml/MetaData; copy(Lscala/xml/MetaData; next) {
    return next;
  }
  
  public Lscala/runtime/Null$; getNamespace(Lscala/xml/Node; owner) {
    return null;
  }
  
  public Z; hasNext() {
    return false;
  }
  
  public Lscala/runtime/Null$; next() {
    return null;
  }
  
  public Lscala/runtime/Null$; key() {
    return null;
  }
  
  public Lscala/runtime/Null$; value() {
    return null;
  }
  
  public Z; isPrefixed() {
    return false;
  }
  
  public I; length() {
    return 0;
  }
  
  public I; length(I; i) {
    return i;
  }
  
  public Z; strict_$eq$eq(Lscala/xml/Equality; other) {
    Lscala/xml/Equality; temp1 = other;
    Z; $1$;
    if (temp1.<instanceof>(Lscala/xml/MetaData;))
      {
        $1$ = (temp1.<cast>(Lscala/xml/MetaData;).(Lscala/xml/MetaData;::length()I;)() == 0);
      }
    else
      {
        $1$ = false;
      }
    return $1$;
  }
  
  public Lscala/collection/Seq; basisForHashCode() {
    return Lscala/collection/immutable/Nil$;.MODULE$;
  }
  
  public Lscala/runtime/Null$; apply(Ljava/lang/String; namespace, Lscala/xml/NamespaceBinding; scope, Ljava/lang/String; key) {
    return null;
  }
  
  public Lscala/runtime/Null$; apply(Ljava/lang/String; key) {
    if (!(Lscala/xml/Utility$;.MODULE$.(Lscala/xml/parsing/TokenTests;::isNameStart(C;)Z;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::unboxToChar(Ljava/lang/Object;)C;)(Lscala/Predef$;.MODULE$.(Lscala/Predef$;::augmentString(Ljava/lang/String;)Lscala/collection/immutable/StringOps;)(key).(Lscala/collection/IndexedSeqOptimized;::head()Ljava/lang/Object;)()))))
      {
        throw (new (Ljava/lang/IllegalArgumentException;::this(Ljava/lang/String;)V;)((("not a valid attribute name \'" + key) + "\', so can never match !")));
      }
    else
      {
        
      }
    return null;
  }
  
  public V; toString1(Lscala/collection/mutable/StringBuilder; sb) {
    
  }
  
  public Ljava/lang/String; toString1() {
    return "";
  }
  
  public Ljava/lang/String; toString() {
    return "";
  }
  
  public Lscala/collection/mutable/StringBuilder; buildString(Lscala/collection/mutable/StringBuilder; sb) {
    return sb;
  }
  
  public Z; wellformed(Lscala/xml/NamespaceBinding; scope) {
    return true;
  }
  
  public Lscala/xml/Null$; remove(Ljava/lang/String; key) {
    return this;
  }
  
  public Lscala/xml/Null$; remove(Ljava/lang/String; namespace, Lscala/xml/NamespaceBinding; scope, Ljava/lang/String; key) {
    return this;
  }
  
  public Ljava/lang/String; productPrefix() {
    return "Null";
  }
  
  public I; productArity() {
    return 0;
  }
  
  public Ljava/lang/Object; productElement(I; x$1) {
    I; temp3 = x$1;
    throw (new (Ljava/lang/IndexOutOfBoundsException;::this(Ljava/lang/String;)V;)(Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::boxToInteger(I;)Ljava/lang/Integer;)(x$1).(Ljava/lang/Object;::toString()Ljava/lang/String;)()));
  }
  
  protected Ljava/lang/Object; readResolve() {
    return Lscala/xml/Null$;.MODULE$;
  }
  
  public Lscala/xml/MetaData; remove(Ljava/lang/String; namespace, Lscala/xml/NamespaceBinding; scope, Ljava/lang/String; key) {
    return this.(Lscala/xml/Null$;::remove(Ljava/lang/String;Lscala/xml/NamespaceBinding;Ljava/lang/String;)Lscala/xml/Null$;)(namespace, scope, key);
  }
  
  public Lscala/xml/MetaData; remove(Ljava/lang/String; key) {
    return this.(Lscala/xml/Null$;::remove(Ljava/lang/String;)Lscala/xml/Null$;)(key);
  }
  
  public Lscala/collection/Seq; apply(Ljava/lang/String; key) {
    return this.(Lscala/xml/Null$;::apply(Ljava/lang/String;)Lscala/runtime/Null$;)(key);
  }
  
  public Lscala/collection/Seq; apply(Ljava/lang/String; namespace_uri, Lscala/xml/NamespaceBinding; scp, Ljava/lang/String; k) {
    return this.(Lscala/xml/Null$;::apply(Ljava/lang/String;Lscala/xml/NamespaceBinding;Ljava/lang/String;)Lscala/runtime/Null$;)(namespace_uri, scp, k);
  }
  
  public Lscala/collection/Seq; value() {
    return this.(Lscala/xml/Null$;::value()Lscala/runtime/Null$;)();
  }
  
  public Ljava/lang/String; key() {
    return this.(Lscala/xml/Null$;::key()Lscala/runtime/Null$;)();
  }
  
  public Lscala/xml/MetaData; next() {
    return this.(Lscala/xml/Null$;::next()Lscala/runtime/Null$;)();
  }
  
  public Ljava/lang/String; getNamespace(Lscala/xml/Node; owner) {
    return this.(Lscala/xml/Null$;::getNamespace(Lscala/xml/Node;)Lscala/runtime/Null$;)(owner);
  }
  
  public Ljava/lang/Object; filter(Lscala/Function1; p) {
    return this.(Lscala/xml/Null$;::filter(Lscala/Function1;)Lscala/xml/MetaData;)(p);
  }
  
  public this() {
    (Lscala/xml/MetaData;::super()V;)();
    Lscala/Product$class;.(Lscala/Product$class;::$init$(Lscala/Product;)V;)(this);
  }
}
