public class Lscala/xml/Text; extends Lscala/xml/Atom; implements Lscala/ScalaObject; {
  public final static Lscala/Option; unapply(Ljava/lang/Object; x_0) { return Lscala/xml/Text$;.MODULE$.(Lscala/xml/Text$;::unapply(Ljava/lang/Object;)Lscala/Option;)(x_0); }
  
  
  public Lscala/collection/mutable/StringBuilder; buildString(Lscala/collection/mutable/StringBuilder; sb) {
    return Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::escape(Ljava/lang/String;Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;)(super.(Lscala/xml/Atom;::data()Ljava/lang/Object;)().<cast>(Ljava/lang/String;), sb);
  }
  
  public this(Ljava/lang/String; data) {
    (Lscala/xml/Atom;::super(Ljava/lang/Object;)V;)(data);
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(super.(Lscala/xml/Atom;::data()Ljava/lang/Object;)().<cast>(Ljava/lang/String;), null))
      {
        throw (new (Ljava/lang/IllegalArgumentException;::this(Ljava/lang/String;)V;)("tried to construct Text with null"));
      }
    else
      {
        
      }
  }
}
