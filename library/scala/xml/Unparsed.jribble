public class Lscala/xml/Unparsed; extends Lscala/xml/Atom; implements Lscala/ScalaObject; {
  public final static Lscala/Some; unapply(Lscala/xml/Unparsed; x_0) { return Lscala/xml/Unparsed$;.MODULE$.(Lscala/xml/Unparsed$;::unapply(Lscala/xml/Unparsed;)Lscala/Some;)(x_0); }
  
  
  public Lscala/collection/mutable/StringBuilder; buildString(Lscala/collection/mutable/StringBuilder; sb) {
    return sb.(Lscala/collection/mutable/StringBuilder;::append(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;)(super.(Lscala/xml/Atom;::data()Ljava/lang/Object;)().<cast>(Ljava/lang/String;));
  }
  
  public this(Ljava/lang/String; data) {
    (Lscala/xml/Atom;::super(Ljava/lang/Object;)V;)(data);
    if (Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(null, super.(Lscala/xml/Atom;::data()Ljava/lang/Object;)().<cast>(Ljava/lang/String;)))
      {
        throw (new (Ljava/lang/IllegalArgumentException;::this(Ljava/lang/String;)V;)("tried to construct Unparsed with null"));
      }
    else
      {
        
      }
  }
}
