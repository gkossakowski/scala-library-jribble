public final class Lscala/xml/Utility$$anonfun$sequenceToXML$2; extends Lscala/runtime/AbstractFunction1; {
  
  public final Lscala/collection/mutable/StringBuilder; apply(Lscala/xml/Node; x$4) {
    return Lscala/xml/Utility$;.MODULE$.(Lscala/xml/Utility$;::toXML(Lscala/xml/Node;Lscala/xml/NamespaceBinding;Lscala/collection/mutable/StringBuilder;Z;Z;Z;Z;)Lscala/collection/mutable/StringBuilder;)(x$4, this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)pscope$1, this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)sb$1, this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)stripComments$1, this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)decodeEntities$1, this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)preserveWhitespace$1, this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)minimizeTags$1);
  }
  
  public final Ljava/lang/Object; apply(Ljava/lang/Object; v1) {
    return this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;::apply(Lscala/xml/Node;)Lscala/collection/mutable/StringBuilder;)(v1.<cast>(Lscala/xml/Node;));
  }
  
  private Lscala/xml/NamespaceBinding; pscope$1;
  
  private Lscala/collection/mutable/StringBuilder; sb$1;
  
  private Z; stripComments$1;
  
  private Z; decodeEntities$1;
  
  private Z; preserveWhitespace$1;
  
  private Z; minimizeTags$1;
  
  public this(Lscala/xml/NamespaceBinding; pscope$1, Lscala/collection/mutable/StringBuilder; sb$1, Z; stripComments$1, Z; decodeEntities$1, Z; preserveWhitespace$1, Z; minimizeTags$1) {
    this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)pscope$1 = pscope$1;
    this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)sb$1 = sb$1;
    this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)stripComments$1 = stripComments$1;
    this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)decodeEntities$1 = decodeEntities$1;
    this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)preserveWhitespace$1 = preserveWhitespace$1;
    this.(Lscala/xml/Utility$$anonfun$sequenceToXML$2;)minimizeTags$1 = minimizeTags$1;
    (Lscala/runtime/AbstractFunction1;::super()V;)();
  }
}
